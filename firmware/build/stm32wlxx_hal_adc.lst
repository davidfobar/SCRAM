ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c"
  18              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	LL_ADC_SetAnalogWDMonitChannels:
  25              	.LVL0:
  26              	.LFB341:
  27              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @file    stm32wlxx_ll_adc.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifndef STM32WLxx_LL_ADC_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define STM32WLxx_LL_ADC_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #include "stm32wlxx.h"
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 2


  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined (ADC)
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger source                                                   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger edge                                                     */
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                    compatibility with some ADC on o
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                    having this setting set by HW de
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 3


  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by number                                     */
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ADC_CHANNEL_ID_NUMBER_MASK with reduced range: on this STM32 series, ADC group regular sequencer,
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if set to mode "fully configurable", can contain channels with a restricted channel number.
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   Refer to function @ref LL_ADC_REG_SetSequencerConfigurable(). */
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                    position in register */
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 4


 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* the relevant bits for:                                                     */
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   common sampling time available.                                          */
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection on groups.                                                     */
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 5


 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                threshold high: mask
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                threshold high: posi
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                position to perform 
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits positions */
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits groups */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   HW property "rs": Software can read as well as set this bit. Writing '0' has no effect on the bit
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC internal channels related definitions */
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal voltage reference VrefInt */
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 6


 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   address of parameter VREFINT_CAL: VrefInt ADC raw data acquired at temperature 30 DegC (tolerance
 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   Vref+ = 3.3 V (tolerance: +-10 mV). */
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3300UL)                    /* Analog voltage reference
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   with which VrefInt has been calibrated in production (tolerance: +-10 mV) (unit: mV). */
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Temperature sensor */
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Address of parameter TS_
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   temperature sensor ADC raw data acquired at temperature  30 DegC (tolerance: +-5 DegC), Vref+ = 3
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (tolerance: +-10 mV). */
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75C8UL)) /* Address of parameter TS_
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   temperature sensor ADC raw data acquired at temperature 130 DegC (tolerance: +-5 DegC), Vref+ = 3
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (tolerance: +-10 mV). */
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Temperature at which tem
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   has been calibrated in production for data into TEMPSENSOR_CAL1_ADDR (tolerance: +-5 DegC) (unit:
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Temperature at which tem
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   has been calibrated in production for data into TEMPSENSOR_CAL2_ADDR (tolerance: +-5 DegC) (unit:
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3300UL)                    /* Analog voltage reference
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   with which temperature sensor has been calibrated in production (tolerance: +-10 mV) (unit: mV). 
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a register from a register basis from which an offset
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is applied.
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Pointer to register address
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and multimode
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sharing the same ADC common instance):
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 7


 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         disabled.
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             @note On this STM32 series, this parameter has some clo
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   ADC clock synchronous (from PCLK) with prescaler 
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   only if PCLK has a 50% duty clock cycle (APB pres
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   inside the RCC must be bypassed and the system cl
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   cycle).
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetClock().
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              For more details, refer to description of this functio
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 8


 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_InitTypeDef;
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (functions with prefix "REG").
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    with some ADC on other STM32 families having thi
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    default value).
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                               @ref LL_ADC_REG_SetTriggerSource(). */
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     to mode "fully configurable". Refer to function
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     @ref LL_ADC_REG_SetSequencerConfigurable().
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                               @ref LL_ADC_REG_SetSequencerLength(). */
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    enabled (depending on the sequencer mode: scan l
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    more, or several ADC channels enabled in group r
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    Refer to function @ref LL_ADC_REG_SetSequencerCo
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 9


 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              successively automatically).
 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    and discontinuous mode.
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              data preserved or overwritten.
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 10


 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* DMA transfer.                                                              */
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)     /* ADC group regular conversion data 
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  (corresponding to register DR) to 
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  configured in independent mode. Wi
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  register accessed by LL function
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  @ref LL_ADC_REG_ReadConversionData
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  functions @ref LL_ADC_REG_ReadConv
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 11


 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 12


 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_DACCH1              (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 13


 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN)  /*!< ADC conversio
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to not 
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to full
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 14


 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 series, parame
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 series, parame
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 15


 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                         | ADC
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_DACCH1_REG           ((LL_ADC_CHANNEL_DACCH1     & ADC_CHANNEL_ID_MASK) | ADC
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD1TR_HT1                 ) /*!< ADC analog watchd
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (                 ADC_AWD1TR_LT1) /*!< ADC analog watchd
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1) /*!< ADC analog watchd
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 16


 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  calibration parameters. This value
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  (to fit on signed word or double w
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  to an inconsistent temperature val
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         not timeout values.
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         above each literal definition.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 17


 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       not timeout values.                                                  */
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       STM32 series:                                                        */
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         cycles                                                             */
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         configuration.                                                     */
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tSTART").                                                       */
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)  /*!< Delay required between ADC end of cali
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 18


 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Write a value in ADC register
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be written
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Read a value in ADC register
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be read
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Register value
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return decimal number "4".
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number is returned, either defined with number
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 19


1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(CORE_CM0PLUS)
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                               
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                               
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                               
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      (0UL))))))))))))))))))))
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #else
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                       \
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* CORE_CM0PLUS */
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 20


1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from number in decimal format.
1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC internal channel:
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 21


1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                       connected to a GPIO pin).
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a value defined from parameter definition of
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC registers.
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 22


1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 23


1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT))
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 24


1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (< ADCx param >,
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 25


1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC common register instance
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (ADC_COMMON)
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC common instance are disabled.
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are disabled.
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 26


1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   LL_ADC_IsEnabled(ADC)
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to reference manual).
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a resolution to another resolution.
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((__DATA__)                                                                 \
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                       (unit: digital value).
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 27


1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_DATA__,\
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         reference VrefInt.
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         connected to pin Vref+.
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal voltage reference VrefInt.
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 28


1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  parameters are correct (address and data).
1519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  less accurate than calibrated values),
1522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor.
1532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 sensor voltage has been measured.
1539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
1546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
1550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?        \
1551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )                                                                                \
1561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   :                                                                                \
1562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
1563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to device datasheet).
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 29


1571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: digital value)
1575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  of the current device has characteristics in line with
1581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values.
1582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                           (unit: uV/DegCelsius).
1596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to device datasheet parameter "Avg_Slop
1597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                           (at temperature and Vref+ defined in parameters below) (u
1599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to datasheet parameter "V30" (correspon
1600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                           (see parameter above) is corresponding (unit: mV)
1602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
1603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     -                                                                       \
1622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                        \
1625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 30


1628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These ADC registers are data registers:
1655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC register address
1674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (void)(Register);
1679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve address of register DR */
1681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 31


1685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC instances
1690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 32


1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
1762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The values not selected are removed from configuration.
1766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
1787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 33


1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Add paths to the current configuration.
1805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
1827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
1828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
1829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
1841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Remove paths to the current configuration.
1847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 34


1856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
1857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
1858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
1859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
1871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
1882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
1893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 35


1913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without having to perform a new calibration using
1960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on going on group regular.
1965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 36


1970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              CalibrationFactor);
1975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC resolution.
1993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC resolution.
2014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
2017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 37


2027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
2037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC low power mode.
2065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
2072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 38


2084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC low power mode:
2122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
2129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 39


2141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           is discarded.
2188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 40


2198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
2224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
2227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
2229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
2238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
2239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 41


2255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
2262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
2277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
2294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
2301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
2305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 42


2312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         also set trigger polarity to rising edge
2313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function
2320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or external, without detail
2350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (equivalent to
2352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 43


2369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS -
2375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((trigger_source
2379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR1_EXTSEL)
2380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR1_EXTEN)
2381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
2382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or external.
2387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 44


2426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
2447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
2476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 45


2483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
2484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
2493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           To set scan direction differently, refer to function
2525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 46


2540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          To set scan direction differently, refer to function
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 47


2597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t channels_ranks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t sequencer_length = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t rank_index;
2628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t rank_shifted;
2629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Value "0xF0UL" corresponds to bitfield of sequencer 2nd rank
2632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            (ADC_CHSELR_SQ2), value "4" to length of end of sequence
2633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            identifier (0xF) */
2634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   for (rank_index = 0U; rank_index <= (28U - 4U); rank_index += 4U)
2635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
2636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     rank_shifted = (uint32_t)(0xF0UL << rank_index);
2637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if ((channels_ranks & rank_shifted) == rank_shifted)
2638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
2639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       sequencer_length = rank_shifted;
2640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       break;
2641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
2642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
2643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return sequencer_length;
2645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 48


2654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
2684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
2699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 49


2711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
2720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs configuration of:
2735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
2760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
2761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
2762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
2763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
2764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
2765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
2766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
2767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 50


2768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
2810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
2813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
2814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
2815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
2816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
2820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 51


2825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
2828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
2835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
2836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
2837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
2839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
2840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
2841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
2842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
2843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
2844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
2845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
2846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
2876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
2877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
2878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
2879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 52


2882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
2883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
2884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
2890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
2891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
2892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
2893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    );
2894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
2905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
2931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 53


2939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 54


2996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
2997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
3012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
3023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
3025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
3026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
3027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
3028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
3029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
3030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
3031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
3032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
3033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
3034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
3035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
3036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
3037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
3038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
3039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
3040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
3041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
3042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
3043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 55


3053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
3089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
3104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 56


3110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
3115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 57


3167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be retrieved.
3197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 58


3224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
3247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t channels_bitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((((channels_bitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CH
3251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
3263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
3264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
3269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
3275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 59


3281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
3298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 60


3338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         other devices without this feature have a behavior
3386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         equivalent to data overwritten.
3387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         overrun should be set to data overwritten.
3390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 61


3395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
3434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
3437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
3439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
3445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
3446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 62


3452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 63


3509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             );
3510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 64


3566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
3572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                        + ADC_SMPR_SMPSEL0_BITOFFSET_POS)
3580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       & 0x1FUL));
3581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
3601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 65


3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
3662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
  28              		.loc 2 3665 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
3666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
3668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg;
  33              		.loc 2 3670 3 view .LVU1
3671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
  34              		.loc 2 3672 3 view .LVU2
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 66


  35              		.loc 2 3672 6 is_stmt 0 view .LVU3
  36 0000 0A4B     		ldr	r3, .L5
  37 0002 9942     		cmp	r1, r3
  38 0004 10D0     		beq	.L4
3673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
3675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   else
3677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR,
  39              		.loc 2 3678 5 is_stmt 1 view .LVU4
  40              		.loc 2 3678 12 is_stmt 0 view .LVU5
  41 0006 A030     		adds	r0, r0, #160
  42              	.LVL1:
  43              		.loc 2 3678 12 view .LVU6
  44 0008 4B0D     		lsrs	r3, r1, #21
  45 000a 9B00     		lsls	r3, r3, #2
  46 000c 03F00403 		and	r3, r3, #4
  47 0010 1844     		add	r0, r0, r3
  48              	.LVL2:
  49              	.L3:
3679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
3680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
  50              		.loc 2 3682 3 is_stmt 1 view .LVU7
  51 0012 0368     		ldr	r3, [r0]
  52 0014 21F0034C 		bic	ip, r1, #-2097152000
  53 0018 2CF4701C 		bic	ip, ip, #3932160
  54 001c 23EA0C03 		bic	r3, r3, ip
  55 0020 1140     		ands	r1, r1, r2
  56              	.LVL3:
  57              		.loc 2 3682 3 is_stmt 0 view .LVU8
  58 0022 0B43     		orrs	r3, r3, r1
  59 0024 0360     		str	r3, [r0]
3683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
3684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDChannelGroup & AWDy);
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
  60              		.loc 2 3685 1 view .LVU9
  61 0026 7047     		bx	lr
  62              	.LVL4:
  63              	.L4:
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
  64              		.loc 2 3674 5 is_stmt 1 view .LVU10
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
  65              		.loc 2 3674 10 is_stmt 0 view .LVU11
  66 0028 0C30     		adds	r0, r0, #12
  67              	.LVL5:
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
  68              		.loc 2 3674 10 view .LVU12
  69 002a F2E7     		b	.L3
  70              	.L6:
  71              		.align	2
  72              	.L5:
  73 002c 0000C07C 		.word	2092957696
  74              		.cfi_endproc
  75              	.LFE341:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 67


  77              		.section	.text.LL_ADC_ConfigAnalogWDThresholds,"ax",%progbits
  78              		.align	1
  79              		.syntax unified
  80              		.thumb
  81              		.thumb_func
  83              	LL_ADC_ConfigAnalogWDThresholds:
  84              	.LVL6:
  85              	.LFB343:
3686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
3697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
3699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
3701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           one channel.
3702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
3729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
3730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
3731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 68


3735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
3736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
3738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
3739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
3740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             multiple channels are programmed simultaneously
3741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             by bitfield.
3742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
3765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1,
3767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
3768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
3769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
3770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
3772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
3774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
3775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
3776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* or a single channel.                                                     */
3777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
3778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
3780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR1_AWD1SGL) == 0UL)
3782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
3785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
3786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     )
3787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     & (~(ADC_CFGR1_AWD1CH))
3788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 69


3792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
3795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     else
3799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
3801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
3804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN)
3805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
3813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
3814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return analog_wd_monit_channels;
3820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high and low.
3825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 70


3849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_ConfigAnalogWDThresholds\n
3869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_ConfigAnalogWDThresholds\n
3870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_ConfigAnalogWDThresholds\n
3871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_ConfigAnalogWDThresholds\n
3872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_ConfigAnalogWDThresholds\n
3873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_ConfigAnalogWDThresholds
3874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
3885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
  86              		.loc 2 3885 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
3886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
3887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameter        */
3888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDy".                                                                  */
3889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
3890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
  91              		.loc 2 3891 3 view .LVU14
  92              		.loc 2 3891 25 is_stmt 0 view .LVU15
  93 0000 2030     		adds	r0, r0, #32
  94              	.LVL7:
  95              		.loc 2 3891 25 view .LVU16
  96 0002 C1F3015C 		ubfx	ip, r1, #20, #2
  97 0006 C1F34051 		ubfx	r1, r1, #21, #1
  98              	.LVL8:
  99              		.loc 2 3891 25 view .LVU17
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 71


 100 000a 8C44     		add	ip, ip, r1
 101              	.LVL9:
3892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
3893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
3894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
3895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                  >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL))
3896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              );
3897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
 102              		.loc 2 3898 3 is_stmt 1 view .LVU18
 103 000c 50F82C10 		ldr	r1, [r0, ip, lsl #2]
 104 0010 01F0F021 		and	r1, r1, #-268374016
 105 0014 43EA0243 		orr	r3, r3, r2, lsl #16
 106              	.LVL10:
 107              		.loc 2 3898 3 is_stmt 0 view .LVU19
 108 0018 1943     		orrs	r1, r1, r3
 109 001a 40F82C10 		str	r1, [r0, ip, lsl #2]
3899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
3900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
3901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 110              		.loc 2 3901 1 view .LVU20
 111 001e 7047     		bx	lr
 112              		.cfi_endproc
 113              	.LFE343:
 115              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 116              		.align	1
 117              		.weak	HAL_ADC_MspInit
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
 122              	HAL_ADC_MspInit:
 123              	.LVL11:
 124              	.LFB853:
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @file    stm32wlxx_hal_adc.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           + Peripheral State functions
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          "stm32wlxx_hal_adc_ex.c".
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ******************************************************************************
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @attention
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * Copyright (c) 2020 STMicroelectronics.
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * All rights reserved.
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * in the root directory of this software component.
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ******************************************************************************
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 72


  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   @verbatim
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ==============================================================================
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      ##### ADC peripheral features #####
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ==============================================================================
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   [..]
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       analog watchdog or overrun events.
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Single and continuous conversion modes.
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) Programmable sampling time (common to group of channels)
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC calibration
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC conversion of regular group.
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       Vdda or to an external voltage reference).
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      ##### How to use this driver #####
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ==============================================================================
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ============================================================
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Enable the ADC interface
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              Caution: On STM32WL, ADC clock frequency max is 35MHz (refer
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       to device datasheet).
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       Therefore, ADC clock source from RCC and ADC clock
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       prescaler must be configured to remain below
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       this maximum frequency.
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) Two clock settings are mandatory:
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    Four possible clock sources: synchronous clock from APB clock (same as ADC core 
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    or asynchronous clock from RCC level: SYSCLK, HSI16, PLLPCLK.
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) Example:
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 73


  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    other device clock parameters configuration:
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory: core clock)
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) ADC pins configuration
  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_GPIO_Init()
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure the NVIC for ADC
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ADCx_IRQHandler().
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_DMA_Init().
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Configure the NVIC for DMA
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ================================================================
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADC_Init().
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         monitored, thresholds, ...)
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Execution of ADC conversions ***
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ====================================
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         conversion accuracy
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         transfer by DMA.
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC conversion by polling:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 74


 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Start()
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Retrieve conversion results
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Stop()
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC conversion by interruption:
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 (this function must be implemented in user program)
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Retrieve conversion results
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 (these functions must be implemented in user program)
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 destination variable address.
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      *** Deinitialization of ADC ***
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      ============================================================
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Disable the ADC interface
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         (++) ADC clock disable
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              (+++) Example:
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    other device clock parameters configuration:
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) ADC pins configuration
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 75


 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Disable the NVIC for ADC
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Deinitialize the DMA
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_DMA_Init().
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          (++) Disable the NVIC for DMA
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     *** Callback registration ***
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     =============================================
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      to register an interrupt callback.
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      and a pointer to the user callback function.
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      weak function.
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      and the Callback ID.
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      This function allows to reset following callbacks:
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 76


 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/HAL_ADC_DeInit() only when
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/HAL_ADC_DeInit()
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      or HAL_ADC_Init() function.
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      [..]
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      are set to the corresponding weak functions.
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   @endverbatim
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #include "stm32wlxx_hal.h"
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @addtogroup STM32WLxx_HAL_Driver
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC ADC
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief ADC HAL module driver
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Fixed timeout values for ADC calibration, enable settling time, disable  */
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* settling time.                                                           */
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Values defined to be higher than worst cases: low clock frequency,       */
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* maximum prescaler.                                                       */
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 77


 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Unit: ms                                                                 */
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_STOP_CONVERSION_TIMEOUT     (2UL)
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_CHANNEL_CONF_RDY_TIMEOUT    (1UL)
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | \
 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ADC_CHSELR_SQ5 | ADC_CHSELR_SQ6 | ADC_CHSELR_SQ7 | ADC_CHS
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /* Exported functions ---------------------------------------------------------*/
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]  This section provides functions allowing to:
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Initialize and configure the ADC.
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) De-initialize the ADC.
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         in header of this file).
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 78


 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         before HAL_ADC_Init().
 370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         "ADC_InitTypeDef".
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check ADC handle */
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc == NULL)
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     return HAL_ERROR;
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 79


 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ADC group regular discontinuous mode can be enabled only if              */
 429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* continuous mode is disabled.                                             */
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Init the ADC Callback settings */
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Init the low level hardware */
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
 454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Init the low level hardware */
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC error code to none */
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Initialize Lock */
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Delay for ADC stabilization time */
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Wait loop initialization and execution */
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       wait_loop_index--;
 479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 80


 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update ADC state machine to error */
 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Clock configuration                                                 */
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - ADC resolution                                                      */
 518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Oversampling                                                        */
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - overrun                                                             */
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - external trigger to start conversion                                */
 525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - external trigger polarity                                           */
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - data alignment                                                      */
 527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - resolution                                                          */
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - scan direction                                                      */
 529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - DMA continuous request                                              */
 530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  - Trigger frequency mode                                              */
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 81


 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* parameters):                                                         */
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*   - internal measurement paths (VrefInt, ...)                        */
 542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmpCFGR1 |= (hadc->Init.Resolution                                          |
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update setting of discontinuous mode only if continuous mode is disabled */
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.DiscontinuousConvMode == ENABLE)
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (hadc->Init.ContinuousConvMode == DISABLE)
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Enable the selected ADC group regular discontinuous mode */
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           tmpCFGR1 |= ADC_CFGR1_DISCEN;
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
 562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* ADC regular group discontinuous was intended to be enabled,        */
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* but ADC regular group modes continuous and sequencer discontinuous */
 565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* cannot be enabled simultaneously.                                  */
 566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to error */
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable external trigger if trigger selection is different of software  */
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* start.                                                                 */
 577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: This configuration keeps the hardware feature of parameter       */
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       software start.                                                  */
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmpCFGR1 |= ((hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC configuration register with previous settings */
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_RES     |
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_DISCEN  |
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_AUTOFF  |
 591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_WAIT    |
 592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_CONT    |
 593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_OVRMOD  |
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_EXTSEL  |
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 82


 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_EXTEN   |
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_ALIGN   |
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_SCANDIR |
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_DMACFG,
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  tmpCFGR1);
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmpCFGR2 |= ((hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                   );
 604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmpCFGR2 |= (ADC_CFGR2_OVSE |
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                     );
 613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2,
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_LFTRIG |
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_OVSE   |
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_OVSR   |
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_OVSS   |
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_TOVS,
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  tmpCFGR2);
 623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Configuration of ADC clock mode: asynchronous clock source           */
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* with selectable prescaler.                                           */
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         MODIFY_REG(ADC_COMMON->CCR,
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CCR_PRESC,
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC);
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Channel sampling time configuration */
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 83


 652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC group regular sequencer:                                   */
 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*  - Set ADC group regular sequencer to value memorized              */
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*    in HAL ADC handle                                               */
 662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*    Note: This value maybe be initialized at a unknown value,       */
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*          therefore after the first call of "HAL_ADC_Init()",       */
 664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*          each rank corresponding to parameter "NbrOfConversion"    */
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*          must be set using "HAL_ADC_ConfigChannel()".              */
 666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*    and do not modify other ranks value.                            */
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CHSELR,
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  (ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RANK_
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  | (hadc->ADCGroupRegularSequencerRanks)
 672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                 );
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if(LL_ADC_GetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1)
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       == hadc->Init.SamplingTimeCommon1)
 679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to none */
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the ADC state */
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
 689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
 703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update ADC state machine to error */
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 84


 709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the core clock reset all ADC instances).
 721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         common group is still running.
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
 727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check ADC handle */
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc == NULL)
 734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     return HAL_ERROR;
 736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC state */
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Stop potential conversion on going, on regular group */
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable the ADC peripheral */
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Change ADC state */
 757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC internal voltage regulator */
 761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 85


 766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register IER */
 772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
 773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register ISR */
 778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
 779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CR */
 784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
 786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CFGR1 */
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH   | ADC_CFGR1_AWD1EN  | ADC_CFGR1_AWD1SGL | ADC_CFGR1
 789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN  | ADC_CFGR1_RE
 791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN);
 792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CFGR2 */
 794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       already done above.                                              */
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
 797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register SMPR */
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
 800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset registers AWDxTR */
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD1TR &= ~(ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1);
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CHSELR */
 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
 808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register DR */
 810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
 811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset register CCR */
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_COMMON->CCR &= ~(ADC_CCR_VBATEN | ADC_CCR_TSEN | ADC_CCR_VREFEN | ADC_CCR_PRESC);
 814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Hard reset ADC peripheral ========== */
 816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* forced to a similar state after device power-on.                       */
 818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: A possible implementation is to add RCC bus reset of ADC         */
 819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* (for example, using macro                                              */
 820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
 821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
 822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 86


 823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* DeInit the low level hardware */
 829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
 831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* DeInit the low level hardware */
 832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Reset HAL ADC handle variable */
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
 837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC error code to none */
 839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC state */
 842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
 853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
 855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 125              		.loc 1 855 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
 130              		.loc 1 857 3 view .LVU22
 858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****    */
 862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 131              		.loc 1 862 1 is_stmt 0 view .LVU23
 132 0000 7047     		bx	lr
 133              		.cfi_endproc
 134              	.LFE853:
 136              		.section	.text.HAL_ADC_Init,"ax",%progbits
 137              		.align	1
 138              		.global	HAL_ADC_Init
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	HAL_ADC_Init:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 87


 144              	.LVL12:
 145              	.LFB851:
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 146              		.loc 1 380 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 8
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 150              		.loc 1 380 1 is_stmt 0 view .LVU25
 151 0000 30B5     		push	{r4, r5, lr}
 152              		.cfi_def_cfa_offset 12
 153              		.cfi_offset 4, -12
 154              		.cfi_offset 5, -8
 155              		.cfi_offset 14, -4
 156 0002 83B0     		sub	sp, sp, #12
 157              		.cfi_def_cfa_offset 24
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 158              		.loc 1 381 3 is_stmt 1 view .LVU26
 159              	.LVL13:
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 160              		.loc 1 382 3 view .LVU27
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 161              		.loc 1 383 3 view .LVU28
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 162              		.loc 1 384 3 view .LVU29
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 163              		.loc 1 385 3 view .LVU30
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 164              		.loc 1 385 17 is_stmt 0 view .LVU31
 165 0004 0023     		movs	r3, #0
 166 0006 0193     		str	r3, [sp, #4]
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 167              		.loc 1 388 3 is_stmt 1 view .LVU32
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 168              		.loc 1 388 6 is_stmt 0 view .LVU33
 169 0008 0028     		cmp	r0, #0
 170 000a 00F00681 		beq	.L28
 171 000e 0446     		mov	r4, r0
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 172              		.loc 1 394 3 is_stmt 1 view .LVU34
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 173              		.loc 1 395 3 view .LVU35
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 174              		.loc 1 396 3 view .LVU36
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 175              		.loc 1 397 3 view .LVU37
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 176              		.loc 1 398 3 view .LVU38
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 177              		.loc 1 399 3 view .LVU39
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 178              		.loc 1 400 3 view .LVU40
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 179              		.loc 1 401 3 view .LVU41
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 180              		.loc 1 402 3 view .LVU42
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 88


 181              		.loc 1 403 3 view .LVU43
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 182              		.loc 1 404 3 view .LVU44
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 183              		.loc 1 405 3 view .LVU45
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 184              		.loc 1 406 3 view .LVU46
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 185              		.loc 1 407 3 view .LVU47
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 186              		.loc 1 408 3 view .LVU48
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
 187              		.loc 1 409 3 view .LVU49
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 188              		.loc 1 410 3 view .LVU50
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 189              		.loc 1 412 5 view .LVU51
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 190              		.loc 1 413 5 view .LVU52
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 191              		.loc 1 414 5 view .LVU53
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 192              		.loc 1 416 3 view .LVU54
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 193              		.loc 1 418 3 view .LVU55
 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 194              		.loc 1 424 7 view .LVU56
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 195              		.loc 1 430 3 view .LVU57
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 196              		.loc 1 434 3 view .LVU58
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 197              		.loc 1 434 11 is_stmt 0 view .LVU59
 198 0010 836D     		ldr	r3, [r0, #88]
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 199              		.loc 1 434 6 view .LVU60
 200 0012 BBB1     		cbz	r3, .L32
 201              	.LVL14:
 202              	.L11:
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 203              		.loc 1 465 3 is_stmt 1 view .LVU61
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 204              		.loc 1 465 7 is_stmt 0 view .LVU62
 205 0014 2268     		ldr	r2, [r4]
 206              	.LVL15:
 207              	.LBB150:
 208              	.LBI150:
3902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high or low.
3906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 89


3912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
3946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
3948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_SetAnalogWDThresholds\n
3950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_SetAnalogWDThresholds\n
3951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_SetAnalogWDThresholds\n
3952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_SetAnalogWDThresholds\n
3953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_SetAnalogWDThresholds\n
3954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_SetAnalogWDThresholds
3955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
3967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
3968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 90


3969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
3971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
3975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
3976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
3977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
3978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                  >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL)));
3979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdsHighLow,
3982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
3983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         concatenated.
3989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using helper macro:
3992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_GetAnalogWDThresholds\n
3997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_GetAnalogWDThresholds\n
3998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_GetAnalogWDThresholds\n
3999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_GetAnalogWDThresholds\n
4000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_GetAnalogWDThresholds\n
4001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_GetAnalogWDThresholds
4002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
4011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
4014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                      >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
4023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                        >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1U
4025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 91


4026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_AWD1TR_LT1))
4028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
4029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_AWD1TR_LT1)));
4030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
4037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
4042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
4046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
4048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
4053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
4055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
4059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
4060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
4066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
4076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 92


4083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
4099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
4108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling
4114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ratio
4116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - shift
4117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 93


4140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
4164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
4184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 94


4197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the voltage regulator:
4200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling it manually
4201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by launching a calibration
4203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling the ADC
4205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADVREGEN);
4226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
 209              		.loc 2 4248 26 is_stmt 1 view .LVU63
 210              	.LBB151:
4249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
 211              		.loc 2 4250 3 view .LVU64
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 95


 212              		.loc 2 4250 12 is_stmt 0 view .LVU65
 213 0016 9368     		ldr	r3, [r2, #8]
 214              		.loc 2 4250 76 view .LVU66
 215 0018 13F0805F 		tst	r3, #268435456
 216 001c 1FD1     		bne	.L12
 217              	.LVL16:
 218              		.loc 2 4250 76 view .LVU67
 219              	.LBE151:
 220              	.LBE150:
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 221              		.loc 1 468 5 is_stmt 1 view .LVU68
 222              	.LBB152:
 223              	.LBI152:
4218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 224              		.loc 2 4218 22 view .LVU69
 225              	.LBB153:
4223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 226              		.loc 2 4223 3 view .LVU70
 227 001e 9368     		ldr	r3, [r2, #8]
 228 0020 23F01043 		bic	r3, r3, #-1879048192
 229 0024 23F01703 		bic	r3, r3, #23
 230 0028 43F08053 		orr	r3, r3, #268435456
 231 002c 9360     		str	r3, [r2, #8]
 232              	.LVL17:
4223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 233              		.loc 2 4223 3 is_stmt 0 view .LVU71
 234              	.LBE153:
 235              	.LBE152:
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 236              		.loc 1 475 5 is_stmt 1 view .LVU72
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 237              		.loc 1 475 89 is_stmt 0 view .LVU73
 238 002e 7C4B     		ldr	r3, .L37
 239 0030 1B68     		ldr	r3, [r3]
 240 0032 9B09     		lsrs	r3, r3, #6
 241 0034 7B4A     		ldr	r2, .L37+4
 242 0036 A2FB0323 		umull	r2, r3, r2, r3
 243 003a 9B09     		lsrs	r3, r3, #6
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 244              		.loc 1 475 109 view .LVU74
 245 003c 0133     		adds	r3, r3, #1
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 246              		.loc 1 475 69 view .LVU75
 247 003e 5B00     		lsls	r3, r3, #1
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while (wait_loop_index != 0UL)
 248              		.loc 1 475 21 view .LVU76
 249 0040 0193     		str	r3, [sp, #4]
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 250              		.loc 1 476 5 is_stmt 1 view .LVU77
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 251              		.loc 1 476 11 is_stmt 0 view .LVU78
 252 0042 09E0     		b	.L13
 253              	.LVL18:
 254              	.L32:
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 255              		.loc 1 455 5 is_stmt 1 view .LVU79
 256 0044 FFF7FEFF 		bl	HAL_ADC_MspInit
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 96


 257              	.LVL19:
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 258              		.loc 1 459 5 view .LVU80
 259 0048 0023     		movs	r3, #0
 260 004a E365     		str	r3, [r4, #92]
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 261              		.loc 1 462 5 view .LVU81
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 262              		.loc 1 462 16 is_stmt 0 view .LVU82
 263 004c 84F85430 		strb	r3, [r4, #84]
 264 0050 E0E7     		b	.L11
 265              	.L14:
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 266              		.loc 1 478 7 is_stmt 1 view .LVU83
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 267              		.loc 1 478 22 is_stmt 0 view .LVU84
 268 0052 019B     		ldr	r3, [sp, #4]
 269 0054 013B     		subs	r3, r3, #1
 270 0056 0193     		str	r3, [sp, #4]
 271              	.L13:
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 272              		.loc 1 476 28 is_stmt 1 view .LVU85
 273 0058 019B     		ldr	r3, [sp, #4]
 274 005a 002B     		cmp	r3, #0
 275 005c F9D1     		bne	.L14
 276              	.L12:
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 277              		.loc 1 485 3 view .LVU86
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 278              		.loc 1 485 7 is_stmt 0 view .LVU87
 279 005e 2268     		ldr	r2, [r4]
 280              	.LVL20:
 281              	.LBB154:
 282              	.LBI154:
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 283              		.loc 2 4248 26 is_stmt 1 view .LVU88
 284              	.LBB155:
 285              		.loc 2 4250 3 view .LVU89
 286              		.loc 2 4250 12 is_stmt 0 view .LVU90
 287 0060 9368     		ldr	r3, [r2, #8]
 288              		.loc 2 4250 76 view .LVU91
 289 0062 13F0805F 		tst	r3, #268435456
 290 0066 40F09A80 		bne	.L29
 291              	.LVL21:
 292              		.loc 2 4250 76 view .LVU92
 293              	.LBE155:
 294              	.LBE154:
 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 295              		.loc 1 488 5 is_stmt 1 view .LVU93
 296 006a A36D     		ldr	r3, [r4, #88]
 297 006c 43F01003 		orr	r3, r3, #16
 298 0070 A365     		str	r3, [r4, #88]
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 299              		.loc 1 491 5 view .LVU94
 300 0072 E36D     		ldr	r3, [r4, #92]
 301 0074 43F00103 		orr	r3, r3, #1
 302 0078 E365     		str	r3, [r4, #92]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 97


 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 303              		.loc 1 493 5 view .LVU95
 304              	.LVL22:
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 305              		.loc 1 493 20 is_stmt 0 view .LVU96
 306 007a 0120     		movs	r0, #1
 307              	.LVL23:
 308              	.L15:
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 309              		.loc 1 500 3 is_stmt 1 view .LVU97
 310              	.LBB156:
 311              	.LBI156:
4251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion start.
4258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADEN);
4277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
4285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 98


4296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADDIS);
4297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
4309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
4311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
4320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         during calibration:
4333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Calibration factor is available in data register
4334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and also transferred by DMA.
4335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         calibration.
4338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This mode must be disabled during calibration
4344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 99


4353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADCAL);
4360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration state.
4364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
4369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
4371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           starts immediately.
4387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           following the ADC start conversion command.
4390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTART);
4407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 100


4410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTP);
4427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 312              		.loc 2 4435 26 view .LVU98
 313              	.LBB157:
4436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 314              		.loc 2 4437 3 view .LVU99
 315              		.loc 2 4437 12 is_stmt 0 view .LVU100
 316 007c 9368     		ldr	r3, [r2, #8]
 317              		.loc 2 4437 74 view .LVU101
 318 007e 13F00403 		ands	r3, r3, #4
 319 0082 00D0     		beq	.L16
 320 0084 0123     		movs	r3, #1
 321              	.L16:
 322              	.LVL24:
 323              		.loc 2 4437 74 view .LVU102
 324              	.LBE157:
 325              	.LBE156:
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 326              		.loc 1 502 3 is_stmt 1 view .LVU103
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 327              		.loc 1 502 13 is_stmt 0 view .LVU104
 328 0086 A16D     		ldr	r1, [r4, #88]
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 329              		.loc 1 502 6 view .LVU105
 330 0088 11F0100F 		tst	r1, #16
 331 008c 40F0BE80 		bne	.L17
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
 332              		.loc 1 503 7 view .LVU106
 333 0090 002B     		cmp	r3, #0
 334 0092 40F0BB80 		bne	.L17
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 335              		.loc 1 507 5 is_stmt 1 view .LVU107
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 101


 336 0096 A36D     		ldr	r3, [r4, #88]
 337              	.LVL25:
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 338              		.loc 1 507 5 is_stmt 0 view .LVU108
 339 0098 23F48173 		bic	r3, r3, #258
 340 009c 43F00203 		orr	r3, r3, #2
 341 00a0 A365     		str	r3, [r4, #88]
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 342              		.loc 1 534 5 is_stmt 1 view .LVU109
 343              	.LVL26:
 344              	.LBB158:
 345              	.LBI158:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 346              		.loc 2 4308 26 view .LVU110
 347              	.LBB159:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 348              		.loc 2 4310 3 view .LVU111
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 349              		.loc 2 4310 12 is_stmt 0 view .LVU112
 350 00a2 9368     		ldr	r3, [r2, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 351              		.loc 2 4310 68 view .LVU113
 352 00a4 13F0010F 		tst	r3, #1
 353 00a8 4FD1     		bne	.L18
 354              	.LVL27:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 355              		.loc 2 4310 68 view .LVU114
 356              	.LBE159:
 357              	.LBE158:
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 358              		.loc 1 544 7 is_stmt 1 view .LVU115
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 359              		.loc 1 544 30 is_stmt 0 view .LVU116
 360 00aa A368     		ldr	r3, [r4, #8]
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 361              		.loc 1 545 20 view .LVU117
 362 00ac 217E     		ldrb	r1, [r4, #24]	@ zero_extendqisi2
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)      |
 363              		.loc 1 544 83 view .LVU118
 364 00ae 43EA8133 		orr	r3, r3, r1, lsl #14
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 365              		.loc 1 546 20 view .LVU119
 366 00b2 617E     		ldrb	r1, [r4, #25]	@ zero_extendqisi2
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)   |
 367              		.loc 1 545 83 view .LVU120
 368 00b4 43EAC133 		orr	r3, r3, r1, lsl #15
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 369              		.loc 1 547 20 view .LVU121
 370 00b8 A57E     		ldrb	r5, [r4, #26]	@ zero_extendqisi2
 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)  |
 371              		.loc 1 546 83 view .LVU122
 372 00ba 43EA4533 		orr	r3, r3, r5, lsl #13
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 373              		.loc 1 548 20 view .LVU123
 374 00be 216B     		ldr	r1, [r4, #48]
 375 00c0 09B1     		cbz	r1, .L19
 376 00c2 4FF48051 		mov	r1, #4096
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 102


 377              	.L19:
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                          |
 378              		.loc 1 547 83 view .LVU124
 379 00c6 0B43     		orrs	r3, r3, r1
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 380              		.loc 1 549 30 view .LVU125
 381 00c8 E168     		ldr	r1, [r4, #12]
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.DataAlign                                           |
 382              		.loc 1 548 83 view .LVU126
 383 00ca 0B43     		orrs	r3, r3, r1
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 384              		.loc 1 550 20 view .LVU127
 385 00cc 2169     		ldr	r1, [r4, #16]
 386 00ce 0029     		cmp	r1, #0
 387 00d0 67DB     		blt	.L33
 388 00d2 4FF40011 		mov	r1, #2097152
 389              	.L20:
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                     |
 390              		.loc 1 549 83 view .LVU128
 391 00d6 0B43     		orrs	r3, r3, r1
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 392              		.loc 1 551 20 view .LVU129
 393 00d8 94F82C10 		ldrb	r1, [r4, #44]	@ zero_extendqisi2
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 394              		.loc 1 550 83 view .LVU130
 395 00dc 43EA4103 		orr	r3, r3, r1, lsl #1
 396              	.LVL28:
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 397              		.loc 1 554 7 is_stmt 1 view .LVU131
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 398              		.loc 1 554 21 is_stmt 0 view .LVU132
 399 00e0 94F82010 		ldrb	r1, [r4, #32]	@ zero_extendqisi2
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 400              		.loc 1 554 10 view .LVU133
 401 00e4 0129     		cmp	r1, #1
 402 00e6 5FD0     		beq	.L34
 403              	.L21:
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 404              		.loc 1 580 7 is_stmt 1 view .LVU134
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 405              		.loc 1 580 21 is_stmt 0 view .LVU135
 406 00e8 616A     		ldr	r1, [r4, #36]
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 407              		.loc 1 580 10 view .LVU136
 408 00ea 21B1     		cbz	r1, .L23
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 409              		.loc 1 582 9 is_stmt 1 view .LVU137
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 410              		.loc 1 582 51 is_stmt 0 view .LVU138
 411 00ec 01F4E071 		and	r1, r1, #448
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 412              		.loc 1 583 32 view .LVU139
 413 00f0 A56A     		ldr	r5, [r4, #40]
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
 414              		.loc 1 582 71 view .LVU140
 415 00f2 2943     		orrs	r1, r1, r5
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 103


 416              		.loc 1 582 18 view .LVU141
 417 00f4 0B43     		orrs	r3, r3, r1
 418              	.LVL29:
 419              	.L23:
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR1_RES     |
 420              		.loc 1 587 7 is_stmt 1 view .LVU142
 421 00f6 D168     		ldr	r1, [r2, #12]
 422 00f8 21F4FE31 		bic	r1, r1, #130048
 423 00fc 21F4FF71 		bic	r1, r1, #510
 424 0100 1943     		orrs	r1, r1, r3
 425 0102 D160     		str	r1, [r2, #12]
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 426              		.loc 1 601 7 view .LVU143
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 427              		.loc 1 601 31 is_stmt 0 view .LVU144
 428 0104 6368     		ldr	r3, [r4, #4]
 429              	.LVL30:
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 430              		.loc 1 601 47 view .LVU145
 431 0106 03F04043 		and	r3, r3, #-1073741824
 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                   );
 432              		.loc 1 602 30 view .LVU146
 433 010a E26C     		ldr	r2, [r4, #76]
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    hadc->Init.TriggerFrequencyMode
 434              		.loc 1 601 67 view .LVU147
 435 010c 1A43     		orrs	r2, r2, r3
 436              	.LVL31:
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 437              		.loc 1 605 7 is_stmt 1 view .LVU148
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 438              		.loc 1 605 21 is_stmt 0 view .LVU149
 439 010e 94F83C10 		ldrb	r1, [r4, #60]	@ zero_extendqisi2
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 440              		.loc 1 605 10 view .LVU150
 441 0112 0129     		cmp	r1, #1
 442 0114 55D0     		beq	.L35
 443              	.L24:
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CFGR2_CKMODE |
 444              		.loc 1 615 7 is_stmt 1 view .LVU151
 445 0116 2168     		ldr	r1, [r4]
 446 0118 0D69     		ldr	r5, [r1, #16]
 447 011a 434B     		ldr	r3, .L37+8
 448 011c 2B40     		ands	r3, r3, r5
 449 011e 1343     		orrs	r3, r3, r2
 450 0120 0B61     		str	r3, [r1, #16]
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 451              		.loc 1 626 7 view .LVU152
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 452              		.loc 1 626 23 is_stmt 0 view .LVU153
 453 0122 6368     		ldr	r3, [r4, #4]
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 454              		.loc 1 626 10 view .LVU154
 455 0124 B3F1404F 		cmp	r3, #-1073741824
 456 0128 0FD0     		beq	.L18
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 457              		.loc 1 626 69 discriminator 1 view .LVU155
 458 012a B3F1804F 		cmp	r3, #1073741824
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 104


 459 012e 0CD0     		beq	.L18
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 460              		.loc 1 627 69 view .LVU156
 461 0130 B3F1004F 		cmp	r3, #-2147483648
 462 0134 09D0     		beq	.L18
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CCR_PRESC,
 463              		.loc 1 630 9 is_stmt 1 view .LVU157
 464 0136 3D49     		ldr	r1, .L37+12
 465 0138 D1F80827 		ldr	r2, [r1, #1800]
 466              	.LVL32:
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CCR_PRESC,
 467              		.loc 1 630 9 is_stmt 0 view .LVU158
 468 013c 22F47012 		bic	r2, r2, #3932160
 469 0140 03F47013 		and	r3, r3, #3932160
 470 0144 1343     		orrs	r3, r3, r2
 471 0146 C1F80837 		str	r3, [r1, #1800]
 472              	.LVL33:
 473              	.L18:
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 474              		.loc 1 637 5 is_stmt 1 view .LVU159
 475 014a 2168     		ldr	r1, [r4]
 476 014c 636B     		ldr	r3, [r4, #52]
 477              	.LVL34:
 478              	.LBB160:
 479              	.LBI160:
2260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
 480              		.loc 2 2260 22 view .LVU160
 481              	.LBB161:
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 482              		.loc 2 2263 3 view .LVU161
 483 014e 4A69     		ldr	r2, [r1, #20]
 484 0150 22F00702 		bic	r2, r2, #7
 485 0154 1343     		orrs	r3, r3, r2
 486              	.LVL35:
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 487              		.loc 2 2263 3 is_stmt 0 view .LVU162
 488 0156 4B61     		str	r3, [r1, #20]
 489              	.LVL36:
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 490              		.loc 2 2263 3 view .LVU163
 491              	.LBE161:
 492              	.LBE160:
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 493              		.loc 1 638 5 is_stmt 1 view .LVU164
 494 0158 2268     		ldr	r2, [r4]
 495 015a A16B     		ldr	r1, [r4, #56]
 496              	.LVL37:
 497              	.LBB162:
 498              	.LBI162:
2260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
 499              		.loc 2 2260 22 view .LVU165
 500              	.LBB163:
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 501              		.loc 2 2263 3 view .LVU166
 502 015c 5369     		ldr	r3, [r2, #20]
 503 015e 23F07003 		bic	r3, r3, #112
 504 0162 43EA0113 		orr	r3, r3, r1, lsl #4
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 105


 505 0166 5361     		str	r3, [r2, #20]
 506              	.LVL38:
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 507              		.loc 2 2263 3 is_stmt 0 view .LVU167
 508              	.LBE163:
 509              	.LBE162:
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 510              		.loc 1 650 5 is_stmt 1 view .LVU168
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 511              		.loc 1 650 19 is_stmt 0 view .LVU169
 512 0168 2369     		ldr	r3, [r4, #16]
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 513              		.loc 1 650 8 view .LVU170
 514 016a 002B     		cmp	r3, #0
 515 016c 33D1     		bne	.L25
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 516              		.loc 1 654 7 is_stmt 1 view .LVU171
 517 016e 2268     		ldr	r2, [r4]
 518 0170 936A     		ldr	r3, [r2, #40]
 519 0172 63F00F03 		orn	r3, r3, #15
 520 0176 9362     		str	r3, [r2, #40]
 521              	.L26:
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       == hadc->Init.SamplingTimeCommon1)
 522              		.loc 1 677 5 view .LVU172
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       == hadc->Init.SamplingTimeCommon1)
 523              		.loc 1 677 8 is_stmt 0 view .LVU173
 524 0178 2368     		ldr	r3, [r4]
 525              	.LVL39:
 526              	.LBB164:
 527              	.LBI164:
2293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 528              		.loc 2 2293 26 is_stmt 1 view .LVU174
 529              	.LBB165:
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 530              		.loc 2 2295 3 view .LVU175
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 531              		.loc 2 2295 22 is_stmt 0 view .LVU176
 532 017a 5B69     		ldr	r3, [r3, #20]
 533              	.LVL40:
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 534              		.loc 2 2295 22 view .LVU177
 535 017c 03F00703 		and	r3, r3, #7
 536              	.LVL41:
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
 537              		.loc 2 2295 22 view .LVU178
 538              	.LBE165:
 539              	.LBE164:
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 540              		.loc 1 678 20 view .LVU179
 541 0180 626B     		ldr	r2, [r4, #52]
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       == hadc->Init.SamplingTimeCommon1)
 542              		.loc 1 677 7 view .LVU180
 543 0182 9A42     		cmp	r2, r3
 544 0184 39D0     		beq	.L36
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 545              		.loc 1 691 7 is_stmt 1 view .LVU181
 546 0186 A36D     		ldr	r3, [r4, #88]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 106


 547 0188 23F01203 		bic	r3, r3, #18
 548 018c 43F01003 		orr	r3, r3, #16
 549 0190 A365     		str	r3, [r4, #88]
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 550              		.loc 1 696 7 view .LVU182
 551 0192 E36D     		ldr	r3, [r4, #92]
 552 0194 43F00103 		orr	r3, r3, #1
 553 0198 E365     		str	r3, [r4, #92]
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 554              		.loc 1 698 7 view .LVU183
 555              	.LVL42:
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 556              		.loc 1 698 22 is_stmt 0 view .LVU184
 557 019a 0120     		movs	r0, #1
 558 019c 3BE0     		b	.L10
 559              	.LVL43:
 560              	.L29:
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 561              		.loc 1 381 21 view .LVU185
 562 019e 0020     		movs	r0, #0
 563 01a0 6CE7     		b	.L15
 564              	.LVL44:
 565              	.L33:
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 566              		.loc 1 550 20 discriminator 1 view .LVU186
 567 01a2 21F00041 		bic	r1, r1, #-2147483648
 568 01a6 96E7     		b	.L20
 569              	.LVL45:
 570              	.L34:
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 571              		.loc 1 556 9 is_stmt 1 view .LVU187
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 572              		.loc 1 556 12 is_stmt 0 view .LVU188
 573 01a8 15B9     		cbnz	r5, .L22
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 574              		.loc 1 559 11 is_stmt 1 view .LVU189
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 575              		.loc 1 559 20 is_stmt 0 view .LVU190
 576 01aa 43F48033 		orr	r3, r3, #65536
 577              	.LVL46:
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 578              		.loc 1 559 20 view .LVU191
 579 01ae 9BE7     		b	.L21
 580              	.L22:
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 581              		.loc 1 568 11 is_stmt 1 view .LVU192
 582 01b0 A16D     		ldr	r1, [r4, #88]
 583 01b2 41F02001 		orr	r1, r1, #32
 584 01b6 A165     		str	r1, [r4, #88]
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 585              		.loc 1 571 11 view .LVU193
 586 01b8 E16D     		ldr	r1, [r4, #92]
 587 01ba 41F00101 		orr	r1, r1, #1
 588 01be E165     		str	r1, [r4, #92]
 589 01c0 92E7     		b	.L21
 590              	.LVL47:
 591              	.L35:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 107


 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 592              		.loc 1 607 9 view .LVU194
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 593              		.loc 1 609 45 is_stmt 0 view .LVU195
 594 01c2 216C     		ldr	r1, [r4, #64]
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 595              		.loc 1 608 69 view .LVU196
 596 01c4 0B43     		orrs	r3, r3, r1
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 597              		.loc 1 610 45 view .LVU197
 598 01c6 616C     		ldr	r1, [r4, #68]
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 599              		.loc 1 609 60 view .LVU198
 600 01c8 0B43     		orrs	r3, r3, r1
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                     );
 601              		.loc 1 611 45 view .LVU199
 602 01ca A16C     		ldr	r1, [r4, #72]
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode
 603              		.loc 1 610 60 view .LVU200
 604 01cc 0B43     		orrs	r3, r3, r1
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 605              		.loc 1 607 18 view .LVU201
 606 01ce 1A43     		orrs	r2, r2, r3
 607              	.LVL48:
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 608              		.loc 1 607 18 view .LVU202
 609 01d0 42F00102 		orr	r2, r2, #1
 610              	.LVL49:
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                      (hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE) |
 611              		.loc 1 607 18 view .LVU203
 612 01d4 9FE7     		b	.L24
 613              	.LVL50:
 614              	.L25:
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 615              		.loc 1 657 10 is_stmt 1 view .LVU204
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 616              		.loc 1 657 13 is_stmt 0 view .LVU205
 617 01d6 B3F5001F 		cmp	r3, #2097152
 618 01da CDD1     		bne	.L26
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ADC_CHSELR_SQ_ALL,
 619              		.loc 1 668 7 is_stmt 1 view .LVU206
 620 01dc 2168     		ldr	r1, [r4]
 621 01de 8B6A     		ldr	r3, [r1, #40]
 622 01e0 E369     		ldr	r3, [r4, #28]
 623 01e2 013B     		subs	r3, r3, #1
 624 01e4 9B00     		lsls	r3, r3, #2
 625 01e6 03F01C03 		and	r3, r3, #28
 626 01ea 6FF00F02 		mvn	r2, #15
 627 01ee 02FA03F3 		lsl	r3, r2, r3
 628 01f2 226E     		ldr	r2, [r4, #96]
 629 01f4 1343     		orrs	r3, r3, r2
 630 01f6 8B62     		str	r3, [r1, #40]
 631 01f8 BEE7     		b	.L26
 632              	.L36:
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 633              		.loc 1 681 7 view .LVU207
 634 01fa 0023     		movs	r3, #0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 108


 635 01fc E365     		str	r3, [r4, #92]
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 636              		.loc 1 684 7 view .LVU208
 637 01fe A36D     		ldr	r3, [r4, #88]
 638 0200 23F00303 		bic	r3, r3, #3
 639 0204 43F00103 		orr	r3, r3, #1
 640 0208 A365     		str	r3, [r4, #88]
 641 020a 04E0     		b	.L10
 642              	.LVL51:
 643              	.L17:
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 644              		.loc 1 705 5 view .LVU209
 645 020c A36D     		ldr	r3, [r4, #88]
 646              	.LVL52:
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 647              		.loc 1 705 5 is_stmt 0 view .LVU210
 648 020e 43F01003 		orr	r3, r3, #16
 649 0212 A365     		str	r3, [r4, #88]
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 650              		.loc 1 707 5 is_stmt 1 view .LVU211
 651              	.LVL53:
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 652              		.loc 1 707 20 is_stmt 0 view .LVU212
 653 0214 0120     		movs	r0, #1
 654              	.LVL54:
 655              	.L10:
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 656              		.loc 1 711 1 view .LVU213
 657 0216 03B0     		add	sp, sp, #12
 658              		.cfi_remember_state
 659              		.cfi_def_cfa_offset 12
 660              		@ sp needed
 661 0218 30BD     		pop	{r4, r5, pc}
 662              	.LVL55:
 663              	.L28:
 664              		.cfi_restore_state
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 665              		.loc 1 390 12 view .LVU214
 666 021a 0120     		movs	r0, #1
 667              	.LVL56:
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 668              		.loc 1 390 12 view .LVU215
 669 021c FBE7     		b	.L10
 670              	.L38:
 671 021e 00BF     		.align	2
 672              	.L37:
 673 0220 00000000 		.word	SystemCoreClock
 674 0224 632D3E05 		.word	87960931
 675 0228 02FCFF1F 		.word	536869890
 676 022c 00200140 		.word	1073815552
 677              		.cfi_endproc
 678              	.LFE851:
 680              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 681              		.align	1
 682              		.weak	HAL_ADC_MspDeInit
 683              		.syntax unified
 684              		.thumb
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 109


 685              		.thumb_func
 687              	HAL_ADC_MspDeInit:
 688              	.LVL57:
 689              	.LFB854:
 863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
 867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the core clock reset all ADC instances).
 869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
 870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
 872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 690              		.loc 1 872 1 is_stmt 1 view -0
 691              		.cfi_startproc
 692              		@ args = 0, pretend = 0, frame = 0
 693              		@ frame_needed = 0, uses_anonymous_args = 0
 694              		@ link register save eliminated.
 873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
 695              		.loc 1 874 3 view .LVU217
 875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****    */
 879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 696              		.loc 1 879 1 is_stmt 0 view .LVU218
 697 0000 7047     		bx	lr
 698              		.cfi_endproc
 699              	.LFE854:
 701              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 702              		.align	1
 703              		.global	HAL_ADC_PollForConversion
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 708              	HAL_ADC_PollForConversion:
 709              	.LVL58:
 710              	.LFB857:
 880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Register a User ADC Callback
 884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                the configuration information for the specified ADC.
 887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This parameter can be one of the following values:
 889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 110


 897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
 902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
 903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                            pADC_CallbackTypeDef pCallback)
 905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (pCallback == NULL)
 909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update the error code */
 911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     return HAL_ERROR;
 914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
 919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 111


 954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
 957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
 958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
 961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status = HAL_ERROR;
 962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
 966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
 968:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 970:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 973:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 974:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 976:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 977:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
 978:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
 979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 981:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
 982:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status = HAL_ERROR;
 983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
 984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 985:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
 987:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update the error code */
 989:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 991:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Return error status */
 992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     status =  HAL_ERROR;
 993:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 994:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 995:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return status;
 996:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 997:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 998:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
 999:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1001:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1002:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                the configuration information for the specified ADC.
1003:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1004:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This parameter can be one of the following values:
1005:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1006:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1007:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1010:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 112


1011:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1012:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1013:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1014:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1016:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1017:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1018:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1019:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1020:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1021:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1022:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
1023:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1024:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
1025:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1027:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1028:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1030:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1031:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1032:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1033:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1034:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1035:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1036:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1037:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1038:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1039:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1040:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1041:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1042:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1044:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1045:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1047:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1049:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1052:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1053:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1054:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1055:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1056:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1057:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1059:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1060:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1061:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1062:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
1063:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
1064:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1065:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1066:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
1067:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status =  HAL_ERROR;
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 113


1068:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1069:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1070:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1071:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1072:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1073:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     switch (CallbackID)
1074:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1075:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1076:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1077:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1078:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1079:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1080:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1081:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1082:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1083:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       default :
1084:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update the error code */
1085:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1086:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1087:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Return error status */
1088:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         status =  HAL_ERROR;
1089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         break;
1090:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1091:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1092:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1093:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1094:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update the error code */
1095:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1096:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1097:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Return error status */
1098:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     status =  HAL_ERROR;
1099:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return status;
1102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
1108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *  @brief    ADC IO operation functions
1112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
1113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
1114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
1115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                       ##### IO operation functions #####
1116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
1117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]  This section provides functions allowing to:
1118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Start conversion of regular group.
1119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Stop conversion of regular group.
1120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Poll for conversion event.
1122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Get result of regular channel conversion.
1123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 114


1125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Handle ADC interrupt request
1126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
1129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
1130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_LOCK(hadc);
1149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
1151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state                                                        */
1157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code */
1164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Reset all ADC error code fields */
1165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Process unlocked */
1172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* trigger event.                                                       */
1180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start ADC group regular conversion */
1181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 115


1182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
1213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 116


1239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 711              		.loc 1 1257 1 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		.loc 1 1257 1 is_stmt 0 view .LVU220
 716 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 717              		.cfi_def_cfa_offset 24
 718              		.cfi_offset 3, -24
 719              		.cfi_offset 4, -20
 720              		.cfi_offset 5, -16
 721              		.cfi_offset 6, -12
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 0446     		mov	r4, r0
 725 0004 0D46     		mov	r5, r1
1258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 726              		.loc 1 1258 3 is_stmt 1 view .LVU221
1259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_flag_end;
 727              		.loc 1 1259 3 view .LVU222
1260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 728              		.loc 1 1262 3 view .LVU223
1263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 729              		.loc 1 1265 3 view .LVU224
 730              		.loc 1 1265 17 is_stmt 0 view .LVU225
 731 0006 4669     		ldr	r6, [r0, #20]
 732              		.loc 1 1265 6 view .LVU226
 733 0008 082E     		cmp	r6, #8
 734 000a 05D0     		beq	.L41
1266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_flag_end = ADC_FLAG_EOS;
1268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 117


1272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* each conversion:                                                       */
1274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) != 0UL)
 735              		.loc 1 1278 5 is_stmt 1 view .LVU227
 736              		.loc 1 1278 14 is_stmt 0 view .LVU228
 737 000c 0368     		ldr	r3, [r0]
 738              		.loc 1 1278 24 view .LVU229
 739 000e DB68     		ldr	r3, [r3, #12]
 740              		.loc 1 1278 8 view .LVU230
 741 0010 13F0010F 		tst	r3, #1
 742 0014 1ED1     		bne	.L52
1279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
1281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       return HAL_ERROR;
1284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_flag_end = (ADC_FLAG_EOC);
 743              		.loc 1 1287 20 view .LVU231
 744 0016 0426     		movs	r6, #4
 745              	.L41:
 746              	.LVL59:
1288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Get tick count */
1292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tickstart = HAL_GetTick();
 747              		.loc 1 1292 3 is_stmt 1 view .LVU232
 748              		.loc 1 1292 15 is_stmt 0 view .LVU233
 749 0018 FFF7FEFF 		bl	HAL_GetTick
 750              	.LVL60:
 751              		.loc 1 1292 15 view .LVU234
 752 001c 0746     		mov	r7, r0
 753              	.LVL61:
1293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 754              		.loc 1 1295 3 is_stmt 1 view .LVU235
 755              	.L44:
 756              		.loc 1 1295 47 view .LVU236
 757              		.loc 1 1295 15 is_stmt 0 view .LVU237
 758 001e 2368     		ldr	r3, [r4]
 759              		.loc 1 1295 25 view .LVU238
 760 0020 1A68     		ldr	r2, [r3]
 761              		.loc 1 1295 47 view .LVU239
 762 0022 3242     		tst	r2, r6
 763 0024 1CD1     		bne	.L53
1296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 764              		.loc 1 1298 5 is_stmt 1 view .LVU240
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 118


 765              		.loc 1 1298 8 is_stmt 0 view .LVU241
 766 0026 B5F1FF3F 		cmp	r5, #-1
 767 002a F8D0     		beq	.L44
1299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 768              		.loc 1 1300 7 is_stmt 1 view .LVU242
 769              		.loc 1 1300 13 is_stmt 0 view .LVU243
 770 002c FFF7FEFF 		bl	HAL_GetTick
 771              	.LVL62:
 772              		.loc 1 1300 27 view .LVU244
 773 0030 C31B     		subs	r3, r0, r7
 774              		.loc 1 1300 10 view .LVU245
 775 0032 AB42     		cmp	r3, r5
 776 0034 01D8     		bhi	.L45
 777              		.loc 1 1300 51 discriminator 1 view .LVU246
 778 0036 002D     		cmp	r5, #0
 779 0038 F1D1     		bne	.L44
 780              	.L45:
1301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((hadc->Instance->ISR & tmp_flag_end) == 0UL)
 781              		.loc 1 1303 9 is_stmt 1 view .LVU247
 782              		.loc 1 1303 18 is_stmt 0 view .LVU248
 783 003a 2368     		ldr	r3, [r4]
 784              		.loc 1 1303 28 view .LVU249
 785 003c 1B68     		ldr	r3, [r3]
 786              		.loc 1 1303 12 view .LVU250
 787 003e 3342     		tst	r3, r6
 788 0040 EDD1     		bne	.L44
1304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 789              		.loc 1 1306 11 is_stmt 1 view .LVU251
 790 0042 A36D     		ldr	r3, [r4, #88]
 791 0044 43F00403 		orr	r3, r3, #4
 792 0048 A365     		str	r3, [r4, #88]
1307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 793              		.loc 1 1308 11 view .LVU252
 794              		.loc 1 1308 11 view .LVU253
 795 004a 0023     		movs	r3, #0
 796 004c 84F85430 		strb	r3, [r4, #84]
 797              		.loc 1 1308 11 view .LVU254
1309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_TIMEOUT;
 798              		.loc 1 1310 11 view .LVU255
 799              		.loc 1 1310 18 is_stmt 0 view .LVU256
 800 0050 0320     		movs	r0, #3
 801 0052 28E0     		b	.L42
 802              	.LVL63:
 803              	.L52:
1281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 804              		.loc 1 1281 7 is_stmt 1 view .LVU257
 805 0054 836D     		ldr	r3, [r0, #88]
 806 0056 43F02003 		orr	r3, r3, #32
 807 005a 8365     		str	r3, [r0, #88]
1283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 119


 808              		.loc 1 1283 7 view .LVU258
1283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 809              		.loc 1 1283 14 is_stmt 0 view .LVU259
 810 005c 0120     		movs	r0, #1
 811              	.LVL64:
1283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 812              		.loc 1 1283 14 view .LVU260
 813 005e 22E0     		b	.L42
 814              	.LVL65:
 815              	.L53:
1311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Update ADC state machine */
1317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 816              		.loc 1 1317 3 is_stmt 1 view .LVU261
 817 0060 A26D     		ldr	r2, [r4, #88]
 818 0062 42F40072 		orr	r2, r2, #512
 819 0066 A265     		str	r2, [r4, #88]
1318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 820              		.loc 1 1321 3 view .LVU262
 821              	.LVL66:
 822              	.LBB166:
 823              	.LBI166:
2395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 824              		.loc 2 2395 26 view .LVU263
 825              	.LBB167:
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 826              		.loc 2 2397 3 view .LVU264
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 827              		.loc 2 2397 12 is_stmt 0 view .LVU265
 828 0068 DA68     		ldr	r2, [r3, #12]
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 829              		.loc 2 2397 106 view .LVU266
 830 006a 12F4406F 		tst	r2, #3072
 831 006e 15D1     		bne	.L47
 832              	.LVL67:
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 833              		.loc 2 2397 106 view .LVU267
 834              	.LBE167:
 835              	.LBE166:
1322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 836              		.loc 1 1322 21 view .LVU268
 837 0070 A27E     		ldrb	r2, [r4, #26]	@ zero_extendqisi2
 838              		.loc 1 1322 7 view .LVU269
 839 0072 9AB9     		cbnz	r2, .L47
1323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
1324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check whether end of sequence is reached */
1326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 840              		.loc 1 1326 5 is_stmt 1 view .LVU270
 841              		.loc 1 1326 9 is_stmt 0 view .LVU271
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 120


 842 0074 1A68     		ldr	r2, [r3]
 843              		.loc 1 1326 8 view .LVU272
 844 0076 12F0080F 		tst	r2, #8
 845 007a 0FD0     		beq	.L47
1327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* ADSTART==0 (no conversion on going)                                  */
1330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 846              		.loc 1 1330 7 is_stmt 1 view .LVU273
 847              	.LVL68:
 848              	.LBB168:
 849              	.LBI168:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 850              		.loc 2 4435 26 view .LVU274
 851              	.LBB169:
 852              		.loc 2 4437 3 view .LVU275
 853              		.loc 2 4437 12 is_stmt 0 view .LVU276
 854 007c 9A68     		ldr	r2, [r3, #8]
 855              		.loc 2 4437 74 view .LVU277
 856 007e 12F0040F 		tst	r2, #4
 857 0082 11D1     		bne	.L48
 858              	.LVL69:
 859              		.loc 2 4437 74 view .LVU278
 860              	.LBE169:
 861              	.LBE168:
1331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
1333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* HAL_Start_IT(), but is not disabled here because can be used       */
1335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
1336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
 862              		.loc 1 1336 9 is_stmt 1 view .LVU279
 863 0084 5A68     		ldr	r2, [r3, #4]
 864 0086 22F00C02 		bic	r2, r2, #12
 865 008a 5A60     		str	r2, [r3, #4]
1337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC state */
1339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
 866              		.loc 1 1339 9 view .LVU280
 867 008c A36D     		ldr	r3, [r4, #88]
 868 008e 23F48073 		bic	r3, r3, #256
 869 0092 23F00103 		bic	r3, r3, #1
 870 0096 43F00103 		orr	r3, r3, #1
 871 009a A365     		str	r3, [r4, #88]
 872              	.L47:
1340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
1341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                           HAL_ADC_STATE_READY);
1342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
1344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Change ADC state to error state */
1346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
1349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 121


1352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
 873              		.loc 1 1357 3 view .LVU281
 874              		.loc 1 1357 17 is_stmt 0 view .LVU282
 875 009c 207E     		ldrb	r0, [r4, #24]	@ zero_extendqisi2
 876              		.loc 1 1357 6 view .LVU283
 877 009e 60B9     		cbnz	r0, .L50
1358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear regular group conversion flag */
1360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 878              		.loc 1 1360 5 is_stmt 1 view .LVU284
 879 00a0 2368     		ldr	r3, [r4]
 880 00a2 0C22     		movs	r2, #12
 881 00a4 1A60     		str	r2, [r3]
 882              	.LVL70:
 883              	.L42:
1361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return function status */
1364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
1365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 884              		.loc 1 1365 1 is_stmt 0 view .LVU285
 885 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 886              	.LVL71:
 887              	.L48:
1346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 888              		.loc 1 1346 9 is_stmt 1 view .LVU286
 889 00a8 A36D     		ldr	r3, [r4, #88]
 890 00aa 43F02003 		orr	r3, r3, #32
 891 00ae A365     		str	r3, [r4, #88]
1349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 892              		.loc 1 1349 9 view .LVU287
 893 00b0 E36D     		ldr	r3, [r4, #92]
 894 00b2 43F00103 		orr	r3, r3, #1
 895 00b6 E365     		str	r3, [r4, #92]
 896 00b8 F0E7     		b	.L47
 897              	.L50:
1364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 898              		.loc 1 1364 10 is_stmt 0 view .LVU288
 899 00ba 0020     		movs	r0, #0
 900 00bc F3E7     		b	.L42
 901              		.cfi_endproc
 902              	.LFE857:
 904              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 905              		.align	1
 906              		.global	HAL_ADC_PollForEvent
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	HAL_ADC_PollForEvent:
 912              	.LVL72:
 913              	.LFB858:
1366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 122


1367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Poll for ADC event.
1369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param EventType the ADC event type.
1371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          This parameter can be one of the following values:
1372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                                       STM32 series)
1375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                                       STM32 series)
1377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *                                       STM32 series)
1379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 914              		.loc 1 1390 1 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		.loc 1 1390 1 is_stmt 0 view .LVU290
 919 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 920              		.cfi_def_cfa_offset 24
 921              		.cfi_offset 4, -24
 922              		.cfi_offset 5, -20
 923              		.cfi_offset 6, -16
 924              		.cfi_offset 7, -12
 925              		.cfi_offset 8, -8
 926              		.cfi_offset 14, -4
 927 0004 0646     		mov	r6, r0
 928 0006 0D46     		mov	r5, r1
 929 0008 1746     		mov	r7, r2
1391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 930              		.loc 1 1391 3 is_stmt 1 view .LVU291
1392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 931              		.loc 1 1394 3 view .LVU292
1395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 932              		.loc 1 1395 3 view .LVU293
1396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Get tick count */
1398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tickstart = HAL_GetTick();
 933              		.loc 1 1398 3 view .LVU294
 934              		.loc 1 1398 15 is_stmt 0 view .LVU295
 935 000a FFF7FEFF 		bl	HAL_GetTick
 936              	.LVL73:
 937              		.loc 1 1398 15 view .LVU296
 938 000e 8046     		mov	r8, r0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 123


 939              	.LVL74:
1399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check selected event flag */
1401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 940              		.loc 1 1401 3 is_stmt 1 view .LVU297
 941              	.L56:
 942              		.loc 1 1401 46 view .LVU298
 943              		.loc 1 1401 10 is_stmt 0 view .LVU299
 944 0010 3468     		ldr	r4, [r6]
 945 0012 2368     		ldr	r3, [r4]
 946              		.loc 1 1401 46 view .LVU300
 947 0014 35EA0303 		bics	r3, r5, r3
 948 0018 18D0     		beq	.L68
1402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 949              		.loc 1 1404 5 is_stmt 1 view .LVU301
 950              		.loc 1 1404 8 is_stmt 0 view .LVU302
 951 001a B7F1FF3F 		cmp	r7, #-1
 952 001e F7D0     		beq	.L56
1405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 953              		.loc 1 1406 7 is_stmt 1 view .LVU303
 954              		.loc 1 1406 13 is_stmt 0 view .LVU304
 955 0020 FFF7FEFF 		bl	HAL_GetTick
 956              	.LVL75:
 957              		.loc 1 1406 27 view .LVU305
 958 0024 A0EB0800 		sub	r0, r0, r8
 959              		.loc 1 1406 10 view .LVU306
 960 0028 B842     		cmp	r0, r7
 961 002a 01D8     		bhi	.L57
 962              		.loc 1 1406 51 discriminator 1 view .LVU307
 963 002c 002F     		cmp	r7, #0
 964 002e EFD1     		bne	.L56
 965              	.L57:
1407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 966              		.loc 1 1409 9 is_stmt 1 view .LVU308
 967              		.loc 1 1409 13 is_stmt 0 view .LVU309
 968 0030 3368     		ldr	r3, [r6]
 969 0032 1B68     		ldr	r3, [r3]
 970              		.loc 1 1409 12 view .LVU310
 971 0034 35EA0303 		bics	r3, r5, r3
 972 0038 EAD0     		beq	.L56
1410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to timeout */
1412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 973              		.loc 1 1412 11 is_stmt 1 view .LVU311
 974 003a B36D     		ldr	r3, [r6, #88]
 975 003c 43F00403 		orr	r3, r3, #4
 976 0040 B365     		str	r3, [r6, #88]
1413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 977              		.loc 1 1414 11 view .LVU312
 978              		.loc 1 1414 11 view .LVU313
 979 0042 0023     		movs	r3, #0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 124


 980 0044 86F85430 		strb	r3, [r6, #84]
 981              		.loc 1 1414 11 view .LVU314
1415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_TIMEOUT;
 982              		.loc 1 1416 11 view .LVU315
 983              		.loc 1 1416 18 is_stmt 0 view .LVU316
 984 0048 0320     		movs	r0, #3
 985 004a 22E0     		b	.L58
 986              	.L68:
1417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   switch (EventType)
 987              		.loc 1 1422 3 is_stmt 1 view .LVU317
 988 004c B5F5807F 		cmp	r5, #256
 989 0050 21D0     		beq	.L60
 990 0052 0BD8     		bhi	.L61
 991 0054 022D     		cmp	r5, #2
 992 0056 15D0     		beq	.L62
 993 0058 802D     		cmp	r5, #128
 994 005a 25D1     		bne	.L64
1423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* End Of Sampling event */
1425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* For example:                                                             */
1439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_AWD_EVENT:
1445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 995              		.loc 1 1446 7 view .LVU318
 996 005c B36D     		ldr	r3, [r6, #88]
 997 005e 43F48033 		orr	r3, r3, #65536
 998 0062 B365     		str	r3, [r6, #88]
1447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
 999              		.loc 1 1449 7 view .LVU319
 1000 0064 8023     		movs	r3, #128
 1001 0066 2360     		str	r3, [r4]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 125


1450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
 1002              		.loc 1 1451 7 view .LVU320
1452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_AWD2_EVENT:
1455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     case ADC_AWD3_EVENT:
1465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Overrun event */
1474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* considered as an error.                                                */
1477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* overrun ")                                                             */
1479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC state */
1482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set ADC error code to overrun */
1485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
1488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****            as OVR is cleared. */
1492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       break;
1495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return function status */
1498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
 1003              		.loc 1 1498 10 is_stmt 0 view .LVU321
 1004 0068 0020     		movs	r0, #0
1451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1005              		.loc 1 1451 7 view .LVU322
 1006 006a 12E0     		b	.L58
 1007              	.L61:
1422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 126


 1008              		.loc 1 1422 3 view .LVU323
 1009 006c B5F5007F 		cmp	r5, #512
 1010 0070 1AD1     		bne	.L64
1466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1011              		.loc 1 1466 7 is_stmt 1 view .LVU324
 1012 0072 B36D     		ldr	r3, [r6, #88]
 1013 0074 43F48023 		orr	r3, r3, #262144
 1014 0078 B365     		str	r3, [r6, #88]
1469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1015              		.loc 1 1469 7 view .LVU325
 1016 007a 4FF40073 		mov	r3, #512
 1017 007e 2360     		str	r3, [r4]
1471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1018              		.loc 1 1471 7 view .LVU326
 1019              		.loc 1 1498 10 is_stmt 0 view .LVU327
 1020 0080 0020     		movs	r0, #0
1471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1021              		.loc 1 1471 7 view .LVU328
 1022 0082 06E0     		b	.L58
 1023              	.L62:
1427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1024              		.loc 1 1427 7 is_stmt 1 view .LVU329
 1025 0084 B36D     		ldr	r3, [r6, #88]
 1026 0086 43F40063 		orr	r3, r3, #2048
 1027 008a B365     		str	r3, [r6, #88]
1430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1028              		.loc 1 1430 7 view .LVU330
 1029 008c 0223     		movs	r3, #2
 1030 008e 2360     		str	r3, [r4]
1432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1031              		.loc 1 1432 7 view .LVU331
 1032              		.loc 1 1498 10 is_stmt 0 view .LVU332
 1033 0090 0020     		movs	r0, #0
 1034              	.L58:
1499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1035              		.loc 1 1499 1 view .LVU333
 1036 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1037              	.LVL76:
 1038              	.L60:
1456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1039              		.loc 1 1456 7 is_stmt 1 view .LVU334
 1040 0096 B36D     		ldr	r3, [r6, #88]
 1041 0098 43F40033 		orr	r3, r3, #131072
 1042 009c B365     		str	r3, [r6, #88]
1459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1043              		.loc 1 1459 7 view .LVU335
 1044 009e 4FF48073 		mov	r3, #256
 1045 00a2 2360     		str	r3, [r4]
1461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1046              		.loc 1 1461 7 view .LVU336
1498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1047              		.loc 1 1498 10 is_stmt 0 view .LVU337
 1048 00a4 0020     		movs	r0, #0
1461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1049              		.loc 1 1461 7 view .LVU338
 1050 00a6 F4E7     		b	.L58
 1051              	.L64:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 127


1479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1052              		.loc 1 1479 7 is_stmt 1 view .LVU339
1479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1053              		.loc 1 1479 21 is_stmt 0 view .LVU340
 1054 00a8 336B     		ldr	r3, [r6, #48]
1479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1055              		.loc 1 1479 10 view .LVU341
 1056 00aa 4BB9     		cbnz	r3, .L66
1482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1057              		.loc 1 1482 9 is_stmt 1 view .LVU342
 1058 00ac B36D     		ldr	r3, [r6, #88]
 1059 00ae 43F48063 		orr	r3, r3, #1024
 1060 00b2 B365     		str	r3, [r6, #88]
1485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 1061              		.loc 1 1485 9 view .LVU343
 1062 00b4 F36D     		ldr	r3, [r6, #92]
 1063 00b6 43F00203 		orr	r3, r3, #2
 1064 00ba F365     		str	r3, [r6, #92]
1498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1065              		.loc 1 1498 10 is_stmt 0 view .LVU344
 1066 00bc 0020     		movs	r0, #0
 1067 00be E8E7     		b	.L58
 1068              	.L66:
1492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 1069              		.loc 1 1492 9 is_stmt 1 view .LVU345
 1070 00c0 1023     		movs	r3, #16
 1071 00c2 2360     		str	r3, [r4]
1498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1072              		.loc 1 1498 10 is_stmt 0 view .LVU346
 1073 00c4 0020     		movs	r0, #0
 1074 00c6 E4E7     		b	.L58
 1075              		.cfi_endproc
 1076              	.LFE858:
 1078              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1079              		.align	1
 1080              		.global	HAL_ADC_GetValue
 1081              		.syntax unified
 1082              		.thumb
 1083              		.thumb_func
 1085              	HAL_ADC_GetValue:
 1086              	.LVL77:
 1087              	.LFB863:
1500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         OVR overrun.
1506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         mode), the user must:
1513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 128


1515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
1518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_LOCK(hadc);
1530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
1532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state                                                        */
1538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code */
1546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Reset all ADC error code fields */
1547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Process unlocked */
1554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
1567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         default:
1569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
1571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 129


1572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* trigger event.                                                       */
1586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start ADC group regular conversion */
1587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
1606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
1611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
1618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 130


1629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
1651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param pData Destination Buffer address.
1654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
1658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_LOCK(hadc);
1668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Specific case for first call occurrence of this function (DMA transfer */
1670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* not activated and ADC disabled), DMA transfer must be activated        */
1671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* with ADC disabled.                                                     */
1672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) == 0UL)
1673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
1675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Disable ADC */
1677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_Disable(hadc->Instance);
1678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC DMA mode */
1681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
1682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
1685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 131


1686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state                                                        */
1691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code */
1698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Reset all ADC error code fields */
1699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set the DMA error callback */
1708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* start (in case of SW start):                                         */
1713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* operations)                                                          */
1717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Process unlocked */
1720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start the DMA channel */
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)
1729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* trigger event.                                                       */
1734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Start ADC group regular conversion */
1735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
1739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 132


1743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC peripheral.
1750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
1752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
1754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
1761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
1776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update ADC state machine to error */
1778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
1787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
1788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
1793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (void)ADC_Disable(hadc);
1795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 133


1800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
1807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
1808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
1813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
1814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
1820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            to flag EOC.
1824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         To clear this flag, either use function:
1828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval ADC group regular conversion data
1833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
1835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1088              		.loc 1 1835 1 is_stmt 1 view -0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
1836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1093              		.loc 1 1837 3 view .LVU348
1838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return ADC converted value */
1843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return hadc->Instance->DR;
 1094              		.loc 1 1843 3 view .LVU349
 1095              		.loc 1 1843 14 is_stmt 0 view .LVU350
 1096 0000 0368     		ldr	r3, [r0]
 1097              		.loc 1 1843 24 view .LVU351
 1098 0002 186C     		ldr	r0, [r3, #64]
 1099              	.LVL78:
1844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 134


 1100              		.loc 1 1844 1 view .LVU352
 1101 0004 7047     		bx	lr
 1102              		.cfi_endproc
 1103              	.LFE863:
 1105              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1106              		.align	1
 1107              		.weak	HAL_ADC_ConvCpltCallback
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1112              	HAL_ADC_ConvCpltCallback:
 1113              	.LVL79:
 1114              	.LFB865:
1845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
1847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
1849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
1850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
1851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
1852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
1853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
1854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
1855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
1856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
1858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
1862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* End Of Sampling callback */
1872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
1874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
1875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
1876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear regular group conversion flag */
1879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
1883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
1885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 135


1889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC state */
1890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
1895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* to disable interruption.                                               */
1896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
1898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
1899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
1900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
1902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
1903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
1905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
1908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
1909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
1910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
1911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC state */
1914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
1915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
1916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_READY);
1917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
1919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
1920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Change ADC state to error state */
1921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
1924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
1926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
1927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
1928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Conversion complete callback */
1930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
1931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
1932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       possibility to use:                                              */
1933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*        " if ( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "               */
1934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
1937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear regular group conversion flag */
1941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
1942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
1944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 136


1946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
1949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
1950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
1952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Level out of window 1 callback */
1955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
1957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
1958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
1959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
1966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
1967:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1968:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
1969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1970:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1971:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Level out of window 2 callback */
1972:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1973:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
1974:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
1975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
1976:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1977:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1978:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1980:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1981:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1982:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
1983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
1984:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
1985:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
1986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1987:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1988:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Level out of window 3 callback */
1989:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1990:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
1991:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
1992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
1993:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1994:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1995:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1996:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1997:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
1998:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
1999:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2001:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2002:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 137


2003:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2004:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2005:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* overrun ")                                                             */
2006:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2007:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* error.                                                                 */
2008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2009:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2010:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       overrun_error = 1UL;
2011:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2012:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2013:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2014:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Check DMA configuration */
2015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2016:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2017:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         overrun_error = 1UL;
2018:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2019:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2020:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2021:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (overrun_error == 1UL)
2022:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2023:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Change ADC state to error state */
2024:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2025:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2026:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to overrun */
2027:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2028:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2029:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Error callback */
2030:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2031:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2032:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2033:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2034:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2035:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2036:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2037:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2038:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2039:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2040:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2041:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC overrun flag */
2042:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2043:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2044:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2045:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ========== Check channel configuration ready flag ========== */
2046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_CCRDY) == ADC_FLAG_CCRDY) && ((tmp_ier & ADC_IT_CCRDY) == ADC_IT_CCRDY))
2047:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2048:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Channel configuration ready callback */
2049:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADCEx_ChannelConfigReadyCallback(hadc);
2050:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2051:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2052:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_CCRDY);
2053:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2054:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2055:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2056:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2057:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2058:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2059:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 138


2060:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2061:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2062:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1115              		.loc 1 2062 1 is_stmt 1 view -0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
2063:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2064:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
 1120              		.loc 1 2064 3 view .LVU354
2065:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2066:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2067:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2068:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****    */
2069:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1121              		.loc 1 2069 1 is_stmt 0 view .LVU355
 1122 0000 7047     		bx	lr
 1123              		.cfi_endproc
 1124              	.LFE865:
 1126              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1127              		.align	1
 1128              		.weak	HAL_ADC_ConvHalfCpltCallback
 1129              		.syntax unified
 1130              		.thumb
 1131              		.thumb_func
 1133              	HAL_ADC_ConvHalfCpltCallback:
 1134              	.LVL80:
 1135              	.LFB866:
2070:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2071:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2072:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2073:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2074:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2075:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2076:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2077:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1136              		.loc 1 2077 1 is_stmt 1 view -0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
2078:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2079:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
 1141              		.loc 1 2079 3 view .LVU357
2080:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2081:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2082:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2083:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2084:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1142              		.loc 1 2084 1 is_stmt 0 view .LVU358
 1143 0000 7047     		bx	lr
 1144              		.cfi_endproc
 1145              	.LFE866:
 1147              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1148              		.align	1
 1149              		.syntax unified
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 139


 1150              		.thumb
 1151              		.thumb_func
 1153              	ADC_DMAHalfConvCplt:
 1154              	.LVL81:
 1155              	.LFB877:
2085:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2086:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2087:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2088:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2089:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2090:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2091:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2092:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2093:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2094:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
2095:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2096:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2097:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2098:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2099:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   UNUSED(hadc);
2117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief    Peripheral Control functions
2129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
2130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
2131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****              ##### Peripheral Control functions #####
2133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]  This section provides functions allowing to:
2135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Configure channels on regular group
2136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Configure the analog watchdog
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 140


2137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
2139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
2140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         These internal paths can be disabled using function
2147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         HAL_ADC_DeInit().
2148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         without resetting the ADC.
2153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param pConfig Structure of ADC channel assigned to ADC group regular.
2157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
2158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *pConfig)
2160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
2168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
2169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(pConfig->Rank));
2174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(pConfig->Rank));
2180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
2183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Channel number                                                        */
2188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
2190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* ADC sequencer.                                                         */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 141


2194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
2195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* channel.                                                               */
2199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (pConfig->Rank != ADC_RANK_NONE)
2200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Regular sequence configuration */
2202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
2204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, pConfig->Channel);
2213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
2215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
2222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(pConfig->Channel) << (pConfig->Rank & 0x1FUL));
2223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (((pConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, pConfig->Rank, pConfig->Channel);
2231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, pConfig->Channel, pConfig->SamplingTime);
2236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
2238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((pConfig->Channel == ADC_CHANNEL_TEMPSENSOR) &&
2250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 142


2251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
2254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Wait loop initialization and execution */
2257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
2258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (100000
2261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
2262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             wait_loop_index--;
2264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
2265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VBAT)
2267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if ((pConfig->Channel == ADC_CHANNEL_VREFINT) &&
2273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
2277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* nothing to do */
2281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Regular sequencer configuration */
2287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       another channel.                                               */
2290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)       ||
2292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
2293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, pConfig->Channel);
2297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* paths.                                                                 */
2302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(pConfig->Channel))
2303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (pConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 143


2308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
2310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VBAT)
2312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
2315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else if (pConfig->Channel == ADC_CHANNEL_VREFINT)
2317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
2320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* nothing to do */
2324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* parameters.                                                              */
2332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Update ADC state machine to error */
2335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
2343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
2349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
2350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
2351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the ADC.
2352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         For parameters constraints, see comments of structure
2354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds can be modified
2356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         while ADC conversion is on going.
2357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param pAnalogWDGConfig Structure of ADC analog watchdog configuration
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 144


2365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status
2366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *pAnalo
2368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
2371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
2372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
2373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
2377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
2378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
2379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
2381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(pAnalogWDGConfig->Channel));
2383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verify thresholds range */
2386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->HighThreshold));
2392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, pAnalogWDGConfig->LowThreshold));
2393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->HighThreshold));
2398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
2399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_LOCK(hadc);
2402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* conversion on going on ADC group regular:                                */
2406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Analog watchdog configuration */
2410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Constraint of ADC on this STM32 series: ADC must be disable
2413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****          to modify bitfields of register ADC_CFGR1 */
2414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         backup_setting_adc_enable_state = 1UL;
2417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
2418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 145


2422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*    channels.                                                         */
2423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1,
2427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
2428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
2429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
2433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
2437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (backup_setting_adc_enable_state == 1UL)
2441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (tmp_hal_status == HAL_OK)
2443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           tmp_hal_status = ADC_Enable(hadc);
2445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
2452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
2455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
2456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
2458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (pAnalogWDGConfig->ITMode == ENABLE)
2459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
2461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
2463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
2465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
2468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       switch (pAnalogWDGConfig->WatchdogMode)
2471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
2474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* several channels by successive calls of this function.           */
2475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 146


2479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           else
2480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(pAnalogWDGConfig
2482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
2483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, 
2487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber, 
2488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                           LL_ADC_AWD_ALL_CHANNELS_REG);
2489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, LL_ADC_
2493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
2494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
2506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
2511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
2515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       else
2519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
2528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (pAnalogWDGConfig->ITMode == ENABLE)
2531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
2533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 147


2536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
2537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
2544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (pAnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
2547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* are set to 0.                                                        */
2549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_high_threshold_shifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Hig
2550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
2551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else
2554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* No need to shift the offset with respect to the selected ADC resolution: */
2556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* are set to 0.                                                        */
2558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_high_threshold_shifted = pAnalogWDGConfig->HighThreshold;
2559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
2560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
2563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, pAnalogWDGConfig->WatchdogNumber, tmp_awd_high_th
2564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
2565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return tmp_hal_status;
2569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
2578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *
2579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @verbatim
2580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****  ===============================================================================
2583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     [..]
2584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
2585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     peripheral.
2586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Check the ADC state
2587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (+) Check the ADC error code
2588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** @endverbatim
2590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
2591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 148


2593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Return the ADC handle state.
2595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
2596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         compared with states bits.
2597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         For example:
2598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
2599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
2600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
2604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return ADC handle state */
2609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return hadc->State;
2610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Return the ADC error code.
2614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return hadc->ErrorCode;
2623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @}
2631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @{
2635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Stop ADC conversion.
2639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         stopped to disable the ADC.
2641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param  hadc ADC handle
2642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
2643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc)
2645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
2647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
2649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 149


2650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
2652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* this function if not needed.                                             */
2653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
2654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
2658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Stop ADC group regular conversion */
2660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
2661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Get tick count */
2665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tickstart = HAL_GetTick();
2666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
2670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to error */
2675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_ERROR;
2681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return HAL status */
2688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Enable the selected ADC.
2693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
2697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
2699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
2701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 150


2707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
2710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
2711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
2713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       return HAL_ERROR;
2719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Enable the ADC peripheral */
2722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
2723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) & LL_ADC_PATH_INT
2725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         != 0UL)
2726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Delay for temperature sensor buffer stabilization time */
2728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Wait loop initialization and execution */
2729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Note: Variable divided by 2 to compensate partially              */
2730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       CPU processing cycles, scaling in us split to not          */
2731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /*       exceed 32 bits register capacity and handle low frequency. */
2732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US / 10UL) 
2733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
2734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
2735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         wait_loop_index--;
2737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
2741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
2742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
2743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Wait for ADC effectively enabled */
2745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       tickstart = HAL_GetTick();
2746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
2750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the
2751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             calibration logic.
2752:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
2753:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
2754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             4 ADC clock cycle duration */
2755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
2756:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
2757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
2760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
2763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 151


2764:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
2767:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             /* Update ADC state machine to error */
2768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2769:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             return HAL_ERROR;
2774:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
2775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2776:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2777:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2779:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2780:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return HAL status */
2781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
2782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2784:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2785:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  Disable the selected ADC.
2786:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2787:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   *         stopped.
2788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hadc ADC handle
2789:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval HAL status.
2790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2791:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
2792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
2794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
2795:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
2797:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
2798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /*       disabled.                                                          */
2799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
2801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
2802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
2804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
2805:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2806:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Disable the ADC peripheral */
2807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
2808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
2809:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2811:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Update ADC state machine to error */
2813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2814:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2815:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2817:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       return HAL_ERROR;
2819:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2820:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 152


2821:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2822:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Get tick count */
2823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tickstart = HAL_GetTick();
2824:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2826:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2828:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2829:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
2830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2831:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Update ADC state machine to error */
2833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2834:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2835:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2837:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           return HAL_ERROR;
2839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2840:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2841:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2843:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Return HAL status */
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   return HAL_OK;
2846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2848:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2849:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DMA transfer complete callback.
2850:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2851:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
2855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
2857:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
2860:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2861:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Set ADC state */
2862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2863:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2864:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2866:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* to disable interruption.                                               */
2867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
2869:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
2870:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2871:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2873:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
2874:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
2876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2877:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 153


2878:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
2879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2880:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
2881:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
2882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC state */
2885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
2886:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_READY);
2888:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2889:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         else
2890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
2891:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Change ADC state to error state */
2892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2893:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2894:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
2897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
2898:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2899:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2900:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     /* Conversion complete callback */
2901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2902:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2903:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2906:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2907:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2908:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
2909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2910:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2912:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2913:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2916:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2917:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2918:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     else
2919:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
2920:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       /* Call ADC DMA error callback */
2921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2922:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
2923:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
2924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
2925:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2926:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2927:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
2928:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2929:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2930:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2931:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
2932:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1156              		.loc 1 2932 1 is_stmt 1 view -0
 1157              		.cfi_startproc
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 154


 1158              		@ args = 0, pretend = 0, frame = 0
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160              		.loc 1 2932 1 is_stmt 0 view .LVU360
 1161 0000 08B5     		push	{r3, lr}
 1162              		.cfi_def_cfa_offset 8
 1163              		.cfi_offset 3, -8
 1164              		.cfi_offset 14, -4
2933:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2934:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1165              		.loc 1 2934 3 is_stmt 1 view .LVU361
 1166              	.LVL82:
2935:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2936:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Half conversion callback */
2937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2938:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2939:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2940:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1167              		.loc 1 2940 3 view .LVU362
 1168 0002 806A     		ldr	r0, [r0, #40]
 1169              	.LVL83:
 1170              		.loc 1 2940 3 is_stmt 0 view .LVU363
 1171 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1172              	.LVL84:
2941:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2942:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1173              		.loc 1 2942 1 view .LVU364
 1174 0008 08BD     		pop	{r3, pc}
 1175              		.cfi_endproc
 1176              	.LFE877:
 1178              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1179              		.align	1
 1180              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1181              		.syntax unified
 1182              		.thumb
 1183              		.thumb_func
 1185              	HAL_ADC_LevelOutOfWindowCallback:
 1186              	.LVL85:
 1187              	.LFB867:
2092:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1188              		.loc 1 2092 1 is_stmt 1 view -0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192              		@ link register save eliminated.
2094:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1193              		.loc 1 2094 3 view .LVU366
2099:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1194              		.loc 1 2099 1 is_stmt 0 view .LVU367
 1195 0000 7047     		bx	lr
 1196              		.cfi_endproc
 1197              	.LFE867:
 1199              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1200              		.align	1
 1201              		.weak	HAL_ADC_ErrorCallback
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 155


 1206              	HAL_ADC_ErrorCallback:
 1207              	.LVL86:
 1208              	.LFB868:
2114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 1209              		.loc 1 2114 1 is_stmt 1 view -0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
 1213              		@ link register save eliminated.
2116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1214              		.loc 1 2116 3 view .LVU369
2121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1215              		.loc 1 2121 1 is_stmt 0 view .LVU370
 1216 0000 7047     		bx	lr
 1217              		.cfi_endproc
 1218              	.LFE868:
 1220              		.section	.text.ADC_DMAError,"ax",%progbits
 1221              		.align	1
 1222              		.syntax unified
 1223              		.thumb
 1224              		.thumb_func
 1226              	ADC_DMAError:
 1227              	.LVL87:
 1228              	.LFB878:
2943:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2944:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** /**
2945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @brief  DMA error callback.
2946:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2947:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   * @retval None
2948:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   */
2949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)
2950:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** {
 1229              		.loc 1 2950 1 is_stmt 1 view -0
 1230              		.cfi_startproc
 1231              		@ args = 0, pretend = 0, frame = 0
 1232              		@ frame_needed = 0, uses_anonymous_args = 0
 1233              		.loc 1 2950 1 is_stmt 0 view .LVU372
 1234 0000 08B5     		push	{r3, lr}
 1235              		.cfi_def_cfa_offset 8
 1236              		.cfi_offset 3, -8
 1237              		.cfi_offset 14, -4
2951:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1238              		.loc 1 2952 3 is_stmt 1 view .LVU373
 1239              		.loc 1 2952 22 is_stmt 0 view .LVU374
 1240 0002 806A     		ldr	r0, [r0, #40]
 1241              	.LVL88:
2953:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2954:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC state */
2955:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1242              		.loc 1 2955 3 is_stmt 1 view .LVU375
 1243 0004 836D     		ldr	r3, [r0, #88]
 1244 0006 43F04003 		orr	r3, r3, #64
 1245 000a 8365     		str	r3, [r0, #88]
2956:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2957:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Set ADC error code to DMA error */
2958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 156


 1246              		.loc 1 2958 3 view .LVU376
 1247 000c C36D     		ldr	r3, [r0, #92]
 1248 000e 43F00403 		orr	r3, r3, #4
 1249 0012 C365     		str	r3, [r0, #92]
2959:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
2960:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Error callback */
2961:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2963:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #else
2964:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1250              		.loc 1 2964 3 view .LVU377
 1251 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1252              	.LVL89:
2965:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1253              		.loc 1 2966 1 is_stmt 0 view .LVU378
 1254 0018 08BD     		pop	{r3, pc}
 1255              		.cfi_endproc
 1256              	.LFE878:
 1258              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1259              		.align	1
 1260              		.syntax unified
 1261              		.thumb
 1262              		.thumb_func
 1264              	ADC_DMAConvCplt:
 1265              	.LVL90:
 1266              	.LFB876:
2854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1267              		.loc 1 2854 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
2854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1271              		.loc 1 2854 1 is_stmt 0 view .LVU380
 1272 0000 08B5     		push	{r3, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 3, -8
 1275              		.cfi_offset 14, -4
 1276 0002 0346     		mov	r3, r0
2856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1277              		.loc 1 2856 3 is_stmt 1 view .LVU381
2856:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1278              		.loc 1 2856 22 is_stmt 0 view .LVU382
 1279 0004 806A     		ldr	r0, [r0, #40]
 1280              	.LVL91:
2859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1281              		.loc 1 2859 3 is_stmt 1 view .LVU383
2859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1282              		.loc 1 2859 12 is_stmt 0 view .LVU384
 1283 0006 826D     		ldr	r2, [r0, #88]
2859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1284              		.loc 1 2859 6 view .LVU385
 1285 0008 12F0500F 		tst	r2, #80
 1286 000c 2AD1     		bne	.L79
2862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1287              		.loc 1 2862 5 is_stmt 1 view .LVU386
 1288 000e 836D     		ldr	r3, [r0, #88]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 157


 1289              	.LVL92:
2862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1290              		.loc 1 2862 5 is_stmt 0 view .LVU387
 1291 0010 43F40073 		orr	r3, r3, #512
 1292 0014 8365     		str	r3, [r0, #88]
2867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1293              		.loc 1 2867 5 is_stmt 1 view .LVU388
2867:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1294              		.loc 1 2867 10 is_stmt 0 view .LVU389
 1295 0016 0368     		ldr	r3, [r0]
 1296              	.LVL93:
 1297              	.LBB170:
 1298              	.LBI170:
2395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1299              		.loc 2 2395 26 is_stmt 1 view .LVU390
 1300              	.LBB171:
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1301              		.loc 2 2397 3 view .LVU391
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1302              		.loc 2 2397 12 is_stmt 0 view .LVU392
 1303 0018 DA68     		ldr	r2, [r3, #12]
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1304              		.loc 2 2397 106 view .LVU393
 1305 001a 12F4406F 		tst	r2, #3072
 1306 001e 15D1     		bne	.L80
 1307              	.LVL94:
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1308              		.loc 2 2397 106 view .LVU394
 1309              	.LBE171:
 1310              	.LBE170:
2868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1311              		.loc 1 2868 23 view .LVU395
 1312 0020 827E     		ldrb	r2, [r0, #26]	@ zero_extendqisi2
2868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1313              		.loc 1 2868 9 view .LVU396
 1314 0022 9AB9     		cbnz	r2, .L80
2872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1315              		.loc 1 2872 7 is_stmt 1 view .LVU397
2872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1316              		.loc 1 2872 11 is_stmt 0 view .LVU398
 1317 0024 1A68     		ldr	r2, [r3]
2872:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1318              		.loc 1 2872 10 view .LVU399
 1319 0026 12F0080F 		tst	r2, #8
 1320 002a 0FD0     		beq	.L80
2876:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1321              		.loc 1 2876 9 is_stmt 1 view .LVU400
 1322              	.LVL95:
 1323              	.LBB172:
 1324              	.LBI172:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1325              		.loc 2 4435 26 view .LVU401
 1326              	.LBB173:
 1327              		.loc 2 4437 3 view .LVU402
 1328              		.loc 2 4437 12 is_stmt 0 view .LVU403
 1329 002c 9A68     		ldr	r2, [r3, #8]
 1330              		.loc 2 4437 74 view .LVU404
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 158


 1331 002e 12F0040F 		tst	r2, #4
 1332 0032 0ED1     		bne	.L81
 1333              	.LVL96:
 1334              		.loc 2 4437 74 view .LVU405
 1335              	.LBE173:
 1336              	.LBE172:
2882:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1337              		.loc 1 2882 11 is_stmt 1 view .LVU406
 1338 0034 5A68     		ldr	r2, [r3, #4]
 1339 0036 22F00C02 		bic	r2, r2, #12
 1340 003a 5A60     		str	r2, [r3, #4]
2885:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1341              		.loc 1 2885 11 view .LVU407
 1342 003c 836D     		ldr	r3, [r0, #88]
 1343 003e 23F48073 		bic	r3, r3, #256
 1344 0042 23F00103 		bic	r3, r3, #1
 1345 0046 43F00103 		orr	r3, r3, #1
 1346 004a 8365     		str	r3, [r0, #88]
 1347              	.L80:
2904:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1348              		.loc 1 2904 5 view .LVU408
 1349 004c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1350              	.LVL97:
 1351              	.L78:
2924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1352              		.loc 1 2924 1 is_stmt 0 view .LVU409
 1353 0050 08BD     		pop	{r3, pc}
 1354              	.LVL98:
 1355              	.L81:
2892:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1356              		.loc 1 2892 11 is_stmt 1 view .LVU410
 1357 0052 836D     		ldr	r3, [r0, #88]
 1358 0054 43F02003 		orr	r3, r3, #32
 1359 0058 8365     		str	r3, [r0, #88]
2895:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 1360              		.loc 1 2895 11 view .LVU411
 1361 005a C36D     		ldr	r3, [r0, #92]
 1362 005c 43F00103 		orr	r3, r3, #1
 1363 0060 C365     		str	r3, [r0, #92]
 1364 0062 F3E7     		b	.L80
 1365              	.LVL99:
 1366              	.L79:
2909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1367              		.loc 1 2909 5 view .LVU412
2909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1368              		.loc 1 2909 14 is_stmt 0 view .LVU413
 1369 0064 826D     		ldr	r2, [r0, #88]
2909:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1370              		.loc 1 2909 8 view .LVU414
 1371 0066 12F0100F 		tst	r2, #16
 1372 006a 04D1     		bne	.L85
2921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1373              		.loc 1 2921 7 is_stmt 1 view .LVU415
2921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1374              		.loc 1 2921 11 is_stmt 0 view .LVU416
 1375 006c 026D     		ldr	r2, [r0, #80]
2921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 159


 1376              		.loc 1 2921 23 view .LVU417
 1377 006e 526B     		ldr	r2, [r2, #52]
2921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1378              		.loc 1 2921 7 view .LVU418
 1379 0070 1846     		mov	r0, r3
 1380              	.LVL100:
2921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1381              		.loc 1 2921 7 view .LVU419
 1382 0072 9047     		blx	r2
 1383              	.LVL101:
2924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1384              		.loc 1 2924 1 view .LVU420
 1385 0074 ECE7     		b	.L78
 1386              	.LVL102:
 1387              	.L85:
2915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1388              		.loc 1 2915 7 is_stmt 1 view .LVU421
 1389 0076 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1390              	.LVL103:
2915:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1391              		.loc 1 2915 7 is_stmt 0 view .LVU422
 1392 007a E9E7     		b	.L78
 1393              		.cfi_endproc
 1394              	.LFE876:
 1396              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1397              		.align	1
 1398              		.global	HAL_ADC_IRQHandler
 1399              		.syntax unified
 1400              		.thumb
 1401              		.thumb_func
 1403              	HAL_ADC_IRQHandler:
 1404              	.LVL104:
 1405              	.LFB864:
1852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1406              		.loc 1 1852 1 is_stmt 1 view -0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 0
 1409              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1410              		.loc 1 1852 1 is_stmt 0 view .LVU424
 1411 0000 70B5     		push	{r4, r5, r6, lr}
 1412              		.cfi_def_cfa_offset 16
 1413              		.cfi_offset 4, -16
 1414              		.cfi_offset 5, -12
 1415              		.cfi_offset 6, -8
 1416              		.cfi_offset 14, -4
 1417 0002 0446     		mov	r4, r0
1853:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1418              		.loc 1 1853 3 is_stmt 1 view .LVU425
 1419              	.LVL105:
1854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1420              		.loc 1 1854 3 view .LVU426
1854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1421              		.loc 1 1854 26 is_stmt 0 view .LVU427
 1422 0004 0368     		ldr	r3, [r0]
1854:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1423              		.loc 1 1854 12 view .LVU428
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 160


 1424 0006 1E68     		ldr	r6, [r3]
 1425              	.LVL106:
1855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1426              		.loc 1 1855 3 is_stmt 1 view .LVU429
1855:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1427              		.loc 1 1855 12 is_stmt 0 view .LVU430
 1428 0008 5D68     		ldr	r5, [r3, #4]
 1429              	.LVL107:
1858:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1430              		.loc 1 1858 3 is_stmt 1 view .LVU431
1859:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1431              		.loc 1 1859 3 view .LVU432
1862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1432              		.loc 1 1862 3 view .LVU433
1862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1433              		.loc 1 1862 6 is_stmt 0 view .LVU434
 1434 000a 16F0020F 		tst	r6, #2
 1435 000e 10D0     		beq	.L87
1862:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1436              		.loc 1 1862 54 discriminator 1 view .LVU435
 1437 0010 15F0020F 		tst	r5, #2
 1438 0014 0DD0     		beq	.L87
1865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1439              		.loc 1 1865 5 is_stmt 1 view .LVU436
1865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1440              		.loc 1 1865 14 is_stmt 0 view .LVU437
 1441 0016 836D     		ldr	r3, [r0, #88]
1865:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1442              		.loc 1 1865 8 view .LVU438
 1443 0018 13F0100F 		tst	r3, #16
 1444 001c 03D1     		bne	.L88
1868:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1445              		.loc 1 1868 7 is_stmt 1 view .LVU439
 1446 001e 836D     		ldr	r3, [r0, #88]
 1447 0020 43F40063 		orr	r3, r3, #2048
 1448 0024 8365     		str	r3, [r0, #88]
 1449              	.L88:
1875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1450              		.loc 1 1875 5 view .LVU440
 1451 0026 2046     		mov	r0, r4
 1452              	.LVL108:
1875:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1453              		.loc 1 1875 5 is_stmt 0 view .LVU441
 1454 0028 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1455              	.LVL109:
1879:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1456              		.loc 1 1879 5 is_stmt 1 view .LVU442
 1457 002c 2368     		ldr	r3, [r4]
 1458 002e 0222     		movs	r2, #2
 1459 0030 1A60     		str	r2, [r3]
 1460              	.L87:
1883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1461              		.loc 1 1883 3 view .LVU443
1883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1462              		.loc 1 1883 6 is_stmt 0 view .LVU444
 1463 0032 16F0040F 		tst	r6, #4
 1464 0036 02D0     		beq	.L89
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 161


1883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1465              		.loc 1 1883 51 discriminator 1 view .LVU445
 1466 0038 15F0040F 		tst	r5, #4
 1467 003c 05D1     		bne	.L90
 1468              	.L89:
1883:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 1469              		.loc 1 1883 94 discriminator 3 view .LVU446
 1470 003e 16F0080F 		tst	r6, #8
 1471 0042 2BD0     		beq	.L91
1884:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1472              		.loc 1 1884 51 view .LVU447
 1473 0044 15F0080F 		tst	r5, #8
 1474 0048 28D0     		beq	.L91
 1475              	.L90:
1887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1476              		.loc 1 1887 5 is_stmt 1 view .LVU448
1887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1477              		.loc 1 1887 14 is_stmt 0 view .LVU449
 1478 004a A36D     		ldr	r3, [r4, #88]
1887:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1479              		.loc 1 1887 8 view .LVU450
 1480 004c 13F0100F 		tst	r3, #16
 1481 0050 03D1     		bne	.L92
1890:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 1482              		.loc 1 1890 7 is_stmt 1 view .LVU451
 1483 0052 A36D     		ldr	r3, [r4, #88]
 1484 0054 43F40073 		orr	r3, r3, #512
 1485 0058 A365     		str	r3, [r4, #88]
 1486              	.L92:
1896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1487              		.loc 1 1896 5 view .LVU452
1896:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == DISABLE)
 1488              		.loc 1 1896 10 is_stmt 0 view .LVU453
 1489 005a 2368     		ldr	r3, [r4]
 1490              	.LVL110:
 1491              	.LBB174:
 1492              	.LBI174:
2395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1493              		.loc 2 2395 26 is_stmt 1 view .LVU454
 1494              	.LBB175:
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1495              		.loc 2 2397 3 view .LVU455
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1496              		.loc 2 2397 12 is_stmt 0 view .LVU456
 1497 005c DA68     		ldr	r2, [r3, #12]
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1498              		.loc 2 2397 106 view .LVU457
 1499 005e 12F4406F 		tst	r2, #3072
 1500 0062 15D1     		bne	.L93
 1501              	.LVL111:
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1502              		.loc 2 2397 106 view .LVU458
 1503              	.LBE175:
 1504              	.LBE174:
1897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1505              		.loc 1 1897 23 view .LVU459
 1506 0064 A27E     		ldrb	r2, [r4, #26]	@ zero_extendqisi2
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 162


1897:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****        )
 1507              		.loc 1 1897 9 view .LVU460
 1508 0066 9AB9     		cbnz	r2, .L93
1901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1509              		.loc 1 1901 7 is_stmt 1 view .LVU461
1901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1510              		.loc 1 1901 11 is_stmt 0 view .LVU462
 1511 0068 1A68     		ldr	r2, [r3]
1901:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1512              		.loc 1 1901 10 view .LVU463
 1513 006a 12F0080F 		tst	r2, #8
 1514 006e 0FD0     		beq	.L93
1905:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1515              		.loc 1 1905 9 is_stmt 1 view .LVU464
 1516              	.LVL112:
 1517              	.LBB176:
 1518              	.LBI176:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1519              		.loc 2 4435 26 view .LVU465
 1520              	.LBB177:
 1521              		.loc 2 4437 3 view .LVU466
 1522              		.loc 2 4437 12 is_stmt 0 view .LVU467
 1523 0070 9A68     		ldr	r2, [r3, #8]
 1524              		.loc 2 4437 74 view .LVU468
 1525 0072 12F0040F 		tst	r2, #4
 1526 0076 45D1     		bne	.L94
 1527              	.LVL113:
 1528              		.loc 2 4437 74 view .LVU469
 1529              	.LBE177:
 1530              	.LBE176:
1911:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1531              		.loc 1 1911 11 is_stmt 1 view .LVU470
 1532 0078 5A68     		ldr	r2, [r3, #4]
 1533 007a 22F00C02 		bic	r2, r2, #12
 1534 007e 5A60     		str	r2, [r3, #4]
1914:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1535              		.loc 1 1914 11 view .LVU471
 1536 0080 A36D     		ldr	r3, [r4, #88]
 1537 0082 23F48073 		bic	r3, r3, #256
 1538 0086 23F00103 		bic	r3, r3, #1
 1539 008a 43F00103 		orr	r3, r3, #1
 1540 008e A365     		str	r3, [r4, #88]
 1541              	.L93:
1937:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1542              		.loc 1 1937 5 view .LVU472
 1543 0090 2046     		mov	r0, r4
 1544 0092 FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1545              	.LVL114:
1945:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1546              		.loc 1 1945 5 view .LVU473
 1547 0096 2368     		ldr	r3, [r4]
 1548 0098 0C22     		movs	r2, #12
 1549 009a 1A60     		str	r2, [r3]
 1550              	.L91:
1949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1551              		.loc 1 1949 3 view .LVU474
1949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 163


 1552              		.loc 1 1949 6 is_stmt 0 view .LVU475
 1553 009c 16F0800F 		tst	r6, #128
 1554 00a0 02D0     		beq	.L95
1949:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1555              		.loc 1 1949 52 discriminator 1 view .LVU476
 1556 00a2 15F0800F 		tst	r5, #128
 1557 00a6 36D1     		bne	.L103
 1558              	.L95:
1966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1559              		.loc 1 1966 3 is_stmt 1 view .LVU477
1966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1560              		.loc 1 1966 6 is_stmt 0 view .LVU478
 1561 00a8 16F4807F 		tst	r6, #256
 1562 00ac 02D0     		beq	.L96
1966:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1563              		.loc 1 1966 52 discriminator 1 view .LVU479
 1564 00ae 15F4807F 		tst	r5, #256
 1565 00b2 3BD1     		bne	.L104
 1566              	.L96:
1983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1567              		.loc 1 1983 3 is_stmt 1 view .LVU480
1983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1568              		.loc 1 1983 6 is_stmt 0 view .LVU481
 1569 00b4 16F4007F 		tst	r6, #512
 1570 00b8 02D0     		beq	.L97
1983:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1571              		.loc 1 1983 52 discriminator 1 view .LVU482
 1572 00ba 15F4007F 		tst	r5, #512
 1573 00be 41D1     		bne	.L105
 1574              	.L97:
2000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1575              		.loc 1 2000 3 is_stmt 1 view .LVU483
2000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1576              		.loc 1 2000 6 is_stmt 0 view .LVU484
 1577 00c0 16F0100F 		tst	r6, #16
 1578 00c4 17D0     		beq	.L98
2000:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1579              		.loc 1 2000 50 discriminator 1 view .LVU485
 1580 00c6 15F0100F 		tst	r5, #16
 1581 00ca 14D0     		beq	.L98
2008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1582              		.loc 1 2008 5 is_stmt 1 view .LVU486
2008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1583              		.loc 1 2008 19 is_stmt 0 view .LVU487
 1584 00cc 236B     		ldr	r3, [r4, #48]
2008:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1585              		.loc 1 2008 8 view .LVU488
 1586 00ce 23B1     		cbz	r3, .L99
2015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1587              		.loc 1 2015 7 is_stmt 1 view .LVU489
2015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1588              		.loc 1 2015 11 is_stmt 0 view .LVU490
 1589 00d0 2368     		ldr	r3, [r4]
 1590              	.LVL115:
 1591              	.LBB178:
 1592              	.LBI178:
3376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 164


 1593              		.loc 2 3376 26 is_stmt 1 view .LVU491
 1594              	.LBB179:
3378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1595              		.loc 2 3378 3 view .LVU492
3378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1596              		.loc 2 3378 21 is_stmt 0 view .LVU493
 1597 00d2 DB68     		ldr	r3, [r3, #12]
 1598              	.LVL116:
3378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1599              		.loc 2 3378 21 view .LVU494
 1600              	.LBE179:
 1601              	.LBE178:
2015:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1602              		.loc 1 2015 10 view .LVU495
 1603 00d4 13F0030F 		tst	r3, #3
 1604 00d8 0AD0     		beq	.L100
 1605              	.L99:
 1606              	.LVL117:
2024:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1607              		.loc 1 2024 7 is_stmt 1 view .LVU496
 1608 00da A36D     		ldr	r3, [r4, #88]
 1609 00dc 43F48063 		orr	r3, r3, #1024
 1610 00e0 A365     		str	r3, [r4, #88]
2027:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1611              		.loc 1 2027 7 view .LVU497
 1612 00e2 E36D     		ldr	r3, [r4, #92]
 1613 00e4 43F00203 		orr	r3, r3, #2
 1614 00e8 E365     		str	r3, [r4, #92]
2037:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1615              		.loc 1 2037 7 view .LVU498
 1616 00ea 2046     		mov	r0, r4
 1617 00ec FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1618              	.LVL118:
 1619              	.L100:
2042:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1620              		.loc 1 2042 5 view .LVU499
 1621 00f0 2368     		ldr	r3, [r4]
 1622 00f2 1022     		movs	r2, #16
 1623 00f4 1A60     		str	r2, [r3]
 1624              	.L98:
2046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1625              		.loc 1 2046 3 view .LVU500
2046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1626              		.loc 1 2046 6 is_stmt 0 view .LVU501
 1627 00f6 16F4005F 		tst	r6, #8192
 1628 00fa 02D0     		beq	.L86
2046:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1629              		.loc 1 2046 54 discriminator 1 view .LVU502
 1630 00fc 15F4005F 		tst	r5, #8192
 1631 0100 2CD1     		bne	.L106
 1632              	.L86:
2054:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1633              		.loc 1 2054 1 view .LVU503
 1634 0102 70BD     		pop	{r4, r5, r6, pc}
 1635              	.LVL119:
 1636              	.L94:
1921:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 165


 1637              		.loc 1 1921 11 is_stmt 1 view .LVU504
 1638 0104 A36D     		ldr	r3, [r4, #88]
 1639 0106 43F02003 		orr	r3, r3, #32
 1640 010a A365     		str	r3, [r4, #88]
1924:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 1641              		.loc 1 1924 11 view .LVU505
 1642 010c E36D     		ldr	r3, [r4, #92]
 1643 010e 43F00103 		orr	r3, r3, #1
 1644 0112 E365     		str	r3, [r4, #92]
 1645 0114 BCE7     		b	.L93
 1646              	.L103:
1952:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1647              		.loc 1 1952 5 view .LVU506
 1648 0116 A36D     		ldr	r3, [r4, #88]
 1649 0118 43F48033 		orr	r3, r3, #65536
 1650 011c A365     		str	r3, [r4, #88]
1958:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1651              		.loc 1 1958 5 view .LVU507
 1652 011e 2046     		mov	r0, r4
 1653 0120 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1654              	.LVL120:
1962:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1655              		.loc 1 1962 5 view .LVU508
 1656 0124 2368     		ldr	r3, [r4]
 1657 0126 8022     		movs	r2, #128
 1658 0128 1A60     		str	r2, [r3]
 1659 012a BDE7     		b	.L95
 1660              	.L104:
1969:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1661              		.loc 1 1969 5 view .LVU509
 1662 012c A36D     		ldr	r3, [r4, #88]
 1663 012e 43F40033 		orr	r3, r3, #131072
 1664 0132 A365     		str	r3, [r4, #88]
1975:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1665              		.loc 1 1975 5 view .LVU510
 1666 0134 2046     		mov	r0, r4
 1667 0136 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1668              	.LVL121:
1979:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1669              		.loc 1 1979 5 view .LVU511
 1670 013a 2368     		ldr	r3, [r4]
 1671 013c 4FF48072 		mov	r2, #256
 1672 0140 1A60     		str	r2, [r3]
 1673 0142 B7E7     		b	.L96
 1674              	.L105:
1986:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1675              		.loc 1 1986 5 view .LVU512
 1676 0144 A36D     		ldr	r3, [r4, #88]
 1677 0146 43F48023 		orr	r3, r3, #262144
 1678 014a A365     		str	r3, [r4, #88]
1992:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1679              		.loc 1 1992 5 view .LVU513
 1680 014c 2046     		mov	r0, r4
 1681 014e FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1682              	.LVL122:
1996:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1683              		.loc 1 1996 5 view .LVU514
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 166


 1684 0152 2368     		ldr	r3, [r4]
 1685 0154 4FF40072 		mov	r2, #512
 1686 0158 1A60     		str	r2, [r3]
 1687 015a B1E7     		b	.L97
 1688              	.LVL123:
 1689              	.L106:
2049:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1690              		.loc 1 2049 5 view .LVU515
 1691 015c 2046     		mov	r0, r4
 1692 015e FFF7FEFF 		bl	HAL_ADCEx_ChannelConfigReadyCallback
 1693              	.LVL124:
2052:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1694              		.loc 1 2052 5 view .LVU516
 1695 0162 2368     		ldr	r3, [r4]
 1696 0164 4FF40052 		mov	r2, #8192
 1697 0168 1A60     		str	r2, [r3]
2054:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1698              		.loc 1 2054 1 is_stmt 0 view .LVU517
 1699 016a CAE7     		b	.L86
 1700              		.cfi_endproc
 1701              	.LFE864:
 1703              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1704              		.align	1
 1705              		.global	HAL_ADC_ConfigChannel
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1710              	HAL_ADC_ConfigChannel:
 1711              	.LVL125:
 1712              	.LFB869:
2160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1713              		.loc 1 2160 1 is_stmt 1 view -0
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 8
 1716              		@ frame_needed = 0, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
2160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1718              		.loc 1 2160 1 is_stmt 0 view .LVU519
 1719 0000 70B4     		push	{r4, r5, r6}
 1720              		.cfi_def_cfa_offset 12
 1721              		.cfi_offset 4, -12
 1722              		.cfi_offset 5, -8
 1723              		.cfi_offset 6, -4
 1724 0002 83B0     		sub	sp, sp, #12
 1725              		.cfi_def_cfa_offset 24
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1726              		.loc 1 2161 3 is_stmt 1 view .LVU520
 1727              	.LVL126:
2162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 1728              		.loc 1 2162 3 view .LVU521
2163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1729              		.loc 1 2163 3 view .LVU522
2163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1730              		.loc 1 2163 17 is_stmt 0 view .LVU523
 1731 0004 0022     		movs	r2, #0
 1732 0006 0192     		str	r2, [sp, #4]
2166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(pConfig->Channel));
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 167


 1733              		.loc 1 2166 3 is_stmt 1 view .LVU524
2167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(pConfig->SamplingTime));
 1734              		.loc 1 2167 3 view .LVU525
2168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1735              		.loc 1 2168 3 view .LVU526
2170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1736              		.loc 1 2170 3 view .LVU527
2170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1737              		.loc 1 2170 18 is_stmt 0 view .LVU528
 1738 0008 0469     		ldr	r4, [r0, #16]
2177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1739              		.loc 1 2177 5 is_stmt 1 view .LVU529
2179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1740              		.loc 1 2179 5 view .LVU530
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1741              		.loc 1 2182 3 view .LVU531
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1742              		.loc 1 2182 3 view .LVU532
 1743 000a 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 1744 000e 012A     		cmp	r2, #1
 1745 0010 00F00381 		beq	.L126
 1746 0014 0346     		mov	r3, r0
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1747              		.loc 1 2182 3 discriminator 2 view .LVU533
 1748 0016 0122     		movs	r2, #1
 1749 0018 80F85420 		strb	r2, [r0, #84]
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1750              		.loc 1 2182 3 discriminator 2 view .LVU534
2190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1751              		.loc 1 2190 3 discriminator 2 view .LVU535
2190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 1752              		.loc 1 2190 7 is_stmt 0 discriminator 2 view .LVU536
 1753 001c 0268     		ldr	r2, [r0]
 1754              	.LVL127:
 1755              	.LBB180:
 1756              	.LBI180:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1757              		.loc 2 4435 26 is_stmt 1 discriminator 2 view .LVU537
 1758              	.LBB181:
 1759              		.loc 2 4437 3 discriminator 2 view .LVU538
 1760              		.loc 2 4437 12 is_stmt 0 discriminator 2 view .LVU539
 1761 001e 9068     		ldr	r0, [r2, #8]
 1762              	.LVL128:
 1763              		.loc 2 4437 74 discriminator 2 view .LVU540
 1764 0020 10F0040F 		tst	r0, #4
 1765 0024 0AD0     		beq	.L109
 1766              	.LVL129:
 1767              		.loc 2 4437 74 discriminator 2 view .LVU541
 1768              	.LBE181:
 1769              	.LBE180:
2335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1770              		.loc 1 2335 5 is_stmt 1 view .LVU542
 1771 0026 9A6D     		ldr	r2, [r3, #88]
 1772 0028 42F02002 		orr	r2, r2, #32
 1773 002c 9A65     		str	r2, [r3, #88]
2337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1774              		.loc 1 2337 5 view .LVU543
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 168


 1775              	.LVL130:
2337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 1776              		.loc 1 2337 20 is_stmt 0 view .LVU544
 1777 002e 0120     		movs	r0, #1
 1778              	.LVL131:
 1779              	.L110:
2340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1780              		.loc 1 2340 3 is_stmt 1 view .LVU545
2340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1781              		.loc 1 2340 3 view .LVU546
 1782 0030 0022     		movs	r2, #0
 1783 0032 83F85420 		strb	r2, [r3, #84]
2340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1784              		.loc 1 2340 3 view .LVU547
2342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 1785              		.loc 1 2342 3 view .LVU548
 1786              	.LVL132:
 1787              	.L108:
2343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1788              		.loc 1 2343 1 is_stmt 0 view .LVU549
 1789 0036 03B0     		add	sp, sp, #12
 1790              		.cfi_remember_state
 1791              		.cfi_def_cfa_offset 12
 1792              		@ sp needed
 1793 0038 70BC     		pop	{r4, r5, r6}
 1794              		.cfi_restore 6
 1795              		.cfi_restore 5
 1796              		.cfi_restore 4
 1797              		.cfi_def_cfa_offset 0
 1798 003a 7047     		bx	lr
 1799              	.LVL133:
 1800              	.L109:
 1801              		.cfi_restore_state
2199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1802              		.loc 1 2199 5 is_stmt 1 view .LVU550
2199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1803              		.loc 1 2199 16 is_stmt 0 view .LVU551
 1804 003c 4868     		ldr	r0, [r1, #4]
2199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 1805              		.loc 1 2199 8 view .LVU552
 1806 003e 0228     		cmp	r0, #2
 1807 0040 00F09C80 		beq	.L111
2207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1808              		.loc 1 2207 7 is_stmt 1 view .LVU553
2207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1809              		.loc 1 2207 10 is_stmt 0 view .LVU554
 1810 0044 B4F1004F 		cmp	r4, #-2147483648
 1811 0048 27D0     		beq	.L112
2207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 1812              		.loc 1 2207 65 discriminator 1 view .LVU555
 1813 004a 754D     		ldr	r5, .L142
 1814 004c AC42     		cmp	r4, r5
 1815 004e 24D0     		beq	.L112
2220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1816              		.loc 1 2220 9 is_stmt 1 view .LVU556
 1817 0050 1C6E     		ldr	r4, [r3, #96]
 1818 0052 00F01F00 		and	r0, r0, #31
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 169


 1819 0056 0F25     		movs	r5, #15
 1820 0058 8540     		lsls	r5, r5, r0
 1821 005a 24EA0505 		bic	r5, r4, r5
 1822 005e 0C68     		ldr	r4, [r1]
 1823 0060 C4F31106 		ubfx	r6, r4, #0, #18
 1824 0064 002E     		cmp	r6, #0
 1825 0066 31D1     		bne	.L115
2220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1826              		.loc 1 2220 9 is_stmt 0 discriminator 1 view .LVU557
 1827 0068 C4F38464 		ubfx	r4, r4, #26, #5
 1828              	.L116:
2220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (pConfig->Rank & 0x1FUL),
 1829              		.loc 1 2220 9 discriminator 4 view .LVU558
 1830 006c 8440     		lsls	r4, r4, r0
 1831 006e 2C43     		orrs	r4, r4, r5
 1832 0070 1C66     		str	r4, [r3, #96]
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1833              		.loc 1 2228 9 is_stmt 1 discriminator 4 view .LVU559
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1834              		.loc 1 2228 22 is_stmt 0 discriminator 4 view .LVU560
 1835 0072 4C68     		ldr	r4, [r1, #4]
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1836              		.loc 1 2228 29 discriminator 4 view .LVU561
 1837 0074 A008     		lsrs	r0, r4, #2
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1838              		.loc 1 2228 37 discriminator 4 view .LVU562
 1839 0076 0130     		adds	r0, r0, #1
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1840              		.loc 1 2228 57 discriminator 4 view .LVU563
 1841 0078 DD69     		ldr	r5, [r3, #28]
2228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 1842              		.loc 1 2228 12 discriminator 4 view .LVU564
 1843 007a A842     		cmp	r0, r5
 1844 007c 13D8     		bhi	.L114
2230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 1845              		.loc 1 2230 11 is_stmt 1 view .LVU565
 1846 007e 0D68     		ldr	r5, [r1]
 1847              	.LVL134:
 1848              	.LBB182:
 1849              	.LBI182:
2806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1850              		.loc 2 2806 22 view .LVU566
 1851              	.LBB183:
2812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1852              		.loc 2 2812 3 view .LVU567
 1853 0080 906A     		ldr	r0, [r2, #40]
 1854 0082 04F01F04 		and	r4, r4, #31
 1855              	.LVL135:
2812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1856              		.loc 2 2812 3 is_stmt 0 view .LVU568
 1857 0086 0F26     		movs	r6, #15
 1858 0088 A640     		lsls	r6, r6, r4
 1859 008a 20EA0600 		bic	r0, r0, r6
 1860 008e C5F38365 		ubfx	r5, r5, #26, #4
 1861              	.LVL136:
2812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1862              		.loc 2 2812 3 view .LVU569
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 170


 1863 0092 A540     		lsls	r5, r5, r4
 1864 0094 2843     		orrs	r0, r0, r5
 1865 0096 9062     		str	r0, [r2, #40]
 1866              	.LVL137:
2816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 1867              		.loc 2 2816 1 view .LVU570
 1868 0098 05E0     		b	.L114
 1869              	.LVL138:
 1870              	.L112:
2816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 1871              		.loc 2 2816 1 view .LVU571
 1872              	.LBE183:
 1873              	.LBE182:
2212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 1874              		.loc 1 2212 9 is_stmt 1 view .LVU572
 1875 009a 0C68     		ldr	r4, [r1]
 1876              	.LVL139:
 1877              	.LBB184:
 1878              	.LBI184:
3073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1879              		.loc 2 3073 22 view .LVU573
 1880              	.LBB185:
3077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1881              		.loc 2 3077 3 view .LVU574
 1882 009c 906A     		ldr	r0, [r2, #40]
 1883 009e C4F31104 		ubfx	r4, r4, #0, #18
 1884              	.LVL140:
3077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1885              		.loc 2 3077 3 is_stmt 0 view .LVU575
 1886 00a2 2043     		orrs	r0, r0, r4
 1887 00a4 9062     		str	r0, [r2, #40]
 1888              	.LVL141:
 1889              	.L114:
3077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1890              		.loc 2 3077 3 view .LVU576
 1891              	.LBE185:
 1892              	.LBE184:
2235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1893              		.loc 1 2235 7 is_stmt 1 view .LVU577
 1894 00a6 1C68     		ldr	r4, [r3]
 1895 00a8 0D68     		ldr	r5, [r1]
 1896 00aa 8A68     		ldr	r2, [r1, #8]
 1897              	.LVL142:
 1898              	.LBB186:
 1899              	.LBI186:
3502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1900              		.loc 2 3502 22 view .LVU578
 1901              	.LBB187:
3506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1902              		.loc 2 3506 3 view .LVU579
 1903 00ac 6069     		ldr	r0, [r4, #20]
 1904 00ae 20EA0520 		bic	r0, r0, r5, lsl #8
 1905 00b2 02EA0522 		and	r2, r2, r5, lsl #8
 1906              	.LVL143:
3506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1907              		.loc 2 3506 3 is_stmt 0 view .LVU580
 1908 00b6 22F07C42 		bic	r2, r2, #-67108864
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 171


 1909 00ba 22F0FF02 		bic	r2, r2, #255
 1910 00be 0243     		orrs	r2, r2, r0
 1911 00c0 6261     		str	r2, [r4, #20]
 1912              	.LVL144:
3506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1913              		.loc 2 3506 3 view .LVU581
 1914              	.LBE187:
 1915              	.LBE186:
2243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1916              		.loc 1 2243 7 is_stmt 1 view .LVU582
2243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1917              		.loc 1 2243 11 is_stmt 0 view .LVU583
 1918 00c2 0A68     		ldr	r2, [r1]
2243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 1919              		.loc 1 2243 10 view .LVU584
 1920 00c4 002A     		cmp	r2, #0
 1921 00c6 09DB     		blt	.L134
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1922              		.loc 1 2161 21 view .LVU585
 1923 00c8 0020     		movs	r0, #0
 1924 00ca B1E7     		b	.L110
 1925              	.L115:
 1926              	.LVL145:
 1927              	.LBB188:
 1928              	.LBI188:
 1929              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 172


  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 173


  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 174


 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 175


 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 176


 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 177


 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 178


 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 179


 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 180


 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 181


 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 182


 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 183


 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 184


 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 185


 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 186


 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 187


 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 188


 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 189


1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1930              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU586
 1931              	.LBB189:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1932              		.loc 3 1050 3 discriminator 2 view .LVU587
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 190


1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1933              		.loc 3 1055 4 discriminator 2 view .LVU588
 1934              		.syntax unified
 1935              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1936 00cc 94FAA4F4 		rbit r4, r4
 1937              	@ 0 "" 2
 1938              	.LVL146:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1939              		.loc 3 1068 3 discriminator 2 view .LVU589
 1940              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU590
 1941              		.thumb
 1942              		.syntax unified
 1943              	.LBE189:
 1944              	.LBE188:
 1945              	.LBB190:
 1946              	.LBI190:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 1947              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU591
 1948              	.LBB191:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1949              		.loc 3 1089 3 discriminator 2 view .LVU592
 1950              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU593
 1951 00d0 14B1     		cbz	r4, .L127
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 191


1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1952              		.loc 3 1093 3 is_stmt 1 view .LVU594
 1953              		.loc 3 1093 10 is_stmt 0 view .LVU595
 1954 00d2 B4FA84F4 		clz	r4, r4
 1955              	.LVL147:
 1956              		.loc 3 1093 10 view .LVU596
 1957 00d6 C9E7     		b	.L116
 1958              	.LVL148:
 1959              	.L127:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1960              		.loc 3 1091 12 view .LVU597
 1961 00d8 2024     		movs	r4, #32
 1962              	.LVL149:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1963              		.loc 3 1091 12 view .LVU598
 1964 00da C7E7     		b	.L116
 1965              	.L134:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1966              		.loc 3 1091 12 view .LVU599
 1967              	.LBE191:
 1968              	.LBE190:
2245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 1969              		.loc 1 2245 9 is_stmt 1 view .LVU600
 1970              	.LVL150:
 1971              	.LBB192:
 1972              	.LBI192:
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 1973              		.loc 2 1890 26 view .LVU601
 1974              	.LBB193:
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1975              		.loc 2 1892 3 view .LVU602
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1976              		.loc 2 1892 21 is_stmt 0 view .LVU603
 1977 00dc 5149     		ldr	r1, .L142+4
 1978              	.LVL151:
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1979              		.loc 2 1892 21 view .LVU604
 1980 00de D1F80807 		ldr	r0, [r1, #1800]
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1981              		.loc 2 1892 10 view .LVU605
 1982 00e2 00F0E071 		and	r1, r0, #29360128
 1983              	.LVL152:
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 1984              		.loc 2 1892 10 view .LVU606
 1985              	.LBE193:
 1986              	.LBE192:
2249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 1987              		.loc 1 2249 9 is_stmt 1 view .LVU607
2249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 1988              		.loc 1 2249 12 is_stmt 0 view .LVU608
 1989 00e6 504C     		ldr	r4, .L142+8
 1990 00e8 A242     		cmp	r2, r4
 1991 00ea 07D0     		beq	.L135
 1992              	.L118:
2266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
 1993              		.loc 1 2266 14 is_stmt 1 view .LVU609
2266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 192


 1994              		.loc 1 2266 17 is_stmt 0 view .LVU610
 1995 00ec 4F4C     		ldr	r4, .L142+12
 1996 00ee A242     		cmp	r2, r4
 1997 00f0 26D0     		beq	.L136
 1998              	.L121:
2272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 1999              		.loc 1 2272 14 is_stmt 1 view .LVU611
2272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2000              		.loc 1 2272 17 is_stmt 0 view .LVU612
 2001 00f2 4F4C     		ldr	r4, .L142+16
 2002 00f4 A242     		cmp	r2, r4
 2003 00f6 32D0     		beq	.L137
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2004              		.loc 1 2161 21 view .LVU613
 2005 00f8 0020     		movs	r0, #0
 2006 00fa 99E7     		b	.L110
 2007              	.L135:
2249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****             ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
 2008              		.loc 1 2249 58 discriminator 1 view .LVU614
 2009 00fc 10F4000F 		tst	r0, #8388608
 2010 0100 F4D1     		bne	.L118
2252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_chan
 2011              		.loc 1 2252 11 is_stmt 1 view .LVU615
 2012 0102 41F40001 		orr	r1, r1, #8388608
 2013              	.LVL153:
 2014              	.LBB194:
 2015              	.LBI194:
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2016              		.loc 2 1796 22 view .LVU616
 2017              	.LBB195:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2018              		.loc 2 1798 3 view .LVU617
 2019 0106 4748     		ldr	r0, .L142+4
 2020              	.LVL154:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2021              		.loc 2 1798 3 is_stmt 0 view .LVU618
 2022 0108 D0F80827 		ldr	r2, [r0, #1800]
 2023 010c 22F0E072 		bic	r2, r2, #29360128
 2024 0110 1143     		orrs	r1, r1, r2
 2025              	.LVL155:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2026              		.loc 2 1798 3 view .LVU619
 2027 0112 C0F80817 		str	r1, [r0, #1800]
 2028              	.LVL156:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2029              		.loc 2 1798 3 view .LVU620
 2030              	.LBE195:
 2031              	.LBE194:
2260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2032              		.loc 1 2260 11 is_stmt 1 view .LVU621
2260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2033              		.loc 1 2260 91 is_stmt 0 view .LVU622
 2034 0116 474A     		ldr	r2, .L142+20
 2035 0118 1268     		ldr	r2, [r2]
 2036 011a 9209     		lsrs	r2, r2, #6
 2037 011c 4649     		ldr	r1, .L142+24
 2038 011e A1FB0212 		umull	r1, r2, r1, r2
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 193


 2039 0122 9209     		lsrs	r2, r2, #6
2260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2040              		.loc 1 2260 71 view .LVU623
 2041 0124 0132     		adds	r2, r2, #1
 2042 0126 02EB4202 		add	r2, r2, r2, lsl #1
 2043 012a 9200     		lsls	r2, r2, #2
2260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           while (wait_loop_index != 0UL)
 2044              		.loc 1 2260 27 view .LVU624
 2045 012c 0192     		str	r2, [sp, #4]
2261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2046              		.loc 1 2261 11 is_stmt 1 view .LVU625
2261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2047              		.loc 1 2261 17 is_stmt 0 view .LVU626
 2048 012e 02E0     		b	.L119
 2049              	.L120:
2263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2050              		.loc 1 2263 13 is_stmt 1 view .LVU627
2263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2051              		.loc 1 2263 28 is_stmt 0 view .LVU628
 2052 0130 019A     		ldr	r2, [sp, #4]
 2053 0132 013A     		subs	r2, r2, #1
 2054 0134 0192     		str	r2, [sp, #4]
 2055              	.L119:
2261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2056              		.loc 1 2261 34 is_stmt 1 view .LVU629
 2057 0136 019A     		ldr	r2, [sp, #4]
 2058 0138 002A     		cmp	r2, #0
 2059 013a F9D1     		bne	.L120
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2060              		.loc 1 2161 21 is_stmt 0 view .LVU630
 2061 013c 0020     		movs	r0, #0
 2062 013e 77E7     		b	.L110
 2063              	.LVL157:
 2064              	.L136:
2267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2065              		.loc 1 2267 18 view .LVU631
 2066 0140 10F0807F 		tst	r0, #16777216
 2067 0144 D5D1     		bne	.L121
2269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 2068              		.loc 1 2269 11 is_stmt 1 view .LVU632
 2069 0146 41F08071 		orr	r1, r1, #16777216
 2070              	.LVL158:
 2071              	.LBB196:
 2072              	.LBI196:
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2073              		.loc 2 1796 22 view .LVU633
 2074              	.LBB197:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2075              		.loc 2 1798 3 view .LVU634
 2076 014a 3648     		ldr	r0, .L142+4
 2077              	.LVL159:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2078              		.loc 2 1798 3 is_stmt 0 view .LVU635
 2079 014c D0F80827 		ldr	r2, [r0, #1800]
 2080 0150 22F0E072 		bic	r2, r2, #29360128
 2081 0154 1143     		orrs	r1, r1, r2
 2082              	.LVL160:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 194


1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2083              		.loc 2 1798 3 view .LVU636
 2084 0156 C0F80817 		str	r1, [r0, #1800]
 2085              	.LBE197:
 2086              	.LBE196:
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2087              		.loc 1 2161 21 view .LVU637
 2088 015a 0020     		movs	r0, #0
 2089              	.LBB199:
 2090              	.LBB198:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2091              		.loc 2 1799 1 view .LVU638
 2092 015c 68E7     		b	.L110
 2093              	.LVL161:
 2094              	.L137:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2095              		.loc 2 1799 1 view .LVU639
 2096              	.LBE198:
 2097              	.LBE199:
2272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                  ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
 2098              		.loc 1 2272 60 discriminator 1 view .LVU640
 2099 015e 10F4800F 		tst	r0, #4194304
 2100 0162 58D1     		bne	.L130
2275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel
 2101              		.loc 1 2275 11 is_stmt 1 view .LVU641
 2102 0164 41F48002 		orr	r2, r1, #4194304
 2103              	.LVL162:
 2104              	.LBB200:
 2105              	.LBI200:
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2106              		.loc 2 1796 22 view .LVU642
 2107              	.LBB201:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2108              		.loc 2 1798 3 view .LVU643
 2109 0168 2E48     		ldr	r0, .L142+4
 2110 016a D0F80817 		ldr	r1, [r0, #1800]
 2111              	.LVL163:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2112              		.loc 2 1798 3 is_stmt 0 view .LVU644
 2113 016e 21F0E071 		bic	r1, r1, #29360128
 2114 0172 0A43     		orrs	r2, r2, r1
 2115              	.LVL164:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2116              		.loc 2 1798 3 view .LVU645
 2117 0174 C0F80827 		str	r2, [r0, #1800]
 2118              	.LBE201:
 2119              	.LBE200:
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2120              		.loc 1 2161 21 view .LVU646
 2121 0178 0020     		movs	r0, #0
 2122              	.LBB203:
 2123              	.LBB202:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2124              		.loc 2 1799 1 view .LVU647
 2125 017a 59E7     		b	.L110
 2126              	.LVL165:
 2127              	.L111:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 195


1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2128              		.loc 2 1799 1 view .LVU648
 2129              	.LBE202:
 2130              	.LBE203:
2291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2131              		.loc 1 2291 7 is_stmt 1 view .LVU649
2291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2132              		.loc 1 2291 10 is_stmt 0 view .LVU650
 2133 017c B4F1004F 		cmp	r4, #-2147483648
 2134 0180 02D0     		beq	.L122
2291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD))
 2135              		.loc 1 2291 65 discriminator 1 view .LVU651
 2136 0182 2748     		ldr	r0, .L142
 2137 0184 8442     		cmp	r4, r0
 2138 0186 06D1     		bne	.L123
 2139              	.L122:
2296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2140              		.loc 1 2296 9 is_stmt 1 view .LVU652
 2141 0188 0C68     		ldr	r4, [r1]
 2142              	.LVL166:
 2143              	.LBB204:
 2144              	.LBI204:
3165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2145              		.loc 2 3165 22 view .LVU653
 2146              	.LBB205:
3169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2147              		.loc 2 3169 3 view .LVU654
 2148 018a 906A     		ldr	r0, [r2, #40]
 2149 018c C4F31104 		ubfx	r4, r4, #0, #18
 2150              	.LVL167:
3169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2151              		.loc 2 3169 3 is_stmt 0 view .LVU655
 2152 0190 20EA0400 		bic	r0, r0, r4
 2153 0194 9062     		str	r0, [r2, #40]
 2154              	.LVL168:
 2155              	.L123:
3169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2156              		.loc 2 3169 3 view .LVU656
 2157              	.LBE205:
 2158              	.LBE204:
2302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2159              		.loc 1 2302 7 is_stmt 1 view .LVU657
2302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2160              		.loc 1 2302 11 is_stmt 0 view .LVU658
 2161 0196 0A68     		ldr	r2, [r1]
2302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2162              		.loc 1 2302 10 view .LVU659
 2163 0198 002A     		cmp	r2, #0
 2164 019a 01DB     		blt	.L138
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2165              		.loc 1 2161 21 view .LVU660
 2166 019c 0020     		movs	r0, #0
 2167 019e 47E7     		b	.L110
 2168              	.L138:
2304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2169              		.loc 1 2304 9 is_stmt 1 view .LVU661
 2170              	.LVL169:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 196


 2171              	.LBB206:
 2172              	.LBI206:
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2173              		.loc 2 1890 26 view .LVU662
 2174              	.LBB207:
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2175              		.loc 2 1892 3 view .LVU663
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2176              		.loc 2 1892 21 is_stmt 0 view .LVU664
 2177 01a0 2049     		ldr	r1, .L142+4
 2178              	.LVL170:
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2179              		.loc 2 1892 21 view .LVU665
 2180 01a2 D1F80817 		ldr	r1, [r1, #1800]
 2181              	.LVL171:
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2182              		.loc 2 1892 21 view .LVU666
 2183              	.LBE207:
 2184              	.LBE206:
2306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2185              		.loc 1 2306 9 is_stmt 1 view .LVU667
2306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2186              		.loc 1 2306 12 is_stmt 0 view .LVU668
 2187 01a6 2048     		ldr	r0, .L142+8
 2188 01a8 8242     		cmp	r2, r0
 2189 01aa 07D0     		beq	.L139
2311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2190              		.loc 1 2311 14 is_stmt 1 view .LVU669
2311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2191              		.loc 1 2311 17 is_stmt 0 view .LVU670
 2192 01ac 1F48     		ldr	r0, .L142+12
 2193 01ae 8242     		cmp	r2, r0
 2194 01b0 13D0     		beq	.L140
2316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2195              		.loc 1 2316 14 is_stmt 1 view .LVU671
2316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2196              		.loc 1 2316 17 is_stmt 0 view .LVU672
 2197 01b2 1F48     		ldr	r0, .L142+16
 2198 01b4 8242     		cmp	r2, r0
 2199 01b6 1FD0     		beq	.L141
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2200              		.loc 1 2161 21 view .LVU673
 2201 01b8 0020     		movs	r0, #0
 2202 01ba 39E7     		b	.L110
 2203              	.L139:
2308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_TEMPSENSOR & tmp_config_internal_cha
 2204              		.loc 1 2308 11 is_stmt 1 view .LVU674
 2205 01bc 01F0A071 		and	r1, r1, #20971520
 2206              	.LVL172:
 2207              	.LBB208:
 2208              	.LBI208:
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2209              		.loc 2 1796 22 view .LVU675
 2210              	.LBB209:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2211              		.loc 2 1798 3 view .LVU676
 2212 01c0 00F11040 		add	r0, r0, #-1879048192
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 197


 2213 01c4 00F58830 		add	r0, r0, #69632
 2214 01c8 D0F80827 		ldr	r2, [r0, #1800]
 2215 01cc 22F0E072 		bic	r2, r2, #29360128
 2216 01d0 1143     		orrs	r1, r1, r2
 2217              	.LVL173:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2218              		.loc 2 1798 3 is_stmt 0 view .LVU677
 2219 01d2 C0F80817 		str	r1, [r0, #1800]
 2220              	.LBE209:
 2221              	.LBE208:
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2222              		.loc 1 2161 21 view .LVU678
 2223 01d6 0020     		movs	r0, #0
 2224              	.LBB211:
 2225              	.LBB210:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2226              		.loc 2 1799 1 view .LVU679
 2227 01d8 2AE7     		b	.L110
 2228              	.LVL174:
 2229              	.L140:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2230              		.loc 2 1799 1 view .LVU680
 2231              	.LBE210:
 2232              	.LBE211:
2313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VBAT & tmp_config_internal_channel);
 2233              		.loc 1 2313 11 is_stmt 1 view .LVU681
 2234 01da 01F44002 		and	r2, r1, #12582912
 2235              	.LVL175:
 2236              	.LBB212:
 2237              	.LBI212:
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2238              		.loc 2 1796 22 view .LVU682
 2239              	.LBB213:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2240              		.loc 2 1798 3 view .LVU683
 2241 01de 00F10840 		add	r0, r0, #-2013265920
 2242 01e2 00F56040 		add	r0, r0, #57344
 2243 01e6 D0F80817 		ldr	r1, [r0, #1800]
 2244              	.LVL176:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2245              		.loc 2 1798 3 is_stmt 0 view .LVU684
 2246 01ea 21F0E071 		bic	r1, r1, #29360128
 2247 01ee 0A43     		orrs	r2, r2, r1
 2248              	.LVL177:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2249              		.loc 2 1798 3 view .LVU685
 2250 01f0 C0F80827 		str	r2, [r0, #1800]
 2251              	.LBE213:
 2252              	.LBE212:
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2253              		.loc 1 2161 21 view .LVU686
 2254 01f4 0020     		movs	r0, #0
 2255              	.LBB215:
 2256              	.LBB214:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2257              		.loc 2 1799 1 view .LVU687
 2258 01f6 1BE7     		b	.L110
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 198


 2259              	.LVL178:
 2260              	.L141:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2261              		.loc 2 1799 1 view .LVU688
 2262              	.LBE214:
 2263              	.LBE215:
2318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                          ~LL_ADC_PATH_INTERNAL_VREFINT & tmp_config_internal_channe
 2264              		.loc 1 2318 11 is_stmt 1 view .LVU689
 2265 01f8 01F0C072 		and	r2, r1, #25165824
 2266              	.LVL179:
 2267              	.LBB216:
 2268              	.LBI216:
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2269              		.loc 2 1796 22 view .LVU690
 2270              	.LBB217:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2271              		.loc 2 1798 3 view .LVU691
 2272 01fc 00F10C40 		add	r0, r0, #-1946157056
 2273 0200 00F58030 		add	r0, r0, #65536
 2274 0204 D0F80817 		ldr	r1, [r0, #1800]
 2275              	.LVL180:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2276              		.loc 2 1798 3 is_stmt 0 view .LVU692
 2277 0208 21F0E071 		bic	r1, r1, #29360128
 2278 020c 0A43     		orrs	r2, r2, r1
 2279              	.LVL181:
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2280              		.loc 2 1798 3 view .LVU693
 2281 020e C0F80827 		str	r2, [r0, #1800]
 2282              	.LBE217:
 2283              	.LBE216:
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2284              		.loc 1 2161 21 view .LVU694
 2285 0212 0020     		movs	r0, #0
 2286              	.LBB219:
 2287              	.LBB218:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2288              		.loc 2 1799 1 view .LVU695
 2289 0214 0CE7     		b	.L110
 2290              	.LVL182:
 2291              	.L130:
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 2292              		.loc 2 1799 1 view .LVU696
 2293              	.LBE218:
 2294              	.LBE219:
2161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2295              		.loc 1 2161 21 view .LVU697
 2296 0216 0020     		movs	r0, #0
 2297 0218 0AE7     		b	.L110
 2298              	.LVL183:
 2299              	.L126:
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2300              		.loc 1 2182 3 view .LVU698
 2301 021a 0220     		movs	r0, #2
 2302              	.LVL184:
2182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2303              		.loc 1 2182 3 view .LVU699
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 199


 2304 021c 0BE7     		b	.L108
 2305              	.L143:
 2306 021e 00BF     		.align	2
 2307              	.L142:
 2308 0220 04000080 		.word	-2147483644
 2309 0224 00200140 		.word	1073815552
 2310 0228 001000B0 		.word	-1342173184
 2311 022c 004000B8 		.word	-1207943168
 2312 0230 002000B4 		.word	-1275060224
 2313 0234 00000000 		.word	SystemCoreClock
 2314 0238 632D3E05 		.word	87960931
 2315              		.cfi_endproc
 2316              	.LFE869:
 2318              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 2319              		.align	1
 2320              		.global	HAL_ADC_GetState
 2321              		.syntax unified
 2322              		.thumb
 2323              		.thumb_func
 2325              	HAL_ADC_GetState:
 2326              	.LVL185:
 2327              	.LFB871:
2604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 2328              		.loc 1 2604 1 is_stmt 1 view -0
 2329              		.cfi_startproc
 2330              		@ args = 0, pretend = 0, frame = 0
 2331              		@ frame_needed = 0, uses_anonymous_args = 0
 2332              		@ link register save eliminated.
2606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2333              		.loc 1 2606 3 view .LVU701
2609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2334              		.loc 1 2609 3 view .LVU702
2609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2335              		.loc 1 2609 14 is_stmt 0 view .LVU703
 2336 0000 806D     		ldr	r0, [r0, #88]
 2337              	.LVL186:
2610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2338              		.loc 1 2610 1 view .LVU704
 2339 0002 7047     		bx	lr
 2340              		.cfi_endproc
 2341              	.LFE871:
 2343              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 2344              		.align	1
 2345              		.global	HAL_ADC_GetError
 2346              		.syntax unified
 2347              		.thumb
 2348              		.thumb_func
 2350              	HAL_ADC_GetError:
 2351              	.LVL187:
 2352              	.LFB872:
2618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   /* Check the parameters */
 2353              		.loc 1 2618 1 is_stmt 1 view -0
 2354              		.cfi_startproc
 2355              		@ args = 0, pretend = 0, frame = 0
 2356              		@ frame_needed = 0, uses_anonymous_args = 0
 2357              		@ link register save eliminated.
2620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 200


 2358              		.loc 1 2620 3 view .LVU706
2622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2359              		.loc 1 2622 3 view .LVU707
2622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2360              		.loc 1 2622 14 is_stmt 0 view .LVU708
 2361 0000 C06D     		ldr	r0, [r0, #92]
 2362              	.LVL188:
2623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2363              		.loc 1 2623 1 view .LVU709
 2364 0002 7047     		bx	lr
 2365              		.cfi_endproc
 2366              	.LFE872:
 2368              		.section	.text.ADC_ConversionStop,"ax",%progbits
 2369              		.align	1
 2370              		.global	ADC_ConversionStop
 2371              		.syntax unified
 2372              		.thumb
 2373              		.thumb_func
 2375              	ADC_ConversionStop:
 2376              	.LVL189:
 2377              	.LFB873:
2645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 2378              		.loc 1 2645 1 is_stmt 1 view -0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 0
 2381              		@ frame_needed = 0, uses_anonymous_args = 0
2645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 2382              		.loc 1 2645 1 is_stmt 0 view .LVU711
 2383 0000 38B5     		push	{r3, r4, r5, lr}
 2384              		.cfi_def_cfa_offset 16
 2385              		.cfi_offset 3, -16
 2386              		.cfi_offset 4, -12
 2387              		.cfi_offset 5, -8
 2388              		.cfi_offset 14, -4
2646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2389              		.loc 1 2646 3 is_stmt 1 view .LVU712
2649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2390              		.loc 1 2649 3 view .LVU713
2653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2391              		.loc 1 2653 3 view .LVU714
2653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2392              		.loc 1 2653 7 is_stmt 0 view .LVU715
 2393 0002 0368     		ldr	r3, [r0]
 2394              	.LVL190:
 2395              	.LBB220:
 2396              	.LBI220:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2397              		.loc 2 4435 26 is_stmt 1 view .LVU716
 2398              	.LBB221:
 2399              		.loc 2 4437 3 view .LVU717
 2400              		.loc 2 4437 12 is_stmt 0 view .LVU718
 2401 0004 9A68     		ldr	r2, [r3, #8]
 2402              		.loc 2 4437 74 view .LVU719
 2403 0006 12F0040F 		tst	r2, #4
 2404 000a 2AD0     		beq	.L151
 2405 000c 0446     		mov	r4, r0
 2406              	.LVL191:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 201


 2407              		.loc 2 4437 74 view .LVU720
 2408              	.LBE221:
 2409              	.LBE220:
2657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2410              		.loc 1 2657 5 is_stmt 1 view .LVU721
 2411              	.LBB222:
 2412              	.LBI222:
4319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2413              		.loc 2 4319 26 view .LVU722
 2414              	.LBB223:
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2415              		.loc 2 4321 3 view .LVU723
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2416              		.loc 2 4321 12 is_stmt 0 view .LVU724
 2417 000e 9A68     		ldr	r2, [r3, #8]
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2418              		.loc 2 4321 70 view .LVU725
 2419 0010 12F0020F 		tst	r2, #2
 2420 0014 07D1     		bne	.L148
 2421              	.LVL192:
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2422              		.loc 2 4321 70 view .LVU726
 2423              	.LBE223:
 2424              	.LBE222:
2660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2425              		.loc 1 2660 7 is_stmt 1 view .LVU727
 2426              	.LBB224:
 2427              	.LBI224:
4419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2428              		.loc 2 4419 22 view .LVU728
 2429              	.LBB225:
4424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2430              		.loc 2 4424 3 view .LVU729
 2431 0016 9A68     		ldr	r2, [r3, #8]
 2432 0018 22F00042 		bic	r2, r2, #-2147483648
 2433 001c 22F01702 		bic	r2, r2, #23
 2434 0020 42F01002 		orr	r2, r2, #16
 2435 0024 9A60     		str	r2, [r3, #8]
 2436              	.LVL193:
 2437              	.L148:
4424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2438              		.loc 2 4424 3 is_stmt 0 view .LVU730
 2439              	.LBE225:
 2440              	.LBE224:
2665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2441              		.loc 1 2665 5 is_stmt 1 view .LVU731
2665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2442              		.loc 1 2665 17 is_stmt 0 view .LVU732
 2443 0026 FFF7FEFF 		bl	HAL_GetTick
 2444              	.LVL194:
2665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2445              		.loc 1 2665 17 view .LVU733
 2446 002a 0546     		mov	r5, r0
 2447              	.LVL195:
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2448              		.loc 1 2667 5 is_stmt 1 view .LVU734
 2449              	.L149:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 202


2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2450              		.loc 1 2667 50 view .LVU735
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2451              		.loc 1 2667 17 is_stmt 0 view .LVU736
 2452 002c 2368     		ldr	r3, [r4]
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2453              		.loc 1 2667 27 view .LVU737
 2454 002e 9B68     		ldr	r3, [r3, #8]
2667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2455              		.loc 1 2667 50 view .LVU738
 2456 0030 13F0040F 		tst	r3, #4
 2457 0034 13D0     		beq	.L153
2669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2458              		.loc 1 2669 7 is_stmt 1 view .LVU739
2669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2459              		.loc 1 2669 12 is_stmt 0 view .LVU740
 2460 0036 FFF7FEFF 		bl	HAL_GetTick
 2461              	.LVL196:
2669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2462              		.loc 1 2669 26 view .LVU741
 2463 003a 431B     		subs	r3, r0, r5
2669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2464              		.loc 1 2669 10 view .LVU742
 2465 003c 022B     		cmp	r3, #2
 2466 003e F5D9     		bls	.L149
2672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2467              		.loc 1 2672 9 is_stmt 1 view .LVU743
2672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2468              		.loc 1 2672 18 is_stmt 0 view .LVU744
 2469 0040 2368     		ldr	r3, [r4]
2672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2470              		.loc 1 2672 28 view .LVU745
 2471 0042 9B68     		ldr	r3, [r3, #8]
2672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2472              		.loc 1 2672 12 view .LVU746
 2473 0044 13F0040F 		tst	r3, #4
 2474 0048 F0D0     		beq	.L149
2675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2475              		.loc 1 2675 11 is_stmt 1 view .LVU747
 2476 004a A36D     		ldr	r3, [r4, #88]
 2477 004c 43F01003 		orr	r3, r3, #16
 2478 0050 A365     		str	r3, [r4, #88]
2678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2479              		.loc 1 2678 11 view .LVU748
 2480 0052 E36D     		ldr	r3, [r4, #92]
 2481 0054 43F00103 		orr	r3, r3, #1
 2482 0058 E365     		str	r3, [r4, #92]
2680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 2483              		.loc 1 2680 11 view .LVU749
2680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 2484              		.loc 1 2680 18 is_stmt 0 view .LVU750
 2485 005a 0120     		movs	r0, #1
 2486 005c 02E0     		b	.L147
 2487              	.L153:
2688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2488              		.loc 1 2688 10 view .LVU751
 2489 005e 0020     		movs	r0, #0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 203


 2490 0060 00E0     		b	.L147
 2491              	.LVL197:
 2492              	.L151:
2688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2493              		.loc 1 2688 10 view .LVU752
 2494 0062 0020     		movs	r0, #0
 2495              	.LVL198:
 2496              	.L147:
2689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2497              		.loc 1 2689 1 view .LVU753
 2498 0064 38BD     		pop	{r3, r4, r5, pc}
 2499              		.cfi_endproc
 2500              	.LFE873:
 2502              		.section	.text.ADC_Enable,"ax",%progbits
 2503              		.align	1
 2504              		.global	ADC_Enable
 2505              		.syntax unified
 2506              		.thumb
 2507              		.thumb_func
 2509              	ADC_Enable:
 2510              	.LVL199:
 2511              	.LFB874:
2699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 2512              		.loc 1 2699 1 is_stmt 1 view -0
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 8
 2515              		@ frame_needed = 0, uses_anonymous_args = 0
2699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 2516              		.loc 1 2699 1 is_stmt 0 view .LVU755
 2517 0000 30B5     		push	{r4, r5, lr}
 2518              		.cfi_def_cfa_offset 12
 2519              		.cfi_offset 4, -12
 2520              		.cfi_offset 5, -8
 2521              		.cfi_offset 14, -4
 2522 0002 83B0     		sub	sp, sp, #12
 2523              		.cfi_def_cfa_offset 24
2700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 2524              		.loc 1 2700 3 is_stmt 1 view .LVU756
2701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2525              		.loc 1 2701 3 view .LVU757
2701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2526              		.loc 1 2701 17 is_stmt 0 view .LVU758
 2527 0004 0023     		movs	r3, #0
 2528 0006 0193     		str	r3, [sp, #4]
2707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2529              		.loc 1 2707 3 is_stmt 1 view .LVU759
2707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2530              		.loc 1 2707 7 is_stmt 0 view .LVU760
 2531 0008 0368     		ldr	r3, [r0]
 2532              	.LVL200:
 2533              	.LBB226:
 2534              	.LBI226:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2535              		.loc 2 4308 26 is_stmt 1 view .LVU761
 2536              	.LBB227:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2537              		.loc 2 4310 3 view .LVU762
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 204


4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2538              		.loc 2 4310 12 is_stmt 0 view .LVU763
 2539 000a 9A68     		ldr	r2, [r3, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2540              		.loc 2 4310 68 view .LVU764
 2541 000c 12F0010F 		tst	r2, #1
 2542 0010 5BD1     		bne	.L163
 2543 0012 0446     		mov	r4, r0
 2544              	.LVL201:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2545              		.loc 2 4310 68 view .LVU765
 2546              	.LBE227:
 2547              	.LBE226:
2710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2548              		.loc 1 2710 5 is_stmt 1 view .LVU766
2710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2549              		.loc 1 2710 24 is_stmt 0 view .LVU767
 2550 0014 9968     		ldr	r1, [r3, #8]
2710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2551              		.loc 1 2710 8 view .LVU768
 2552 0016 2E4A     		ldr	r2, .L169
 2553 0018 1142     		tst	r1, r2
 2554 001a 17D1     		bne	.L166
2722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2555              		.loc 1 2722 5 is_stmt 1 view .LVU769
 2556              	.LVL202:
 2557              	.LBB228:
 2558              	.LBI228:
4269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2559              		.loc 2 4269 22 view .LVU770
 2560              	.LBB229:
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2561              		.loc 2 4274 3 view .LVU771
 2562 001c 9A68     		ldr	r2, [r3, #8]
 2563 001e 22F00042 		bic	r2, r2, #-2147483648
 2564 0022 22F01702 		bic	r2, r2, #23
 2565 0026 42F00102 		orr	r2, r2, #1
 2566 002a 9A60     		str	r2, [r3, #8]
 2567              	.LVL203:
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2568              		.loc 2 4274 3 is_stmt 0 view .LVU772
 2569              	.LBE229:
 2570              	.LBE228:
2724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         != 0UL)
 2571              		.loc 1 2724 5 is_stmt 1 view .LVU773
 2572              	.LBB230:
 2573              	.LBI230:
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2574              		.loc 2 1890 26 view .LVU774
 2575              	.LBB231:
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2576              		.loc 2 1892 3 view .LVU775
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2577              		.loc 2 1892 21 is_stmt 0 view .LVU776
 2578 002c 294B     		ldr	r3, .L169+4
 2579 002e D3F80837 		ldr	r3, [r3, #1800]
 2580              	.LVL204:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 205


1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2581              		.loc 2 1892 21 view .LVU777
 2582              	.LBE231:
 2583              	.LBE230:
2724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         != 0UL)
 2584              		.loc 1 2724 8 view .LVU778
 2585 0032 13F4000F 		tst	r3, #8388608
 2586 0036 19D0     		beq	.L157
2732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2587              		.loc 1 2732 7 is_stmt 1 view .LVU779
2733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2588              		.loc 1 2733 46 is_stmt 0 view .LVU780
 2589 0038 274B     		ldr	r3, .L169+8
 2590 003a 1B68     		ldr	r3, [r3]
 2591 003c 9B09     		lsrs	r3, r3, #6
 2592 003e 274A     		ldr	r2, .L169+12
 2593 0040 A2FB0323 		umull	r2, r3, r2, r3
 2594 0044 9B09     		lsrs	r3, r3, #6
2733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       while (wait_loop_index != 0UL)
 2595              		.loc 1 2733 26 view .LVU781
 2596 0046 0133     		adds	r3, r3, #1
2732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                          * ((SystemCoreClock / (100000UL * 2UL)) + 1UL));
 2597              		.loc 1 2732 23 view .LVU782
 2598 0048 0193     		str	r3, [sp, #4]
2734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2599              		.loc 1 2734 7 is_stmt 1 view .LVU783
2734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2600              		.loc 1 2734 13 is_stmt 0 view .LVU784
 2601 004a 0CE0     		b	.L158
 2602              	.L166:
2713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2603              		.loc 1 2713 7 is_stmt 1 view .LVU785
 2604 004c 836D     		ldr	r3, [r0, #88]
 2605 004e 43F01003 		orr	r3, r3, #16
 2606 0052 8365     		str	r3, [r0, #88]
2716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2607              		.loc 1 2716 7 view .LVU786
 2608 0054 C36D     		ldr	r3, [r0, #92]
 2609 0056 43F00103 		orr	r3, r3, #1
 2610 005a C365     		str	r3, [r0, #92]
2718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2611              		.loc 1 2718 7 view .LVU787
2718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2612              		.loc 1 2718 14 is_stmt 0 view .LVU788
 2613 005c 0120     		movs	r0, #1
 2614              	.LVL205:
2718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2615              		.loc 1 2718 14 view .LVU789
 2616 005e 35E0     		b	.L155
 2617              	.LVL206:
 2618              	.L159:
2736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2619              		.loc 1 2736 9 is_stmt 1 view .LVU790
2736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2620              		.loc 1 2736 24 is_stmt 0 view .LVU791
 2621 0060 019B     		ldr	r3, [sp, #4]
 2622 0062 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 206


 2623 0064 0193     		str	r3, [sp, #4]
 2624              	.L158:
2734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2625              		.loc 1 2734 30 is_stmt 1 view .LVU792
 2626 0066 019B     		ldr	r3, [sp, #4]
 2627 0068 002B     		cmp	r3, #0
 2628 006a F9D1     		bne	.L159
 2629              	.L157:
2742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2630              		.loc 1 2742 5 view .LVU793
2742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2631              		.loc 1 2742 19 is_stmt 0 view .LVU794
 2632 006c 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
2742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2633              		.loc 1 2742 8 view .LVU795
 2634 006e 012B     		cmp	r3, #1
 2635 0070 01D1     		bne	.L167
2781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2636              		.loc 1 2781 10 view .LVU796
 2637 0072 0020     		movs	r0, #0
 2638              	.LVL207:
2781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2639              		.loc 1 2781 10 view .LVU797
 2640 0074 2AE0     		b	.L155
 2641              	.LVL208:
 2642              	.L167:
2745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2643              		.loc 1 2745 7 is_stmt 1 view .LVU798
2745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2644              		.loc 1 2745 19 is_stmt 0 view .LVU799
 2645 0076 FFF7FEFF 		bl	HAL_GetTick
 2646              	.LVL209:
2745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2647              		.loc 1 2745 19 view .LVU800
 2648 007a 0546     		mov	r5, r0
 2649              	.LVL210:
2747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2650              		.loc 1 2747 7 is_stmt 1 view .LVU801
 2651              	.L160:
2747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2652              		.loc 1 2747 53 view .LVU802
2747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2653              		.loc 1 2747 14 is_stmt 0 view .LVU803
 2654 007c 2368     		ldr	r3, [r4]
 2655 007e 1A68     		ldr	r2, [r3]
2747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2656              		.loc 1 2747 53 view .LVU804
 2657 0080 12F0010F 		tst	r2, #1
 2658 0084 1FD1     		bne	.L168
2757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2659              		.loc 1 2757 9 is_stmt 1 view .LVU805
 2660              	.LVL211:
 2661              	.LBB232:
 2662              	.LBI232:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2663              		.loc 2 4308 26 view .LVU806
 2664              	.LBB233:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 207


4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2665              		.loc 2 4310 3 view .LVU807
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2666              		.loc 2 4310 12 is_stmt 0 view .LVU808
 2667 0086 9A68     		ldr	r2, [r3, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2668              		.loc 2 4310 68 view .LVU809
 2669 0088 12F0010F 		tst	r2, #1
 2670 008c 07D1     		bne	.L161
 2671              	.LVL212:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 2672              		.loc 2 4310 68 view .LVU810
 2673              	.LBE233:
 2674              	.LBE232:
2759:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 2675              		.loc 1 2759 11 is_stmt 1 view .LVU811
 2676              	.LBB234:
 2677              	.LBI234:
4269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2678              		.loc 2 4269 22 view .LVU812
 2679              	.LBB235:
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2680              		.loc 2 4274 3 view .LVU813
 2681 008e 9A68     		ldr	r2, [r3, #8]
 2682 0090 22F00042 		bic	r2, r2, #-2147483648
 2683 0094 22F01702 		bic	r2, r2, #23
 2684 0098 42F00102 		orr	r2, r2, #1
 2685 009c 9A60     		str	r2, [r3, #8]
 2686              	.LVL213:
 2687              	.L161:
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2688              		.loc 2 4274 3 is_stmt 0 view .LVU814
 2689              	.LBE235:
 2690              	.LBE234:
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2691              		.loc 1 2762 9 is_stmt 1 view .LVU815
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2692              		.loc 1 2762 14 is_stmt 0 view .LVU816
 2693 009e FFF7FEFF 		bl	HAL_GetTick
 2694              	.LVL214:
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2695              		.loc 1 2762 28 view .LVU817
 2696 00a2 401B     		subs	r0, r0, r5
2762:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 2697              		.loc 1 2762 12 view .LVU818
 2698 00a4 0228     		cmp	r0, #2
 2699 00a6 E9D9     		bls	.L160
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2700              		.loc 1 2765 11 is_stmt 1 view .LVU819
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2701              		.loc 1 2765 15 is_stmt 0 view .LVU820
 2702 00a8 2368     		ldr	r3, [r4]
 2703 00aa 1B68     		ldr	r3, [r3]
2765:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 2704              		.loc 1 2765 14 view .LVU821
 2705 00ac 13F0010F 		tst	r3, #1
 2706 00b0 E4D1     		bne	.L160
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 208


2768:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2707              		.loc 1 2768 13 is_stmt 1 view .LVU822
 2708 00b2 A36D     		ldr	r3, [r4, #88]
 2709 00b4 43F01003 		orr	r3, r3, #16
 2710 00b8 A365     		str	r3, [r4, #88]
2771:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2711              		.loc 1 2771 13 view .LVU823
 2712 00ba E36D     		ldr	r3, [r4, #92]
 2713 00bc 43F00103 		orr	r3, r3, #1
 2714 00c0 E365     		str	r3, [r4, #92]
2773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2715              		.loc 1 2773 13 view .LVU824
2773:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 2716              		.loc 1 2773 20 is_stmt 0 view .LVU825
 2717 00c2 0120     		movs	r0, #1
 2718 00c4 02E0     		b	.L155
 2719              	.L168:
2781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2720              		.loc 1 2781 10 view .LVU826
 2721 00c6 0020     		movs	r0, #0
 2722 00c8 00E0     		b	.L155
 2723              	.LVL215:
 2724              	.L163:
2781:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 2725              		.loc 1 2781 10 view .LVU827
 2726 00ca 0020     		movs	r0, #0
 2727              	.LVL216:
 2728              	.L155:
2782:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2729              		.loc 1 2782 1 view .LVU828
 2730 00cc 03B0     		add	sp, sp, #12
 2731              		.cfi_def_cfa_offset 12
 2732              		@ sp needed
 2733 00ce 30BD     		pop	{r4, r5, pc}
 2734              	.L170:
 2735              		.align	2
 2736              	.L169:
 2737 00d0 17000080 		.word	-2147483625
 2738 00d4 00200140 		.word	1073815552
 2739 00d8 00000000 		.word	SystemCoreClock
 2740 00dc 632D3E05 		.word	87960931
 2741              		.cfi_endproc
 2742              	.LFE874:
 2744              		.section	.text.HAL_ADC_Start,"ax",%progbits
 2745              		.align	1
 2746              		.global	HAL_ADC_Start
 2747              		.syntax unified
 2748              		.thumb
 2749              		.thumb_func
 2751              	HAL_ADC_Start:
 2752              	.LVL217:
 2753              	.LFB855:
1139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2754              		.loc 1 1139 1 is_stmt 1 view -0
 2755              		.cfi_startproc
 2756              		@ args = 0, pretend = 0, frame = 0
 2757              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 209


1140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2758              		.loc 1 1140 3 view .LVU830
1143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2759              		.loc 1 1143 3 view .LVU831
1146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2760              		.loc 1 1146 3 view .LVU832
1146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2761              		.loc 1 1146 7 is_stmt 0 view .LVU833
 2762 0000 0368     		ldr	r3, [r0]
 2763              	.LVL218:
 2764              	.LBB236:
 2765              	.LBI236:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2766              		.loc 2 4435 26 is_stmt 1 view .LVU834
 2767              	.LBB237:
 2768              		.loc 2 4437 3 view .LVU835
 2769              		.loc 2 4437 12 is_stmt 0 view .LVU836
 2770 0002 9B68     		ldr	r3, [r3, #8]
 2771              	.LVL219:
 2772              		.loc 2 4437 74 view .LVU837
 2773 0004 13F0040F 		tst	r3, #4
 2774 0008 28D1     		bne	.L174
 2775              	.LBE237:
 2776              	.LBE236:
1139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2777              		.loc 1 1139 1 view .LVU838
 2778 000a 10B5     		push	{r4, lr}
 2779              		.cfi_def_cfa_offset 8
 2780              		.cfi_offset 4, -8
 2781              		.cfi_offset 14, -4
 2782 000c 0446     		mov	r4, r0
 2783              	.LVL220:
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2784              		.loc 1 1148 5 is_stmt 1 view .LVU839
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2785              		.loc 1 1148 5 view .LVU840
 2786 000e 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 2787 0012 012B     		cmp	r3, #1
 2788 0014 24D0     		beq	.L175
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2789              		.loc 1 1148 5 discriminator 2 view .LVU841
 2790 0016 0123     		movs	r3, #1
 2791 0018 80F85430 		strb	r3, [r0, #84]
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2792              		.loc 1 1148 5 discriminator 2 view .LVU842
1151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2793              		.loc 1 1151 5 discriminator 2 view .LVU843
1151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2794              		.loc 1 1151 22 is_stmt 0 discriminator 2 view .LVU844
 2795 001c FFF7FEFF 		bl	ADC_Enable
 2796              	.LVL221:
1154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2797              		.loc 1 1154 5 is_stmt 1 discriminator 2 view .LVU845
1154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2798              		.loc 1 1154 8 is_stmt 0 discriminator 2 view .LVU846
 2799 0020 C0B9     		cbnz	r0, .L173
1159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 210


 2800              		.loc 1 1159 7 is_stmt 1 view .LVU847
 2801 0022 A36D     		ldr	r3, [r4, #88]
 2802 0024 23F47063 		bic	r3, r3, #3840
 2803 0028 23F00103 		bic	r3, r3, #1
 2804 002c 43F48073 		orr	r3, r3, #256
 2805 0030 A365     		str	r3, [r4, #88]
1165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2806              		.loc 1 1165 7 view .LVU848
 2807 0032 0023     		movs	r3, #0
 2808 0034 E365     		str	r3, [r4, #92]
1169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2809              		.loc 1 1169 7 view .LVU849
 2810 0036 2268     		ldr	r2, [r4]
 2811 0038 1C21     		movs	r1, #28
 2812 003a 1160     		str	r1, [r2]
1174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2813              		.loc 1 1174 7 view .LVU850
1174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2814              		.loc 1 1174 7 view .LVU851
 2815 003c 84F85430 		strb	r3, [r4, #84]
1174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2816              		.loc 1 1174 7 view .LVU852
1181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2817              		.loc 1 1181 7 view .LVU853
 2818 0040 2268     		ldr	r2, [r4]
 2819              	.LVL222:
 2820              	.LBB238:
 2821              	.LBI238:
4399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2822              		.loc 2 4399 22 view .LVU854
 2823              	.LBB239:
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2824              		.loc 2 4404 3 view .LVU855
 2825 0042 9368     		ldr	r3, [r2, #8]
 2826 0044 23F00043 		bic	r3, r3, #-2147483648
 2827 0048 23F01703 		bic	r3, r3, #23
 2828 004c 43F00403 		orr	r3, r3, #4
 2829 0050 9360     		str	r3, [r2, #8]
 2830              	.LVL223:
 2831              	.L172:
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2832              		.loc 2 4404 3 is_stmt 0 view .LVU856
 2833              	.LBE239:
 2834              	.LBE238:
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2835              		.loc 1 1194 1 view .LVU857
 2836 0052 10BD     		pop	{r4, pc}
 2837              	.LVL224:
 2838              	.L173:
1185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2839              		.loc 1 1185 7 is_stmt 1 view .LVU858
1185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2840              		.loc 1 1185 7 view .LVU859
 2841 0054 0023     		movs	r3, #0
 2842 0056 84F85430 		strb	r3, [r4, #84]
 2843 005a FAE7     		b	.L172
 2844              	.LVL225:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 211


 2845              	.L174:
 2846              		.cfi_def_cfa_offset 0
 2847              		.cfi_restore 4
 2848              		.cfi_restore 14
1190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 2849              		.loc 1 1190 20 is_stmt 0 view .LVU860
 2850 005c 0220     		movs	r0, #2
 2851              	.LVL226:
1194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2852              		.loc 1 1194 1 view .LVU861
 2853 005e 7047     		bx	lr
 2854              	.LVL227:
 2855              	.L175:
 2856              		.cfi_def_cfa_offset 8
 2857              		.cfi_offset 4, -8
 2858              		.cfi_offset 14, -4
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2859              		.loc 1 1148 5 view .LVU862
 2860 0060 0220     		movs	r0, #2
 2861              	.LVL228:
1148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2862              		.loc 1 1148 5 view .LVU863
 2863 0062 F6E7     		b	.L172
 2864              		.cfi_endproc
 2865              	.LFE855:
 2867              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 2868              		.align	1
 2869              		.global	HAL_ADC_Start_IT
 2870              		.syntax unified
 2871              		.thumb
 2872              		.thumb_func
 2874              	HAL_ADC_Start_IT:
 2875              	.LVL229:
 2876              	.LFB859:
1520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2877              		.loc 1 1520 1 is_stmt 1 view -0
 2878              		.cfi_startproc
 2879              		@ args = 0, pretend = 0, frame = 0
 2880              		@ frame_needed = 0, uses_anonymous_args = 0
1521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2881              		.loc 1 1521 3 view .LVU865
1524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2882              		.loc 1 1524 3 view .LVU866
1527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2883              		.loc 1 1527 3 view .LVU867
1527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 2884              		.loc 1 1527 7 is_stmt 0 view .LVU868
 2885 0000 0368     		ldr	r3, [r0]
 2886              	.LVL230:
 2887              	.LBB240:
 2888              	.LBI240:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2889              		.loc 2 4435 26 is_stmt 1 view .LVU869
 2890              	.LBB241:
 2891              		.loc 2 4437 3 view .LVU870
 2892              		.loc 2 4437 12 is_stmt 0 view .LVU871
 2893 0002 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 212


 2894              	.LVL231:
 2895              		.loc 2 4437 74 view .LVU872
 2896 0004 13F0040F 		tst	r3, #4
 2897 0008 43D1     		bne	.L186
 2898              	.LBE241:
 2899              	.LBE240:
1520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 2900              		.loc 1 1520 1 view .LVU873
 2901 000a 10B5     		push	{r4, lr}
 2902              		.cfi_def_cfa_offset 8
 2903              		.cfi_offset 4, -8
 2904              		.cfi_offset 14, -4
 2905 000c 0446     		mov	r4, r0
 2906              	.LVL232:
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2907              		.loc 1 1529 5 is_stmt 1 view .LVU874
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2908              		.loc 1 1529 5 view .LVU875
 2909 000e 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 2910 0012 012B     		cmp	r3, #1
 2911 0014 3FD0     		beq	.L187
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2912              		.loc 1 1529 5 discriminator 2 view .LVU876
 2913 0016 0123     		movs	r3, #1
 2914 0018 80F85430 		strb	r3, [r0, #84]
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2915              		.loc 1 1529 5 discriminator 2 view .LVU877
1532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2916              		.loc 1 1532 5 discriminator 2 view .LVU878
1532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2917              		.loc 1 1532 22 is_stmt 0 discriminator 2 view .LVU879
 2918 001c FFF7FEFF 		bl	ADC_Enable
 2919              	.LVL233:
1535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2920              		.loc 1 1535 5 is_stmt 1 discriminator 2 view .LVU880
1535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 2921              		.loc 1 1535 8 is_stmt 0 discriminator 2 view .LVU881
 2922 0020 0028     		cmp	r0, #0
 2923 0022 32D1     		bne	.L182
1540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 2924              		.loc 1 1540 7 is_stmt 1 view .LVU882
 2925 0024 A36D     		ldr	r3, [r4, #88]
 2926 0026 23F47063 		bic	r3, r3, #3840
 2927 002a 23F00103 		bic	r3, r3, #1
 2928 002e 43F48073 		orr	r3, r3, #256
 2929 0032 A365     		str	r3, [r4, #88]
1547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2930              		.loc 1 1547 7 view .LVU883
 2931 0034 0023     		movs	r3, #0
 2932 0036 E365     		str	r3, [r4, #92]
1551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2933              		.loc 1 1551 7 view .LVU884
 2934 0038 2268     		ldr	r2, [r4]
 2935 003a 1C21     		movs	r1, #28
 2936 003c 1160     		str	r1, [r2]
1556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2937              		.loc 1 1556 7 view .LVU885
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 213


1556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2938              		.loc 1 1556 7 view .LVU886
 2939 003e 84F85430 		strb	r3, [r4, #84]
1556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2940              		.loc 1 1556 7 view .LVU887
1559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2941              		.loc 1 1559 7 view .LVU888
 2942 0042 2268     		ldr	r2, [r4]
 2943 0044 5368     		ldr	r3, [r2, #4]
 2944 0046 23F01C03 		bic	r3, r3, #28
 2945 004a 5360     		str	r3, [r2, #4]
1562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2946              		.loc 1 1562 7 view .LVU889
1562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2947              		.loc 1 1562 25 is_stmt 0 view .LVU890
 2948 004c 6369     		ldr	r3, [r4, #20]
1562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2949              		.loc 1 1562 7 view .LVU891
 2950 004e 082B     		cmp	r3, #8
 2951 0050 15D0     		beq	.L192
1569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 2952              		.loc 1 1569 11 is_stmt 1 view .LVU892
 2953 0052 2268     		ldr	r2, [r4]
 2954 0054 5368     		ldr	r3, [r2, #4]
 2955 0056 43F00403 		orr	r3, r3, #4
 2956 005a 5360     		str	r3, [r2, #4]
1570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2957              		.loc 1 1570 11 view .LVU893
 2958              	.L184:
1577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2959              		.loc 1 1577 7 view .LVU894
1577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2960              		.loc 1 1577 21 is_stmt 0 view .LVU895
 2961 005c 236B     		ldr	r3, [r4, #48]
1577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 2962              		.loc 1 1577 10 view .LVU896
 2963 005e 23B9     		cbnz	r3, .L185
1579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 2964              		.loc 1 1579 9 is_stmt 1 view .LVU897
 2965 0060 2268     		ldr	r2, [r4]
 2966 0062 5368     		ldr	r3, [r2, #4]
 2967 0064 43F01003 		orr	r3, r3, #16
 2968 0068 5360     		str	r3, [r2, #4]
 2969              	.L185:
1587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 2970              		.loc 1 1587 7 view .LVU898
 2971 006a 2268     		ldr	r2, [r4]
 2972              	.LVL234:
 2973              	.LBB242:
 2974              	.LBI242:
4399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 2975              		.loc 2 4399 22 view .LVU899
 2976              	.LBB243:
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2977              		.loc 2 4404 3 view .LVU900
 2978 006c 9368     		ldr	r3, [r2, #8]
 2979 006e 23F00043 		bic	r3, r3, #-2147483648
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 214


 2980 0072 23F01703 		bic	r3, r3, #23
 2981 0076 43F00403 		orr	r3, r3, #4
 2982 007a 9360     		str	r3, [r2, #8]
 2983              	.LVL235:
 2984              	.L181:
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 2985              		.loc 2 4404 3 is_stmt 0 view .LVU901
 2986              	.LBE243:
 2987              	.LBE242:
1601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 2988              		.loc 1 1601 1 view .LVU902
 2989 007c 10BD     		pop	{r4, pc}
 2990              	.LVL236:
 2991              	.L192:
1565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 2992              		.loc 1 1565 11 is_stmt 1 view .LVU903
 2993 007e 2268     		ldr	r2, [r4]
 2994 0080 5368     		ldr	r3, [r2, #4]
 2995 0082 43F00803 		orr	r3, r3, #8
 2996 0086 5360     		str	r3, [r2, #4]
1566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 2997              		.loc 1 1566 11 view .LVU904
 2998 0088 E8E7     		b	.L184
 2999              	.L182:
1591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3000              		.loc 1 1591 7 view .LVU905
1591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3001              		.loc 1 1591 7 view .LVU906
 3002 008a 0023     		movs	r3, #0
 3003 008c 84F85430 		strb	r3, [r4, #84]
 3004 0090 F4E7     		b	.L181
 3005              	.LVL237:
 3006              	.L186:
 3007              		.cfi_def_cfa_offset 0
 3008              		.cfi_restore 4
 3009              		.cfi_restore 14
1597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3010              		.loc 1 1597 20 is_stmt 0 view .LVU907
 3011 0092 0220     		movs	r0, #2
 3012              	.LVL238:
1601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3013              		.loc 1 1601 1 view .LVU908
 3014 0094 7047     		bx	lr
 3015              	.LVL239:
 3016              	.L187:
 3017              		.cfi_def_cfa_offset 8
 3018              		.cfi_offset 4, -8
 3019              		.cfi_offset 14, -4
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3020              		.loc 1 1529 5 view .LVU909
 3021 0096 0220     		movs	r0, #2
 3022              	.LVL240:
1529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3023              		.loc 1 1529 5 view .LVU910
 3024 0098 F0E7     		b	.L181
 3025              		.cfi_endproc
 3026              	.LFE859:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 215


 3028              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3029              		.align	1
 3030              		.global	HAL_ADC_Start_DMA
 3031              		.syntax unified
 3032              		.thumb
 3033              		.thumb_func
 3035              	HAL_ADC_Start_DMA:
 3036              	.LVL241:
 3037              	.LFB861:
1658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3038              		.loc 1 1658 1 is_stmt 1 view -0
 3039              		.cfi_startproc
 3040              		@ args = 0, pretend = 0, frame = 0
 3041              		@ frame_needed = 0, uses_anonymous_args = 0
1658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3042              		.loc 1 1658 1 is_stmt 0 view .LVU912
 3043 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3044              		.cfi_def_cfa_offset 24
 3045              		.cfi_offset 3, -24
 3046              		.cfi_offset 4, -20
 3047              		.cfi_offset 5, -16
 3048              		.cfi_offset 6, -12
 3049              		.cfi_offset 7, -8
 3050              		.cfi_offset 14, -4
 3051 0002 0446     		mov	r4, r0
1659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3052              		.loc 1 1659 3 is_stmt 1 view .LVU913
1662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3053              		.loc 1 1662 3 view .LVU914
1665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3054              		.loc 1 1665 3 view .LVU915
1665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3055              		.loc 1 1665 7 is_stmt 0 view .LVU916
 3056 0004 0068     		ldr	r0, [r0]
 3057              	.LVL242:
 3058              	.LBB244:
 3059              	.LBI244:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3060              		.loc 2 4435 26 is_stmt 1 view .LVU917
 3061              	.LBB245:
 3062              		.loc 2 4437 3 view .LVU918
 3063              		.loc 2 4437 12 is_stmt 0 view .LVU919
 3064 0006 8568     		ldr	r5, [r0, #8]
 3065              		.loc 2 4437 74 view .LVU920
 3066 0008 15F0040F 		tst	r5, #4
 3067 000c 50D1     		bne	.L197
 3068 000e 0F46     		mov	r7, r1
 3069 0010 1646     		mov	r6, r2
 3070              	.LVL243:
 3071              		.loc 2 4437 74 view .LVU921
 3072              	.LBE245:
 3073              	.LBE244:
1667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3074              		.loc 1 1667 5 is_stmt 1 view .LVU922
1667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3075              		.loc 1 1667 5 view .LVU923
 3076 0012 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 216


 3077 0016 012B     		cmp	r3, #1
 3078 0018 4CD0     		beq	.L198
1667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3079              		.loc 1 1667 5 discriminator 2 view .LVU924
 3080 001a 0123     		movs	r3, #1
 3081 001c 84F85430 		strb	r3, [r4, #84]
1667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3082              		.loc 1 1667 5 discriminator 2 view .LVU925
1672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3083              		.loc 1 1672 5 discriminator 2 view .LVU926
1672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3084              		.loc 1 1672 24 is_stmt 0 discriminator 2 view .LVU927
 3085 0020 C368     		ldr	r3, [r0, #12]
1672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3086              		.loc 1 1672 8 discriminator 2 view .LVU928
 3087 0022 13F0010F 		tst	r3, #1
 3088 0026 10D1     		bne	.L195
1674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3089              		.loc 1 1674 7 is_stmt 1 view .LVU929
 3090              	.LVL244:
 3091              	.LBB246:
 3092              	.LBI246:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3093              		.loc 2 4308 26 view .LVU930
 3094              	.LBB247:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3095              		.loc 2 4310 3 view .LVU931
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3096              		.loc 2 4310 12 is_stmt 0 view .LVU932
 3097 0028 8368     		ldr	r3, [r0, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3098              		.loc 2 4310 68 view .LVU933
 3099 002a 13F0010F 		tst	r3, #1
 3100 002e 07D0     		beq	.L196
 3101              	.LVL245:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3102              		.loc 2 4310 68 view .LVU934
 3103              	.LBE247:
 3104              	.LBE246:
1677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 3105              		.loc 1 1677 9 is_stmt 1 view .LVU935
 3106              	.LBB248:
 3107              	.LBI248:
4289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3108              		.loc 2 4289 22 view .LVU936
 3109              	.LBB249:
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3110              		.loc 2 4294 3 view .LVU937
 3111 0030 8368     		ldr	r3, [r0, #8]
 3112 0032 23F00043 		bic	r3, r3, #-2147483648
 3113 0036 23F01703 		bic	r3, r3, #23
 3114 003a 43F00203 		orr	r3, r3, #2
 3115 003e 8360     		str	r3, [r0, #8]
 3116              	.LVL246:
 3117              	.L196:
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3118              		.loc 2 4294 3 is_stmt 0 view .LVU938
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 217


 3119              	.LBE249:
 3120              	.LBE248:
1681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3121              		.loc 1 1681 7 is_stmt 1 view .LVU939
1681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3122              		.loc 1 1681 11 is_stmt 0 view .LVU940
 3123 0040 2268     		ldr	r2, [r4]
 3124              	.LVL247:
1681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3125              		.loc 1 1681 21 view .LVU941
 3126 0042 D368     		ldr	r3, [r2, #12]
1681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3127              		.loc 1 1681 29 view .LVU942
 3128 0044 43F00103 		orr	r3, r3, #1
 3129 0048 D360     		str	r3, [r2, #12]
 3130              	.L195:
1685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3131              		.loc 1 1685 5 is_stmt 1 view .LVU943
1685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3132              		.loc 1 1685 22 is_stmt 0 view .LVU944
 3133 004a 2046     		mov	r0, r4
 3134 004c FFF7FEFF 		bl	ADC_Enable
 3135              	.LVL248:
1688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3136              		.loc 1 1688 5 is_stmt 1 view .LVU945
1688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3137              		.loc 1 1688 8 is_stmt 0 view .LVU946
 3138 0050 0028     		cmp	r0, #0
 3139 0052 2ED1     		bne	.L194
1693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3140              		.loc 1 1693 7 is_stmt 1 view .LVU947
 3141 0054 A36D     		ldr	r3, [r4, #88]
 3142 0056 23F47063 		bic	r3, r3, #3840
 3143 005a 23F00103 		bic	r3, r3, #1
 3144 005e 43F48073 		orr	r3, r3, #256
 3145 0062 A365     		str	r3, [r4, #88]
1699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3146              		.loc 1 1699 7 view .LVU948
 3147 0064 0023     		movs	r3, #0
 3148 0066 E365     		str	r3, [r4, #92]
1702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3149              		.loc 1 1702 7 view .LVU949
1702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3150              		.loc 1 1702 11 is_stmt 0 view .LVU950
 3151 0068 226D     		ldr	r2, [r4, #80]
1702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3152              		.loc 1 1702 42 view .LVU951
 3153 006a 1349     		ldr	r1, .L200
 3154 006c D162     		str	r1, [r2, #44]
1705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3155              		.loc 1 1705 7 is_stmt 1 view .LVU952
1705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3156              		.loc 1 1705 11 is_stmt 0 view .LVU953
 3157 006e 226D     		ldr	r2, [r4, #80]
1705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3158              		.loc 1 1705 46 view .LVU954
 3159 0070 1249     		ldr	r1, .L200+4
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 218


 3160 0072 1163     		str	r1, [r2, #48]
1708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3161              		.loc 1 1708 7 is_stmt 1 view .LVU955
1708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3162              		.loc 1 1708 11 is_stmt 0 view .LVU956
 3163 0074 226D     		ldr	r2, [r4, #80]
1708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3164              		.loc 1 1708 43 view .LVU957
 3165 0076 1249     		ldr	r1, .L200+8
 3166 0078 5163     		str	r1, [r2, #52]
1717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3167              		.loc 1 1717 7 is_stmt 1 view .LVU958
 3168 007a 2268     		ldr	r2, [r4]
 3169 007c 1C21     		movs	r1, #28
 3170 007e 1160     		str	r1, [r2]
1722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3171              		.loc 1 1722 7 view .LVU959
1722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3172              		.loc 1 1722 7 view .LVU960
 3173 0080 84F85430 		strb	r3, [r4, #84]
1722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3174              		.loc 1 1722 7 view .LVU961
1725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3175              		.loc 1 1725 7 view .LVU962
 3176 0084 2268     		ldr	r2, [r4]
 3177 0086 5368     		ldr	r3, [r2, #4]
 3178 0088 43F01003 		orr	r3, r3, #16
 3179 008c 5360     		str	r3, [r2, #4]
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3180              		.loc 1 1728 7 view .LVU963
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3181              		.loc 1 1728 74 is_stmt 0 view .LVU964
 3182 008e 2168     		ldr	r1, [r4]
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3183              		.loc 1 1728 24 view .LVU965
 3184 0090 3346     		mov	r3, r6
 3185 0092 3A46     		mov	r2, r7
 3186 0094 4031     		adds	r1, r1, #64
 3187 0096 206D     		ldr	r0, [r4, #80]
 3188              	.LVL249:
1728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3189              		.loc 1 1728 24 view .LVU966
 3190 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3191              	.LVL250:
1735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3192              		.loc 1 1735 7 is_stmt 1 view .LVU967
 3193 009c 2268     		ldr	r2, [r4]
 3194              	.LVL251:
 3195              	.LBB250:
 3196              	.LBI250:
4399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3197              		.loc 2 4399 22 view .LVU968
 3198              	.LBB251:
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3199              		.loc 2 4404 3 view .LVU969
 3200 009e 9368     		ldr	r3, [r2, #8]
 3201 00a0 23F00043 		bic	r3, r3, #-2147483648
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 219


 3202 00a4 23F01703 		bic	r3, r3, #23
 3203 00a8 43F00403 		orr	r3, r3, #4
 3204 00ac 9360     		str	r3, [r2, #8]
4407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 3205              		.loc 2 4407 1 is_stmt 0 view .LVU970
 3206 00ae 00E0     		b	.L194
 3207              	.LVL252:
 3208              	.L197:
4407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 3209              		.loc 2 4407 1 view .LVU971
 3210              	.LBE251:
 3211              	.LBE250:
1740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3212              		.loc 1 1740 20 view .LVU972
 3213 00b0 0220     		movs	r0, #2
 3214              	.LVL253:
 3215              	.L194:
1744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3216              		.loc 1 1744 1 view .LVU973
 3217 00b2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3218              	.LVL254:
 3219              	.L198:
1667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3220              		.loc 1 1667 5 view .LVU974
 3221 00b4 0220     		movs	r0, #2
 3222 00b6 FCE7     		b	.L194
 3223              	.L201:
 3224              		.align	2
 3225              	.L200:
 3226 00b8 00000000 		.word	ADC_DMAConvCplt
 3227 00bc 00000000 		.word	ADC_DMAHalfConvCplt
 3228 00c0 00000000 		.word	ADC_DMAError
 3229              		.cfi_endproc
 3230              	.LFE861:
 3232              		.section	.text.ADC_Disable,"ax",%progbits
 3233              		.align	1
 3234              		.global	ADC_Disable
 3235              		.syntax unified
 3236              		.thumb
 3237              		.thumb_func
 3239              	ADC_Disable:
 3240              	.LVL255:
 3241              	.LFB875:
2792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3242              		.loc 1 2792 1 is_stmt 1 view -0
 3243              		.cfi_startproc
 3244              		@ args = 0, pretend = 0, frame = 0
 3245              		@ frame_needed = 0, uses_anonymous_args = 0
2792:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tickstart;
 3246              		.loc 1 2792 1 is_stmt 0 view .LVU976
 3247 0000 38B5     		push	{r3, r4, r5, lr}
 3248              		.cfi_def_cfa_offset 16
 3249              		.cfi_offset 3, -16
 3250              		.cfi_offset 4, -12
 3251              		.cfi_offset 5, -8
 3252              		.cfi_offset 14, -4
 3253 0002 0446     		mov	r4, r0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 220


2793:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 3254              		.loc 1 2793 3 is_stmt 1 view .LVU977
2794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3255              		.loc 1 2794 3 view .LVU978
2794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3256              		.loc 1 2794 48 is_stmt 0 view .LVU979
 3257 0004 0268     		ldr	r2, [r0]
 3258              	.LVL256:
 3259              	.LBB252:
 3260              	.LBI252:
4319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3261              		.loc 2 4319 26 is_stmt 1 view .LVU980
 3262              	.LBB253:
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3263              		.loc 2 4321 3 view .LVU981
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3264              		.loc 2 4321 12 is_stmt 0 view .LVU982
 3265 0006 9368     		ldr	r3, [r2, #8]
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3266              		.loc 2 4321 70 view .LVU983
 3267 0008 13F00203 		ands	r3, r3, #2
 3268 000c 00D0     		beq	.L203
 3269 000e 0123     		movs	r3, #1
 3270              	.L203:
 3271              	.LVL257:
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3272              		.loc 2 4321 70 view .LVU984
 3273              	.LBE253:
 3274              	.LBE252:
2799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 3275              		.loc 1 2799 3 is_stmt 1 view .LVU985
 3276              	.LBB254:
 3277              	.LBI254:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3278              		.loc 2 4308 26 view .LVU986
 3279              	.LBB255:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3280              		.loc 2 4310 3 view .LVU987
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3281              		.loc 2 4310 12 is_stmt 0 view .LVU988
 3282 0010 9168     		ldr	r1, [r2, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3283              		.loc 2 4310 68 view .LVU989
 3284 0012 11F0010F 		tst	r1, #1
 3285 0016 39D0     		beq	.L208
 3286              	.LVL258:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3287              		.loc 2 4310 68 view .LVU990
 3288              	.LBE255:
 3289              	.LBE254:
2800:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****      )
 3290              		.loc 1 2800 7 view .LVU991
 3291 0018 002B     		cmp	r3, #0
 3292 001a 39D1     		bne	.L209
2804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3293              		.loc 1 2804 5 is_stmt 1 view .LVU992
2804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 221


 3294              		.loc 1 2804 24 is_stmt 0 view .LVU993
 3295 001c 9368     		ldr	r3, [r2, #8]
 3296              	.LVL259:
2804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3297              		.loc 1 2804 29 view .LVU994
 3298 001e 03F00503 		and	r3, r3, #5
2804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3299              		.loc 1 2804 8 view .LVU995
 3300 0022 012B     		cmp	r3, #1
 3301 0024 09D0     		beq	.L211
2813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3302              		.loc 1 2813 7 is_stmt 1 view .LVU996
 3303 0026 A36D     		ldr	r3, [r4, #88]
 3304 0028 43F01003 		orr	r3, r3, #16
 3305 002c A365     		str	r3, [r4, #88]
2816:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3306              		.loc 1 2816 7 view .LVU997
 3307 002e E36D     		ldr	r3, [r4, #92]
 3308 0030 43F00103 		orr	r3, r3, #1
 3309 0034 E365     		str	r3, [r4, #92]
2818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3310              		.loc 1 2818 7 view .LVU998
2818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3311              		.loc 1 2818 14 is_stmt 0 view .LVU999
 3312 0036 0120     		movs	r0, #1
 3313              	.LVL260:
2818:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3314              		.loc 1 2818 14 view .LVU1000
 3315 0038 29E0     		b	.L204
 3316              	.LVL261:
 3317              	.L211:
2807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 3318              		.loc 1 2807 7 is_stmt 1 view .LVU1001
 3319              	.LBB256:
 3320              	.LBI256:
4289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3321              		.loc 2 4289 22 view .LVU1002
 3322              	.LBB257:
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3323              		.loc 2 4294 3 view .LVU1003
 3324 003a 9368     		ldr	r3, [r2, #8]
 3325 003c 23F00043 		bic	r3, r3, #-2147483648
 3326 0040 23F01703 		bic	r3, r3, #23
 3327 0044 43F00203 		orr	r3, r3, #2
 3328 0048 9360     		str	r3, [r2, #8]
 3329              	.LVL262:
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3330              		.loc 2 4294 3 is_stmt 0 view .LVU1004
 3331              	.LBE257:
 3332              	.LBE256:
2808:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3333              		.loc 1 2808 7 is_stmt 1 view .LVU1005
 3334 004a 2368     		ldr	r3, [r4]
 3335 004c 0322     		movs	r2, #3
 3336 004e 1A60     		str	r2, [r3]
2823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3337              		.loc 1 2823 5 view .LVU1006
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 222


2823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3338              		.loc 1 2823 17 is_stmt 0 view .LVU1007
 3339 0050 FFF7FEFF 		bl	HAL_GetTick
 3340              	.LVL263:
2823:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3341              		.loc 1 2823 17 view .LVU1008
 3342 0054 0546     		mov	r5, r0
 3343              	.LVL264:
2825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3344              		.loc 1 2825 5 is_stmt 1 view .LVU1009
 3345              	.L206:
2825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3346              		.loc 1 2825 47 view .LVU1010
2825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3347              		.loc 1 2825 17 is_stmt 0 view .LVU1011
 3348 0056 2368     		ldr	r3, [r4]
2825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3349              		.loc 1 2825 27 view .LVU1012
 3350 0058 9B68     		ldr	r3, [r3, #8]
2825:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3351              		.loc 1 2825 47 view .LVU1013
 3352 005a 13F0010F 		tst	r3, #1
 3353 005e 13D0     		beq	.L212
2827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3354              		.loc 1 2827 7 is_stmt 1 view .LVU1014
2827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3355              		.loc 1 2827 12 is_stmt 0 view .LVU1015
 3356 0060 FFF7FEFF 		bl	HAL_GetTick
 3357              	.LVL265:
2827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3358              		.loc 1 2827 26 view .LVU1016
 3359 0064 401B     		subs	r0, r0, r5
2827:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3360              		.loc 1 2827 10 view .LVU1017
 3361 0066 0228     		cmp	r0, #2
 3362 0068 F5D9     		bls	.L206
2830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3363              		.loc 1 2830 9 is_stmt 1 view .LVU1018
2830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3364              		.loc 1 2830 18 is_stmt 0 view .LVU1019
 3365 006a 2368     		ldr	r3, [r4]
2830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3366              		.loc 1 2830 28 view .LVU1020
 3367 006c 9B68     		ldr	r3, [r3, #8]
2830:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 3368              		.loc 1 2830 12 view .LVU1021
 3369 006e 13F0010F 		tst	r3, #1
 3370 0072 F0D0     		beq	.L206
2833:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3371              		.loc 1 2833 11 is_stmt 1 view .LVU1022
 3372 0074 A36D     		ldr	r3, [r4, #88]
 3373 0076 43F01003 		orr	r3, r3, #16
 3374 007a A365     		str	r3, [r4, #88]
2836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3375              		.loc 1 2836 11 view .LVU1023
 3376 007c E36D     		ldr	r3, [r4, #92]
 3377 007e 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 223


 3378 0082 E365     		str	r3, [r4, #92]
2838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 3379              		.loc 1 2838 11 view .LVU1024
2838:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 3380              		.loc 1 2838 18 is_stmt 0 view .LVU1025
 3381 0084 0120     		movs	r0, #1
 3382 0086 02E0     		b	.L204
 3383              	.L212:
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3384              		.loc 1 2845 10 view .LVU1026
 3385 0088 0020     		movs	r0, #0
 3386 008a 00E0     		b	.L204
 3387              	.LVL266:
 3388              	.L208:
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3389              		.loc 1 2845 10 view .LVU1027
 3390 008c 0020     		movs	r0, #0
 3391              	.LVL267:
 3392              	.L204:
2846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3393              		.loc 1 2846 1 view .LVU1028
 3394 008e 38BD     		pop	{r3, r4, r5, pc}
 3395              	.LVL268:
 3396              	.L209:
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3397              		.loc 1 2845 10 view .LVU1029
 3398 0090 0020     		movs	r0, #0
 3399              	.LVL269:
2845:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3400              		.loc 1 2845 10 view .LVU1030
 3401 0092 FCE7     		b	.L204
 3402              		.cfi_endproc
 3403              	.LFE875:
 3405              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 3406              		.align	1
 3407              		.global	HAL_ADC_DeInit
 3408              		.syntax unified
 3409              		.thumb
 3410              		.thumb_func
 3412              	HAL_ADC_DeInit:
 3413              	.LVL270:
 3414              	.LFB852:
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3415              		.loc 1 729 1 is_stmt 1 view -0
 3416              		.cfi_startproc
 3417              		@ args = 0, pretend = 0, frame = 0
 3418              		@ frame_needed = 0, uses_anonymous_args = 0
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3419              		.loc 1 729 1 is_stmt 0 view .LVU1032
 3420 0000 70B5     		push	{r4, r5, r6, lr}
 3421              		.cfi_def_cfa_offset 16
 3422              		.cfi_offset 4, -16
 3423              		.cfi_offset 5, -12
 3424              		.cfi_offset 6, -8
 3425              		.cfi_offset 14, -4
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3426              		.loc 1 730 3 is_stmt 1 view .LVU1033
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 224


 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3427              		.loc 1 733 3 view .LVU1034
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3428              		.loc 1 733 6 is_stmt 0 view .LVU1035
 3429 0002 0028     		cmp	r0, #0
 3430 0004 56D0     		beq	.L217
 3431 0006 0446     		mov	r4, r0
 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3432              		.loc 1 739 3 is_stmt 1 view .LVU1036
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3433              		.loc 1 742 3 view .LVU1037
 3434 0008 836D     		ldr	r3, [r0, #88]
 3435 000a 43F00203 		orr	r3, r3, #2
 3436 000e 8365     		str	r3, [r0, #88]
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3437              		.loc 1 745 3 view .LVU1038
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3438              		.loc 1 745 20 is_stmt 0 view .LVU1039
 3439 0010 FFF7FEFF 		bl	ADC_ConversionStop
 3440              	.LVL271:
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3441              		.loc 1 748 3 is_stmt 1 view .LVU1040
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3442              		.loc 1 748 6 is_stmt 0 view .LVU1041
 3443 0014 0646     		mov	r6, r0
 3444 0016 0028     		cmp	r0, #0
 3445 0018 3DD0     		beq	.L219
 3446              	.L215:
 3447              	.LVL272:
 772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 3448              		.loc 1 772 3 is_stmt 1 view .LVU1042
 3449 001a 2268     		ldr	r2, [r4]
 3450 001c 5368     		ldr	r3, [r2, #4]
 3451 001e 23F46773 		bic	r3, r3, #924
 3452 0022 23F00303 		bic	r3, r3, #3
 3453 0026 5360     		str	r3, [r2, #4]
 778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 3454              		.loc 1 778 3 view .LVU1043
 3455 0028 2368     		ldr	r3, [r4]
 3456 002a 40F29F32 		movw	r2, #927
 3457 002e 1A60     		str	r2, [r3]
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3458              		.loc 1 788 3 view .LVU1044
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3459              		.loc 1 788 7 is_stmt 0 view .LVU1045
 3460 0030 2268     		ldr	r2, [r4]
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3461              		.loc 1 788 17 view .LVU1046
 3462 0032 D168     		ldr	r1, [r2, #12]
 788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 3463              		.loc 1 788 25 view .LVU1047
 3464 0034 204B     		ldr	r3, .L220
 3465 0036 0B40     		ands	r3, r3, r1
 3466 0038 D360     		str	r3, [r2, #12]
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3467              		.loc 1 796 3 is_stmt 1 view .LVU1048
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 225


 3468              		.loc 1 796 7 is_stmt 0 view .LVU1049
 3469 003a 2268     		ldr	r2, [r4]
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3470              		.loc 1 796 17 view .LVU1050
 3471 003c 1369     		ldr	r3, [r2, #16]
 796:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3472              		.loc 1 796 25 view .LVU1051
 3473 003e 23F04043 		bic	r3, r3, #-1073741824
 3474 0042 1361     		str	r3, [r2, #16]
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3475              		.loc 1 799 3 is_stmt 1 view .LVU1052
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3476              		.loc 1 799 7 is_stmt 0 view .LVU1053
 3477 0044 2268     		ldr	r2, [r4]
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3478              		.loc 1 799 17 view .LVU1054
 3479 0046 5369     		ldr	r3, [r2, #20]
 799:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3480              		.loc 1 799 24 view .LVU1055
 3481 0048 23F00703 		bic	r3, r3, #7
 3482 004c 5361     		str	r3, [r2, #20]
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3483              		.loc 1 802 3 is_stmt 1 view .LVU1056
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3484              		.loc 1 802 7 is_stmt 0 view .LVU1057
 3485 004e 2268     		ldr	r2, [r4]
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3486              		.loc 1 802 17 view .LVU1058
 3487 0050 136A     		ldr	r3, [r2, #32]
 802:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD2TR &= ~(ADC_AWD2TR_HT2 | ADC_AWD2TR_LT2);
 3488              		.loc 1 802 26 view .LVU1059
 3489 0052 03F0F023 		and	r3, r3, #-268374016
 3490 0056 1362     		str	r3, [r2, #32]
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3491              		.loc 1 803 3 is_stmt 1 view .LVU1060
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3492              		.loc 1 803 7 is_stmt 0 view .LVU1061
 3493 0058 2268     		ldr	r2, [r4]
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3494              		.loc 1 803 17 view .LVU1062
 3495 005a 536A     		ldr	r3, [r2, #36]
 803:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   hadc->Instance->AWD3TR &= ~(ADC_AWD3TR_HT3 | ADC_AWD3TR_LT3);
 3496              		.loc 1 803 26 view .LVU1063
 3497 005c 03F0F023 		and	r3, r3, #-268374016
 3498 0060 5362     		str	r3, [r2, #36]
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3499              		.loc 1 804 3 is_stmt 1 view .LVU1064
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3500              		.loc 1 804 7 is_stmt 0 view .LVU1065
 3501 0062 2268     		ldr	r2, [r4]
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3502              		.loc 1 804 17 view .LVU1066
 3503 0064 D36A     		ldr	r3, [r2, #44]
 804:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3504              		.loc 1 804 26 view .LVU1067
 3505 0066 03F0F023 		and	r3, r3, #-268374016
 3506 006a D362     		str	r3, [r2, #44]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 226


 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3507              		.loc 1 807 3 is_stmt 1 view .LVU1068
 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3508              		.loc 1 807 7 is_stmt 0 view .LVU1069
 3509 006c 2368     		ldr	r3, [r4]
 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3510              		.loc 1 807 17 view .LVU1070
 3511 006e 9A6A     		ldr	r2, [r3, #40]
 807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3512              		.loc 1 807 26 view .LVU1071
 3513 0070 0025     		movs	r5, #0
 3514 0072 9D62     		str	r5, [r3, #40]
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3515              		.loc 1 813 3 is_stmt 1 view .LVU1072
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3516              		.loc 1 813 13 is_stmt 0 view .LVU1073
 3517 0074 114A     		ldr	r2, .L220+4
 3518 0076 D2F80837 		ldr	r3, [r2, #1800]
 813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3519              		.loc 1 813 19 view .LVU1074
 3520 007a 23F0FE73 		bic	r3, r3, #33292288
 3521 007e C2F80837 		str	r3, [r2, #1800]
 832:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 3522              		.loc 1 832 3 is_stmt 1 view .LVU1075
 3523 0082 2046     		mov	r0, r4
 3524 0084 FFF7FEFF 		bl	HAL_ADC_MspDeInit
 3525              	.LVL273:
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3526              		.loc 1 836 3 view .LVU1076
 836:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3527              		.loc 1 836 39 is_stmt 0 view .LVU1077
 3528 0088 2566     		str	r5, [r4, #96]
 839:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3529              		.loc 1 839 3 is_stmt 1 view .LVU1078
 3530 008a E565     		str	r5, [r4, #92]
 842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3531              		.loc 1 842 3 view .LVU1079
 842:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3532              		.loc 1 842 15 is_stmt 0 view .LVU1080
 3533 008c A565     		str	r5, [r4, #88]
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3534              		.loc 1 844 3 is_stmt 1 view .LVU1081
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3535              		.loc 1 844 3 view .LVU1082
 3536 008e 84F85450 		strb	r5, [r4, #84]
 844:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3537              		.loc 1 844 3 view .LVU1083
 846:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3538              		.loc 1 846 3 view .LVU1084
 3539              	.LVL274:
 3540              	.L214:
 847:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3541              		.loc 1 847 1 is_stmt 0 view .LVU1085
 3542 0092 3046     		mov	r0, r6
 3543 0094 70BD     		pop	{r4, r5, r6, pc}
 3544              	.LVL275:
 3545              	.L219:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 227


 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3546              		.loc 1 751 5 is_stmt 1 view .LVU1086
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3547              		.loc 1 751 22 is_stmt 0 view .LVU1087
 3548 0096 2046     		mov	r0, r4
 3549              	.LVL276:
 751:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3550              		.loc 1 751 22 view .LVU1088
 3551 0098 FFF7FEFF 		bl	ADC_Disable
 3552              	.LVL277:
 754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3553              		.loc 1 754 5 is_stmt 1 view .LVU1089
 754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3554              		.loc 1 754 8 is_stmt 0 view .LVU1090
 3555 009c 0646     		mov	r6, r0
 3556 009e 08B9     		cbnz	r0, .L216
 757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3557              		.loc 1 757 7 is_stmt 1 view .LVU1091
 757:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3558              		.loc 1 757 19 is_stmt 0 view .LVU1092
 3559 00a0 0123     		movs	r3, #1
 3560 00a2 A365     		str	r3, [r4, #88]
 3561              	.L216:
 761:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3562              		.loc 1 761 5 is_stmt 1 view .LVU1093
 3563 00a4 2268     		ldr	r2, [r4]
 3564              	.LVL278:
 3565              	.LBB258:
 3566              	.LBI258:
4237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3567              		.loc 2 4237 22 view .LVU1094
 3568              	.LBB259:
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3569              		.loc 2 4239 3 view .LVU1095
 3570 00a6 9368     		ldr	r3, [r2, #8]
 3571 00a8 23F01043 		bic	r3, r3, #-1879048192
 3572 00ac 23F01703 		bic	r3, r3, #23
 3573 00b0 9360     		str	r3, [r2, #8]
4240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 3574              		.loc 2 4240 1 is_stmt 0 view .LVU1096
 3575 00b2 B2E7     		b	.L215
 3576              	.LVL279:
 3577              	.L217:
4240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 3578              		.loc 2 4240 1 view .LVU1097
 3579              	.LBE259:
 3580              	.LBE258:
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3581              		.loc 1 735 12 view .LVU1098
 3582 00b4 0126     		movs	r6, #1
 3583 00b6 ECE7     		b	.L214
 3584              	.L221:
 3585              		.align	2
 3586              	.L220:
 3587 00b8 00023E83 		.word	-2093088256
 3588 00bc 00200140 		.word	1073815552
 3589              		.cfi_endproc
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 228


 3590              	.LFE852:
 3592              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 3593              		.align	1
 3594              		.global	HAL_ADC_Stop
 3595              		.syntax unified
 3596              		.thumb
 3597              		.thumb_func
 3599              	HAL_ADC_Stop:
 3600              	.LVL280:
 3601              	.LFB856:
1206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3602              		.loc 1 1206 1 is_stmt 1 view -0
 3603              		.cfi_startproc
 3604              		@ args = 0, pretend = 0, frame = 0
 3605              		@ frame_needed = 0, uses_anonymous_args = 0
1207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3606              		.loc 1 1207 3 view .LVU1100
1210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3607              		.loc 1 1210 3 view .LVU1101
1212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3608              		.loc 1 1212 3 view .LVU1102
1212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3609              		.loc 1 1212 3 view .LVU1103
 3610 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3611 0004 012B     		cmp	r3, #1
 3612 0006 19D0     		beq	.L225
1206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3613              		.loc 1 1206 1 is_stmt 0 discriminator 2 view .LVU1104
 3614 0008 10B5     		push	{r4, lr}
 3615              		.cfi_def_cfa_offset 8
 3616              		.cfi_offset 4, -8
 3617              		.cfi_offset 14, -4
 3618 000a 0446     		mov	r4, r0
1212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3619              		.loc 1 1212 3 is_stmt 1 discriminator 2 view .LVU1105
 3620 000c 0123     		movs	r3, #1
 3621 000e 80F85430 		strb	r3, [r0, #84]
1212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3622              		.loc 1 1212 3 discriminator 2 view .LVU1106
1215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3623              		.loc 1 1215 3 discriminator 2 view .LVU1107
1215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3624              		.loc 1 1215 20 is_stmt 0 discriminator 2 view .LVU1108
 3625 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3626              	.LVL281:
1218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3627              		.loc 1 1218 3 is_stmt 1 discriminator 2 view .LVU1109
1218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3628              		.loc 1 1218 6 is_stmt 0 discriminator 2 view .LVU1110
 3629 0016 18B1     		cbz	r0, .L230
 3630              	.L224:
1233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3631              		.loc 1 1233 3 is_stmt 1 view .LVU1111
1233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3632              		.loc 1 1233 3 view .LVU1112
 3633 0018 0023     		movs	r3, #0
 3634 001a 84F85430 		strb	r3, [r4, #84]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 229


1233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3635              		.loc 1 1233 3 view .LVU1113
1235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3636              		.loc 1 1235 3 view .LVU1114
1236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3637              		.loc 1 1236 1 is_stmt 0 view .LVU1115
 3638 001e 10BD     		pop	{r4, pc}
 3639              	.LVL282:
 3640              	.L230:
1221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3641              		.loc 1 1221 5 is_stmt 1 view .LVU1116
1221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3642              		.loc 1 1221 22 is_stmt 0 view .LVU1117
 3643 0020 2046     		mov	r0, r4
 3644              	.LVL283:
1221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3645              		.loc 1 1221 22 view .LVU1118
 3646 0022 FFF7FEFF 		bl	ADC_Disable
 3647              	.LVL284:
1224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3648              		.loc 1 1224 5 is_stmt 1 view .LVU1119
1224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3649              		.loc 1 1224 8 is_stmt 0 view .LVU1120
 3650 0026 0028     		cmp	r0, #0
 3651 0028 F6D1     		bne	.L224
1227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 3652              		.loc 1 1227 7 is_stmt 1 view .LVU1121
 3653 002a A36D     		ldr	r3, [r4, #88]
 3654 002c 23F48073 		bic	r3, r3, #256
 3655 0030 23F00103 		bic	r3, r3, #1
 3656 0034 43F00103 		orr	r3, r3, #1
 3657 0038 A365     		str	r3, [r4, #88]
 3658 003a EDE7     		b	.L224
 3659              	.LVL285:
 3660              	.L225:
 3661              		.cfi_def_cfa_offset 0
 3662              		.cfi_restore 4
 3663              		.cfi_restore 14
1212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3664              		.loc 1 1212 3 is_stmt 0 view .LVU1122
 3665 003c 0220     		movs	r0, #2
 3666              	.LVL286:
1236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3667              		.loc 1 1236 1 view .LVU1123
 3668 003e 7047     		bx	lr
 3669              		.cfi_endproc
 3670              	.LFE856:
 3672              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 3673              		.align	1
 3674              		.global	HAL_ADC_Stop_IT
 3675              		.syntax unified
 3676              		.thumb
 3677              		.thumb_func
 3679              	HAL_ADC_Stop_IT:
 3680              	.LVL287:
 3681              	.LFB860:
1611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 230


 3682              		.loc 1 1611 1 is_stmt 1 view -0
 3683              		.cfi_startproc
 3684              		@ args = 0, pretend = 0, frame = 0
 3685              		@ frame_needed = 0, uses_anonymous_args = 0
1612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3686              		.loc 1 1612 3 view .LVU1125
1615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3687              		.loc 1 1615 3 view .LVU1126
1617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3688              		.loc 1 1617 3 view .LVU1127
1617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3689              		.loc 1 1617 3 view .LVU1128
 3690 0000 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3691 0004 012B     		cmp	r3, #1
 3692 0006 1ED0     		beq	.L234
1611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3693              		.loc 1 1611 1 is_stmt 0 discriminator 2 view .LVU1129
 3694 0008 10B5     		push	{r4, lr}
 3695              		.cfi_def_cfa_offset 8
 3696              		.cfi_offset 4, -8
 3697              		.cfi_offset 14, -4
 3698 000a 0446     		mov	r4, r0
1617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3699              		.loc 1 1617 3 is_stmt 1 discriminator 2 view .LVU1130
 3700 000c 0123     		movs	r3, #1
 3701 000e 80F85430 		strb	r3, [r0, #84]
1617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3702              		.loc 1 1617 3 discriminator 2 view .LVU1131
1620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3703              		.loc 1 1620 3 discriminator 2 view .LVU1132
1620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3704              		.loc 1 1620 20 is_stmt 0 discriminator 2 view .LVU1133
 3705 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3706              	.LVL288:
1623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3707              		.loc 1 1623 3 is_stmt 1 discriminator 2 view .LVU1134
1623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3708              		.loc 1 1623 6 is_stmt 0 discriminator 2 view .LVU1135
 3709 0016 18B1     		cbz	r0, .L239
 3710              	.L233:
1642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3711              		.loc 1 1642 3 is_stmt 1 view .LVU1136
1642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3712              		.loc 1 1642 3 view .LVU1137
 3713 0018 0023     		movs	r3, #0
 3714 001a 84F85430 		strb	r3, [r4, #84]
1642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3715              		.loc 1 1642 3 view .LVU1138
1644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3716              		.loc 1 1644 3 view .LVU1139
1645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3717              		.loc 1 1645 1 is_stmt 0 view .LVU1140
 3718 001e 10BD     		pop	{r4, pc}
 3719              	.LVL289:
 3720              	.L239:
1627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3721              		.loc 1 1627 5 is_stmt 1 view .LVU1141
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 231


 3722 0020 2268     		ldr	r2, [r4]
 3723 0022 5368     		ldr	r3, [r2, #4]
 3724 0024 23F01C03 		bic	r3, r3, #28
 3725 0028 5360     		str	r3, [r2, #4]
1630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3726              		.loc 1 1630 5 view .LVU1142
1630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3727              		.loc 1 1630 22 is_stmt 0 view .LVU1143
 3728 002a 2046     		mov	r0, r4
 3729              	.LVL290:
1630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3730              		.loc 1 1630 22 view .LVU1144
 3731 002c FFF7FEFF 		bl	ADC_Disable
 3732              	.LVL291:
1633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3733              		.loc 1 1633 5 is_stmt 1 view .LVU1145
1633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3734              		.loc 1 1633 8 is_stmt 0 view .LVU1146
 3735 0030 0028     		cmp	r0, #0
 3736 0032 F1D1     		bne	.L233
1636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 3737              		.loc 1 1636 7 is_stmt 1 view .LVU1147
 3738 0034 A36D     		ldr	r3, [r4, #88]
 3739 0036 23F48073 		bic	r3, r3, #256
 3740 003a 23F00103 		bic	r3, r3, #1
 3741 003e 43F00103 		orr	r3, r3, #1
 3742 0042 A365     		str	r3, [r4, #88]
 3743 0044 E8E7     		b	.L233
 3744              	.LVL292:
 3745              	.L234:
 3746              		.cfi_def_cfa_offset 0
 3747              		.cfi_restore 4
 3748              		.cfi_restore 14
1617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3749              		.loc 1 1617 3 is_stmt 0 view .LVU1148
 3750 0046 0220     		movs	r0, #2
 3751              	.LVL293:
1645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3752              		.loc 1 1645 1 view .LVU1149
 3753 0048 7047     		bx	lr
 3754              		.cfi_endproc
 3755              	.LFE860:
 3757              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 3758              		.align	1
 3759              		.global	HAL_ADC_Stop_DMA
 3760              		.syntax unified
 3761              		.thumb
 3762              		.thumb_func
 3764              	HAL_ADC_Stop_DMA:
 3765              	.LVL294:
 3766              	.LFB862:
1754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3767              		.loc 1 1754 1 is_stmt 1 view -0
 3768              		.cfi_startproc
 3769              		@ args = 0, pretend = 0, frame = 0
 3770              		@ frame_needed = 0, uses_anonymous_args = 0
1754:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 232


 3771              		.loc 1 1754 1 is_stmt 0 view .LVU1151
 3772 0000 38B5     		push	{r3, r4, r5, lr}
 3773              		.cfi_def_cfa_offset 16
 3774              		.cfi_offset 3, -16
 3775              		.cfi_offset 4, -12
 3776              		.cfi_offset 5, -8
 3777              		.cfi_offset 14, -4
1755:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3778              		.loc 1 1755 3 is_stmt 1 view .LVU1152
1758:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3779              		.loc 1 1758 3 view .LVU1153
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3780              		.loc 1 1760 3 view .LVU1154
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3781              		.loc 1 1760 3 view .LVU1155
 3782 0002 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3783 0006 012B     		cmp	r3, #1
 3784 0008 38D0     		beq	.L247
 3785 000a 0446     		mov	r4, r0
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3786              		.loc 1 1760 3 discriminator 2 view .LVU1156
 3787 000c 0123     		movs	r3, #1
 3788 000e 80F85430 		strb	r3, [r0, #84]
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3789              		.loc 1 1760 3 discriminator 2 view .LVU1157
1763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3790              		.loc 1 1763 3 discriminator 2 view .LVU1158
1763:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3791              		.loc 1 1763 20 is_stmt 0 discriminator 2 view .LVU1159
 3792 0012 FFF7FEFF 		bl	ADC_ConversionStop
 3793              	.LVL295:
1766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3794              		.loc 1 1766 3 is_stmt 1 discriminator 2 view .LVU1160
1766:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3795              		.loc 1 1766 6 is_stmt 0 discriminator 2 view .LVU1161
 3796 0016 0546     		mov	r5, r0
 3797 0018 E8B9     		cbnz	r0, .L242
1770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3798              		.loc 1 1770 5 is_stmt 1 view .LVU1162
1770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3799              		.loc 1 1770 13 is_stmt 0 view .LVU1163
 3800 001a 206D     		ldr	r0, [r4, #80]
 3801              	.LVL296:
1770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3802              		.loc 1 1770 25 view .LVU1164
 3803 001c 90F82530 		ldrb	r3, [r0, #37]	@ zero_extendqisi2
 3804 0020 DBB2     		uxtb	r3, r3
1770:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3805              		.loc 1 1770 8 view .LVU1165
 3806 0022 022B     		cmp	r3, #2
 3807 0024 1CD0     		beq	.L249
 3808              	.LVL297:
 3809              	.L243:
1783:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3810              		.loc 1 1783 5 is_stmt 1 view .LVU1166
 3811 0026 2268     		ldr	r2, [r4]
 3812 0028 5368     		ldr	r3, [r2, #4]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 233


 3813 002a 23F01003 		bic	r3, r3, #16
 3814 002e 5360     		str	r3, [r2, #4]
1788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3815              		.loc 1 1788 5 view .LVU1167
1788:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3816              		.loc 1 1788 8 is_stmt 0 view .LVU1168
 3817 0030 05BB     		cbnz	r5, .L244
1790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3818              		.loc 1 1790 7 is_stmt 1 view .LVU1169
1790:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3819              		.loc 1 1790 24 is_stmt 0 view .LVU1170
 3820 0032 2046     		mov	r0, r4
 3821 0034 FFF7FEFF 		bl	ADC_Disable
 3822              	.LVL298:
 3823 0038 0546     		mov	r5, r0
 3824              	.LVL299:
 3825              	.L245:
1798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3826              		.loc 1 1798 5 is_stmt 1 view .LVU1171
1798:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3827              		.loc 1 1798 8 is_stmt 0 view .LVU1172
 3828 003a 3DB9     		cbnz	r5, .L246
1801:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 3829              		.loc 1 1801 7 is_stmt 1 view .LVU1173
 3830 003c A36D     		ldr	r3, [r4, #88]
 3831 003e 23F48073 		bic	r3, r3, #256
 3832 0042 23F00103 		bic	r3, r3, #1
 3833 0046 43F00103 		orr	r3, r3, #1
 3834 004a A365     		str	r3, [r4, #88]
 3835              	.L246:
1807:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3836              		.loc 1 1807 5 view .LVU1174
 3837 004c 2268     		ldr	r2, [r4]
 3838 004e D368     		ldr	r3, [r2, #12]
 3839 0050 23F00103 		bic	r3, r3, #1
 3840 0054 D360     		str	r3, [r2, #12]
 3841              	.LVL300:
 3842              	.L242:
1810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3843              		.loc 1 1810 3 view .LVU1175
1810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3844              		.loc 1 1810 3 view .LVU1176
 3845 0056 0023     		movs	r3, #0
 3846 0058 84F85430 		strb	r3, [r4, #84]
1810:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3847              		.loc 1 1810 3 view .LVU1177
1812:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 3848              		.loc 1 1812 3 view .LVU1178
 3849              	.LVL301:
 3850              	.L241:
1813:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3851              		.loc 1 1813 1 is_stmt 0 view .LVU1179
 3852 005c 2846     		mov	r0, r5
 3853 005e 38BD     		pop	{r3, r4, r5, pc}
 3854              	.LVL302:
 3855              	.L249:
1772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 234


 3856              		.loc 1 1772 7 is_stmt 1 view .LVU1180
1772:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3857              		.loc 1 1772 24 is_stmt 0 view .LVU1181
 3858 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 3859              	.LVL303:
1775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3860              		.loc 1 1775 7 is_stmt 1 view .LVU1182
1775:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3861              		.loc 1 1775 10 is_stmt 0 view .LVU1183
 3862 0064 0546     		mov	r5, r0
 3863 0066 0028     		cmp	r0, #0
 3864 0068 DDD0     		beq	.L243
1778:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 3865              		.loc 1 1778 9 is_stmt 1 view .LVU1184
 3866 006a A36D     		ldr	r3, [r4, #88]
 3867 006c 43F04003 		orr	r3, r3, #64
 3868 0070 A365     		str	r3, [r4, #88]
 3869 0072 D8E7     		b	.L243
 3870              	.LVL304:
 3871              	.L244:
1794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3872              		.loc 1 1794 7 view .LVU1185
1794:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     }
 3873              		.loc 1 1794 13 is_stmt 0 view .LVU1186
 3874 0074 2046     		mov	r0, r4
 3875 0076 FFF7FEFF 		bl	ADC_Disable
 3876              	.LVL305:
 3877 007a DEE7     		b	.L245
 3878              	.LVL306:
 3879              	.L247:
1760:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3880              		.loc 1 1760 3 view .LVU1187
 3881 007c 0225     		movs	r5, #2
 3882 007e EDE7     		b	.L241
 3883              		.cfi_endproc
 3884              	.LFE862:
 3886              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 3887              		.align	1
 3888              		.global	HAL_ADC_AnalogWDGConfig
 3889              		.syntax unified
 3890              		.thumb
 3891              		.thumb_func
 3893              	HAL_ADC_AnalogWDGConfig:
 3894              	.LVL307:
 3895              	.LFB870:
2368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3896              		.loc 1 2368 1 is_stmt 1 view -0
 3897              		.cfi_startproc
 3898              		@ args = 0, pretend = 0, frame = 0
 3899              		@ frame_needed = 0, uses_anonymous_args = 0
2368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3900              		.loc 1 2368 1 is_stmt 0 view .LVU1189
 3901 0000 70B5     		push	{r4, r5, r6, lr}
 3902              		.cfi_def_cfa_offset 16
 3903              		.cfi_offset 4, -16
 3904              		.cfi_offset 5, -12
 3905              		.cfi_offset 6, -8
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 235


 3906              		.cfi_offset 14, -4
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 3907              		.loc 1 2369 3 is_stmt 1 view .LVU1190
 3908              	.LVL308:
2370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_low_threshold_shifted;
 3909              		.loc 1 2370 3 view .LVU1191
2371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t backup_setting_adc_enable_state = 0UL;
 3910              		.loc 1 2371 3 view .LVU1192
2372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3911              		.loc 1 2372 3 view .LVU1193
2375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(pAnalogWDGConfig->WatchdogNumber));
 3912              		.loc 1 2375 3 view .LVU1194
2376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(pAnalogWDGConfig->WatchdogMode));
 3913              		.loc 1 2376 3 view .LVU1195
2377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(pAnalogWDGConfig->ITMode));
 3914              		.loc 1 2377 3 view .LVU1196
2378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3915              		.loc 1 2378 3 view .LVU1197
2380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3916              		.loc 1 2380 3 view .LVU1198
2382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3917              		.loc 1 2382 5 view .LVU1199
2386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3918              		.loc 1 2386 3 view .LVU1200
2397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), pAnalogWDGConfig->LowThreshold));
 3919              		.loc 1 2397 5 view .LVU1201
2398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 3920              		.loc 1 2398 5 view .LVU1202
2401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3921              		.loc 1 2401 3 view .LVU1203
2401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3922              		.loc 1 2401 3 view .LVU1204
 3923 0002 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
 3924 0006 012B     		cmp	r3, #1
 3925 0008 00F0F580 		beq	.L275
 3926 000c 0446     		mov	r4, r0
 3927 000e 0D46     		mov	r5, r1
2401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3928              		.loc 1 2401 3 discriminator 2 view .LVU1205
 3929 0010 0123     		movs	r3, #1
 3930 0012 80F85430 		strb	r3, [r0, #84]
2401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 3931              		.loc 1 2401 3 discriminator 2 view .LVU1206
2407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3932              		.loc 1 2407 3 discriminator 2 view .LVU1207
2407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 3933              		.loc 1 2407 7 is_stmt 0 discriminator 2 view .LVU1208
 3934 0016 0068     		ldr	r0, [r0]
 3935              	.LVL309:
 3936              	.LBB260:
 3937              	.LBI260:
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3938              		.loc 2 4435 26 is_stmt 1 discriminator 2 view .LVU1209
 3939              	.LBB261:
 3940              		.loc 2 4437 3 discriminator 2 view .LVU1210
 3941              		.loc 2 4437 12 is_stmt 0 discriminator 2 view .LVU1211
 3942 0018 8368     		ldr	r3, [r0, #8]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 236


 3943              		.loc 2 4437 74 discriminator 2 view .LVU1212
 3944 001a 13F0040F 		tst	r3, #4
 3945 001e 40F0CD80 		bne	.L276
 3946              	.LVL310:
 3947              		.loc 2 4437 74 discriminator 2 view .LVU1213
 3948              	.LBE261:
 3949              	.LBE260:
2410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3950              		.loc 1 2410 5 is_stmt 1 view .LVU1214
2410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3951              		.loc 1 2410 25 is_stmt 0 view .LVU1215
 3952 0022 0968     		ldr	r1, [r1]
 3953              	.LVL311:
2410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     {
 3954              		.loc 1 2410 8 view .LVU1216
 3955 0024 754B     		ldr	r3, .L289
 3956 0026 9942     		cmp	r1, r3
 3957 0028 1AD0     		beq	.L281
2470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3958              		.loc 1 2470 7 is_stmt 1 view .LVU1217
2470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3959              		.loc 1 2470 31 is_stmt 0 view .LVU1218
 3960 002a 6B68     		ldr	r3, [r5, #4]
2470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3961              		.loc 1 2470 7 view .LVU1219
 3962 002c B3F5000F 		cmp	r3, #8388608
 3963 0030 00F08780 		beq	.L260
 3964 0034 B3F5400F 		cmp	r3, #12582912
 3965 0038 40F09C80 		bne	.L261
2475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 3966              		.loc 1 2475 11 is_stmt 1 view .LVU1220
2475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           {
 3967              		.loc 1 2475 14 is_stmt 0 view .LVU1221
 3968 003c 704B     		ldr	r3, .L289+4
 3969 003e 9942     		cmp	r1, r3
 3970 0040 5DD0     		beq	.L282
2481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 3971              		.loc 1 2481 13 is_stmt 1 view .LVU1222
 3972 0042 AB68     		ldr	r3, [r5, #8]
 3973 0044 C3F31102 		ubfx	r2, r3, #0, #18
 3974 0048 002A     		cmp	r2, #0
 3975 004a 70D1     		bne	.L267
2481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 3976              		.loc 1 2481 13 is_stmt 0 discriminator 1 view .LVU1223
 3977 004c C3F38463 		ubfx	r3, r3, #26, #5
 3978 0050 0122     		movs	r2, #1
 3979 0052 9A40     		lsls	r2, r2, r3
 3980              	.L268:
2481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 3981              		.loc 1 2481 13 discriminator 4 view .LVU1224
 3982 0054 D0F8A430 		ldr	r3, [r0, #164]
 3983 0058 1343     		orrs	r3, r3, r2
 3984 005a C0F8A430 		str	r3, [r0, #164]
 3985 005e 73E0     		b	.L266
 3986              	.L281:
2414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 3987              		.loc 1 2414 7 is_stmt 1 view .LVU1225
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 237


 3988              	.LVL312:
 3989              	.LBB262:
 3990              	.LBI262:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 3991              		.loc 2 4308 26 view .LVU1226
 3992              	.LBB263:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3993              		.loc 2 4310 3 view .LVU1227
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3994              		.loc 2 4310 12 is_stmt 0 view .LVU1228
 3995 0060 8268     		ldr	r2, [r0, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 3996              		.loc 2 4310 68 view .LVU1229
 3997 0062 12F00102 		ands	r2, r2, #1
 3998 0066 29D0     		beq	.L277
 3999              	.LVL313:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4000              		.loc 2 4310 68 view .LVU1230
 4001              	.LBE263:
 4002              	.LBE262:
2416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4003              		.loc 1 2416 9 is_stmt 1 view .LVU1231
2417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 4004              		.loc 1 2417 9 view .LVU1232
2417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 4005              		.loc 1 2417 26 is_stmt 0 view .LVU1233
 4006 0068 2046     		mov	r0, r4
 4007 006a FFF7FEFF 		bl	ADC_Disable
 4008              	.LVL314:
 4009 006e 0646     		mov	r6, r0
 4010              	.LVL315:
2416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         tmp_hal_status = ADC_Disable(hadc);
 4011              		.loc 1 2416 41 view .LVU1234
 4012 0070 0122     		movs	r2, #1
 4013              	.LVL316:
 4014              	.L254:
2423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4015              		.loc 1 2423 7 is_stmt 1 view .LVU1235
2423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4016              		.loc 1 2423 31 is_stmt 0 view .LVU1236
 4017 0072 6B68     		ldr	r3, [r5, #4]
2423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4018              		.loc 1 2423 7 view .LVU1237
 4019 0074 B3F5000F 		cmp	r3, #8388608
 4020 0078 22D0     		beq	.L255
 4021 007a B3F5400F 		cmp	r3, #12582912
 4022 007e 29D1     		bne	.L256
2426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                           __LL_ADC_ANALOGWD_CHANNEL_GROUP(pAnalogWDGConfig->Channel
 4023              		.loc 1 2426 11 is_stmt 1 view .LVU1238
 4024 0080 2068     		ldr	r0, [r4]
2427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                                                           LL_ADC_GROUP_REGULAR));
 4025              		.loc 1 2427 43 is_stmt 0 view .LVU1239
 4026 0082 A968     		ldr	r1, [r5, #8]
 4027              	.LVL317:
 4028              	.LBB264:
 4029              	.LBI264:
3664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 238


 4030              		.loc 2 3664 22 is_stmt 1 view .LVU1240
 4031              	.LBB265:
3670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4032              		.loc 2 3670 3 view .LVU1241
3672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 4033              		.loc 2 3672 3 view .LVU1242
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 4034              		.loc 2 3674 5 view .LVU1243
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4035              		.loc 2 3682 3 view .LVU1244
 4036 0084 C368     		ldr	r3, [r0, #12]
 4037 0086 23F0F943 		bic	r3, r3, #2088763392
 4038 008a 23F48003 		bic	r3, r3, #4194304
 4039 008e 01F0F841 		and	r1, r1, #2080374784
 4040              	.LVL318:
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4041              		.loc 2 3682 3 is_stmt 0 view .LVU1245
 4042 0092 41F44001 		orr	r1, r1, #12582912
 4043 0096 0B43     		orrs	r3, r3, r1
 4044 0098 C360     		str	r3, [r0, #12]
 4045              	.LVL319:
 4046              	.L257:
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4047              		.loc 2 3682 3 view .LVU1246
 4048              	.LBE265:
 4049              	.LBE264:
2440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4050              		.loc 1 2440 7 is_stmt 1 view .LVU1247
2440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4051              		.loc 1 2440 10 is_stmt 0 view .LVU1248
 4052 009a 1ABB     		cbnz	r2, .L283
 4053              	.LVL320:
 4054              	.L258:
2449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4055              		.loc 1 2449 7 is_stmt 1 view .LVU1249
 4056 009c A36D     		ldr	r3, [r4, #88]
 4057 009e 23F48033 		bic	r3, r3, #65536
 4058 00a2 A365     		str	r3, [r4, #88]
2455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4059              		.loc 1 2455 7 view .LVU1250
 4060 00a4 2368     		ldr	r3, [r4]
 4061              	.LVL321:
 4062              	.LBB266:
 4063              	.LBI266:
4438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
4442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
4443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
4445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
4447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
4449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 239


4451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
4454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         all oversampling increased data width (for devices
4455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with feature oversampling).
4456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
4457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
4459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
4461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 12 bits.
4468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
4472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
4476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 10 bits.
4483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
4487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
4489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
4491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 8 bits.
4498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
4502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
4504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
4506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 240


4508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC resolution 6 bits.
4513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         can increase data width, function for extended range
4515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
4517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
4519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
4521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
4530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC ready.
4535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
4539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
4543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
4545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
4549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer
4550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
4551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
4552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
4553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
4554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Functions requiring wait for CCRDY flag are:
4555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
4556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks()
4557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChannels()
4558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChAdd()
4559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerChRem()
4560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerScanDirection()
4561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerConfigurable()
4562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
4563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
4564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         has been changed.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 241


4565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
4566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(ADC_TypeDef *ADCx)
4570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
4572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
4576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
4577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
4581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
4583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
4587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
4588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
4592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
4594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
4598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
4599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
4603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
4605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
4609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
4610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
4614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
4616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
4620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
4621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 242


4622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
4625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
4627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
4631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
4632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
4636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
4638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
4642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
4643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
4647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
4649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
4653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
4654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
4658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
4660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC ready.
4664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
4668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
4672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
4674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
4678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 243


4679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
4683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
4685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
4689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
4690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
4694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
4696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
4700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
4701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
4705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
4707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
4711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
4712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
4716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
4718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
4722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
4723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
4727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
4729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
4733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
4734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 244


4736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 4064              		.loc 2 4737 22 view .LVU1251
 4065              	.LBB267:
4738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 4066              		.loc 2 4739 3 view .LVU1252
 4067 00a6 8022     		movs	r2, #128
 4068 00a8 1A60     		str	r2, [r3]
 4069              	.LVL322:
 4070              		.loc 2 4739 3 is_stmt 0 view .LVU1253
 4071              	.LBE267:
 4072              	.LBE266:
2458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4073              		.loc 1 2458 7 is_stmt 1 view .LVU1254
2458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4074              		.loc 1 2458 27 is_stmt 0 view .LVU1255
 4075 00aa 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
2458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4076              		.loc 1 2458 10 view .LVU1256
 4077 00ac 012B     		cmp	r3, #1
 4078 00ae 20D0     		beq	.L284
2464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 4079              		.loc 1 2464 9 is_stmt 1 view .LVU1257
 4080 00b0 2268     		ldr	r2, [r4]
 4081              	.LVL323:
 4082              	.LBB268:
 4083              	.LBI268:
4740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
4744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
4745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
4749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
4751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
4755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
4756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
4760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
4762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
4766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
4767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 245


4769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
4771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
4773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
4780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC ready.
4785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
4786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
4790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
4792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
4796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_EnableIT_CCRDY
4797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
4801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
4803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
4807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
4808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
4812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
4814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
4818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
4819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
4823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
4825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 246


4826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
4829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
4830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
4834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
4836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
4840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
4841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
4845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
4847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
4851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
4852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
4856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
4858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
4862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
4863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
4867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
4869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
4873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
4874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
4878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
4880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 247


4883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
4884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
4885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
4889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
4891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
4895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
4896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
4900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
4902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
4906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      CCRDYIE        LL_ADC_DisableIT_CCRDY
4907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval State of bit (1 or 0).
4909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
4911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
4913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
4917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
4918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
4922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
4924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
4928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
4929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
4933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
4935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
4939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 248


4940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
4944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
4946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
4950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
4951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
4955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
4957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
4961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
4962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 4084              		.loc 2 4965 22 view .LVU1258
 4085              	.LBB269:
4966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 4086              		.loc 2 4967 3 view .LVU1259
 4087 00b2 5368     		ldr	r3, [r2, #4]
 4088 00b4 23F08003 		bic	r3, r3, #128
 4089 00b8 5360     		str	r3, [r2, #4]
4968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4090              		.loc 2 4968 1 is_stmt 0 view .LVU1260
 4091 00ba 80E0     		b	.L252
 4092              	.LVL324:
 4093              	.L277:
 4094              		.loc 2 4968 1 view .LVU1261
 4095              	.LBE269:
 4096              	.LBE268:
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4097              		.loc 1 2369 21 view .LVU1262
 4098 00bc 0026     		movs	r6, #0
 4099 00be D8E7     		b	.L254
 4100              	.LVL325:
 4101              	.L255:
2432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 4102              		.loc 1 2432 11 is_stmt 1 view .LVU1263
 4103 00c0 2168     		ldr	r1, [r4]
 4104              	.LVL326:
 4105              	.LBB270:
 4106              	.LBI270:
3664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4107              		.loc 2 3664 22 view .LVU1264
 4108              	.LBB271:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 249


3670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4109              		.loc 2 3670 3 view .LVU1265
3672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 4110              		.loc 2 3672 3 view .LVU1266
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 4111              		.loc 2 3674 5 view .LVU1267
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4112              		.loc 2 3682 3 view .LVU1268
 4113 00c2 CB68     		ldr	r3, [r1, #12]
 4114 00c4 23F0F943 		bic	r3, r3, #2088763392
 4115 00c8 23F48003 		bic	r3, r3, #4194304
 4116 00cc 43F40003 		orr	r3, r3, #8388608
 4117 00d0 CB60     		str	r3, [r1, #12]
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4118              		.loc 2 3685 1 is_stmt 0 view .LVU1269
 4119 00d2 E2E7     		b	.L257
 4120              	.LVL327:
 4121              	.L256:
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4122              		.loc 2 3685 1 view .LVU1270
 4123              	.LBE271:
 4124              	.LBE270:
2436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 4125              		.loc 1 2436 11 is_stmt 1 view .LVU1271
 4126 00d4 2168     		ldr	r1, [r4]
 4127              	.LVL328:
 4128              	.LBB272:
 4129              	.LBI272:
3664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4130              		.loc 2 3664 22 view .LVU1272
 4131              	.LBB273:
3670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4132              		.loc 2 3670 3 view .LVU1273
3672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
 4133              		.loc 2 3672 3 view .LVU1274
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
 4134              		.loc 2 3674 5 view .LVU1275
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 4135              		.loc 2 3682 3 view .LVU1276
 4136 00d6 CB68     		ldr	r3, [r1, #12]
 4137 00d8 23F0F943 		bic	r3, r3, #2088763392
 4138 00dc 23F48003 		bic	r3, r3, #4194304
 4139 00e0 CB60     		str	r3, [r1, #12]
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4140              		.loc 2 3685 1 is_stmt 0 view .LVU1277
 4141 00e2 DAE7     		b	.L257
 4142              	.LVL329:
 4143              	.L283:
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4144              		.loc 2 3685 1 view .LVU1278
 4145              	.LBE273:
 4146              	.LBE272:
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4147              		.loc 1 2442 9 is_stmt 1 view .LVU1279
2442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4148              		.loc 1 2442 12 is_stmt 0 view .LVU1280
 4149 00e4 002E     		cmp	r6, #0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 250


 4150 00e6 D9D1     		bne	.L258
2444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4151              		.loc 1 2444 11 is_stmt 1 view .LVU1281
2444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4152              		.loc 1 2444 28 is_stmt 0 view .LVU1282
 4153 00e8 2046     		mov	r0, r4
 4154 00ea FFF7FEFF 		bl	ADC_Enable
 4155              	.LVL330:
2444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4156              		.loc 1 2444 28 view .LVU1283
 4157 00ee 0646     		mov	r6, r0
 4158              	.LVL331:
2444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4159              		.loc 1 2444 28 view .LVU1284
 4160 00f0 D4E7     		b	.L258
 4161              	.L284:
2460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 4162              		.loc 1 2460 9 is_stmt 1 view .LVU1285
 4163 00f2 2268     		ldr	r2, [r4]
 4164              	.LVL332:
 4165              	.LBB274:
 4166              	.LBI274:
4855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4167              		.loc 2 4855 22 view .LVU1286
 4168              	.LBB275:
4857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4169              		.loc 2 4857 3 view .LVU1287
 4170 00f4 5368     		ldr	r3, [r2, #4]
 4171 00f6 43F08003 		orr	r3, r3, #128
 4172 00fa 5360     		str	r3, [r2, #4]
4858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4173              		.loc 2 4858 1 is_stmt 0 view .LVU1288
 4174 00fc 5FE0     		b	.L252
 4175              	.LVL333:
 4176              	.L282:
4858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4177              		.loc 2 4858 1 view .LVU1289
 4178              	.LBE275:
 4179              	.LBE274:
2477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 4180              		.loc 1 2477 13 is_stmt 1 view .LVU1290
 4181 00fe AB68     		ldr	r3, [r5, #8]
 4182 0100 C3F31102 		ubfx	r2, r3, #0, #18
 4183 0104 4AB9     		cbnz	r2, .L263
2477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 4184              		.loc 1 2477 13 is_stmt 0 discriminator 1 view .LVU1291
 4185 0106 C3F38463 		ubfx	r3, r3, #26, #5
 4186 010a 0122     		movs	r2, #1
 4187 010c 9A40     		lsls	r2, r2, r3
 4188              	.L264:
2477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 4189              		.loc 1 2477 13 discriminator 4 view .LVU1292
 4190 010e D0F8A030 		ldr	r3, [r0, #160]
 4191 0112 1343     		orrs	r3, r3, r2
 4192 0114 C0F8A030 		str	r3, [r0, #160]
 4193 0118 16E0     		b	.L266
 4194              	.L263:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 251


 4195              	.LVL334:
 4196              	.LBB276:
 4197              	.LBI276:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4198              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1293
 4199              	.LBB277:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4200              		.loc 3 1050 3 discriminator 2 view .LVU1294
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4201              		.loc 3 1055 4 discriminator 2 view .LVU1295
 4202              		.syntax unified
 4203              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4204 011a 93FAA3F3 		rbit r3, r3
 4205              	@ 0 "" 2
 4206              	.LVL335:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4207              		.loc 3 1068 3 discriminator 2 view .LVU1296
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4208              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1297
 4209              		.thumb
 4210              		.syntax unified
 4211              	.LBE277:
 4212              	.LBE276:
 4213              	.LBB278:
 4214              	.LBI278:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4215              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1298
 4216              	.LBB279:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4217              		.loc 3 1089 3 discriminator 2 view .LVU1299
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4218              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1300
 4219 011e 23B1     		cbz	r3, .L278
 4220              		.loc 3 1093 3 is_stmt 1 view .LVU1301
 4221              		.loc 3 1093 10 is_stmt 0 view .LVU1302
 4222 0120 B3FA83F3 		clz	r3, r3
 4223              	.LVL336:
 4224              	.L265:
 4225              		.loc 3 1093 10 view .LVU1303
 4226              	.LBE279:
 4227              	.LBE278:
2477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 4228              		.loc 1 2477 13 view .LVU1304
 4229 0124 0122     		movs	r2, #1
 4230 0126 9A40     		lsls	r2, r2, r3
 4231 0128 F1E7     		b	.L264
 4232              	.LVL337:
 4233              	.L278:
 4234              	.LBB281:
 4235              	.LBB280:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4236              		.loc 3 1091 12 view .LVU1305
 4237 012a 2023     		movs	r3, #32
 4238              	.LVL338:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4239              		.loc 3 1091 12 view .LVU1306
 4240 012c FAE7     		b	.L265
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 252


 4241              	.LVL339:
 4242              	.L267:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4243              		.loc 3 1091 12 view .LVU1307
 4244              	.LBE280:
 4245              	.LBE281:
 4246              	.LBB282:
 4247              	.LBI282:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4248              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU1308
 4249              	.LBB283:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 4250              		.loc 3 1050 3 discriminator 2 view .LVU1309
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 4251              		.loc 3 1055 4 discriminator 2 view .LVU1310
 4252              		.syntax unified
 4253              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4254 012e 93FAA3F3 		rbit r3, r3
 4255              	@ 0 "" 2
 4256              	.LVL340:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4257              		.loc 3 1068 3 discriminator 2 view .LVU1311
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4258              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU1312
 4259              		.thumb
 4260              		.syntax unified
 4261              	.LBE283:
 4262              	.LBE282:
 4263              	.LBB284:
 4264              	.LBI284:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 4265              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU1313
 4266              	.LBB285:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4267              		.loc 3 1089 3 discriminator 2 view .LVU1314
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 4268              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU1315
 4269 0132 23B1     		cbz	r3, .L279
 4270              		.loc 3 1093 3 is_stmt 1 view .LVU1316
 4271              		.loc 3 1093 10 is_stmt 0 view .LVU1317
 4272 0134 B3FA83F3 		clz	r3, r3
 4273              	.LVL341:
 4274              	.L269:
 4275              		.loc 3 1093 10 view .LVU1318
 4276              	.LBE285:
 4277              	.LBE284:
2481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           }
 4278              		.loc 1 2481 13 view .LVU1319
 4279 0138 0122     		movs	r2, #1
 4280 013a 9A40     		lsls	r2, r2, r3
 4281 013c 8AE7     		b	.L268
 4282              	.LVL342:
 4283              	.L279:
 4284              	.LBB287:
 4285              	.LBB286:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4286              		.loc 3 1091 12 view .LVU1320
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 253


 4287 013e 2023     		movs	r3, #32
 4288              	.LVL343:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4289              		.loc 3 1091 12 view .LVU1321
 4290 0140 FAE7     		b	.L269
 4291              	.LVL344:
 4292              	.L260:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 4293              		.loc 3 1091 12 view .LVU1322
 4294              	.LBE286:
 4295              	.LBE287:
2486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                           pAnalogWDGConfig->WatchdogNumber, 
 4296              		.loc 1 2486 11 is_stmt 1 view .LVU1323
 4297 0142 304A     		ldr	r2, .L289+8
 4298 0144 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 4299              	.LVL345:
2489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4300              		.loc 1 2489 11 view .LVU1324
 4301              	.L266:
2496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4302              		.loc 1 2496 7 view .LVU1325
2496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4303              		.loc 1 2496 27 is_stmt 0 view .LVU1326
 4304 0148 2A68     		ldr	r2, [r5]
2496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       {
 4305              		.loc 1 2496 10 view .LVU1327
 4306 014a 2D4B     		ldr	r3, .L289+4
 4307 014c 9A42     		cmp	r2, r3
 4308 014e 15D0     		beq	.L285
2521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4309              		.loc 1 2521 9 is_stmt 1 view .LVU1328
 4310 0150 A36D     		ldr	r3, [r4, #88]
 4311 0152 23F48023 		bic	r3, r3, #262144
 4312 0156 A365     		str	r3, [r4, #88]
2527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4313              		.loc 1 2527 9 view .LVU1329
 4314 0158 2368     		ldr	r3, [r4]
 4315              	.LVL346:
 4316              	.LBB288:
 4317              	.LBI288:
4759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4318              		.loc 2 4759 22 view .LVU1330
 4319              	.LBB289:
4761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4320              		.loc 2 4761 3 view .LVU1331
 4321 015a 4FF40072 		mov	r2, #512
 4322 015e 1A60     		str	r2, [r3]
 4323              	.LVL347:
4761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4324              		.loc 2 4761 3 is_stmt 0 view .LVU1332
 4325              	.LBE289:
 4326              	.LBE288:
2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4327              		.loc 1 2530 9 is_stmt 1 view .LVU1333
2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4328              		.loc 1 2530 29 is_stmt 0 view .LVU1334
 4329 0160 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 254


2530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4330              		.loc 1 2530 12 view .LVU1335
 4331 0162 012B     		cmp	r3, #1
 4332 0164 23D0     		beq	.L286
2536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4333              		.loc 1 2536 11 is_stmt 1 view .LVU1336
 4334 0166 2268     		ldr	r2, [r4]
 4335              	.LVL348:
 4336              	.LBB290:
 4337              	.LBI290:
4969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
4972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
4973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
4977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
4979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
4983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
4984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 4338              		.loc 2 4987 22 view .LVU1337
 4339              	.LBB291:
4988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 4340              		.loc 2 4989 3 view .LVU1338
 4341 0168 5368     		ldr	r3, [r2, #4]
 4342 016a 23F40073 		bic	r3, r3, #512
 4343 016e 5360     		str	r3, [r2, #4]
 4344              	.LBE291:
 4345              	.LBE290:
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4346              		.loc 1 2369 21 is_stmt 0 view .LVU1339
 4347 0170 0026     		movs	r6, #0
 4348              	.LBB293:
 4349              	.LBB292:
4990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4350              		.loc 2 4990 1 view .LVU1340
 4351 0172 24E0     		b	.L252
 4352              	.LVL349:
 4353              	.L261:
 4354              		.loc 2 4990 1 view .LVU1341
 4355              	.LBE292:
 4356              	.LBE293:
2492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****           break;
 4357              		.loc 1 2492 11 is_stmt 1 view .LVU1342
 4358 0174 0022     		movs	r2, #0
 4359 0176 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 4360              	.LVL350:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 255


2493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****       }
 4361              		.loc 1 2493 11 view .LVU1343
 4362 017a E5E7     		b	.L266
 4363              	.L285:
2499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4364              		.loc 1 2499 9 view .LVU1344
 4365 017c A36D     		ldr	r3, [r4, #88]
 4366 017e 23F40033 		bic	r3, r3, #131072
 4367 0182 A365     		str	r3, [r4, #88]
2505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4368              		.loc 1 2505 9 view .LVU1345
 4369 0184 2368     		ldr	r3, [r4]
 4370              	.LVL351:
 4371              	.LBB294:
 4372              	.LBI294:
4748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4373              		.loc 2 4748 22 view .LVU1346
 4374              	.LBB295:
4750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4375              		.loc 2 4750 3 view .LVU1347
 4376 0186 4FF48072 		mov	r2, #256
 4377 018a 1A60     		str	r2, [r3]
 4378              	.LVL352:
4750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4379              		.loc 2 4750 3 is_stmt 0 view .LVU1348
 4380              	.LBE295:
 4381              	.LBE294:
2508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4382              		.loc 1 2508 9 is_stmt 1 view .LVU1349
2508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4383              		.loc 1 2508 29 is_stmt 0 view .LVU1350
 4384 018c 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
2508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         {
 4385              		.loc 1 2508 12 view .LVU1351
 4386 018e 012B     		cmp	r3, #1
 4387 0190 06D0     		beq	.L287
2514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4388              		.loc 1 2514 11 is_stmt 1 view .LVU1352
 4389 0192 2268     		ldr	r2, [r4]
 4390              	.LVL353:
 4391              	.LBB296:
 4392              	.LBI296:
4976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4393              		.loc 2 4976 22 view .LVU1353
 4394              	.LBB297:
4978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4395              		.loc 2 4978 3 view .LVU1354
 4396 0194 5368     		ldr	r3, [r2, #4]
 4397 0196 23F48073 		bic	r3, r3, #256
 4398 019a 5360     		str	r3, [r2, #4]
 4399              	.LBE297:
 4400              	.LBE296:
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4401              		.loc 1 2369 21 is_stmt 0 view .LVU1355
 4402 019c 0026     		movs	r6, #0
 4403              	.LBB299:
 4404              	.LBB298:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 256


4979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4405              		.loc 2 4979 1 view .LVU1356
 4406 019e 0EE0     		b	.L252
 4407              	.LVL354:
 4408              	.L287:
4979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4409              		.loc 2 4979 1 view .LVU1357
 4410              	.LBE298:
 4411              	.LBE299:
2510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4412              		.loc 1 2510 11 is_stmt 1 view .LVU1358
 4413 01a0 2268     		ldr	r2, [r4]
 4414              	.LVL355:
 4415              	.LBB300:
 4416              	.LBI300:
4866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4417              		.loc 2 4866 22 view .LVU1359
 4418              	.LBB301:
4868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4419              		.loc 2 4868 3 view .LVU1360
 4420 01a2 5368     		ldr	r3, [r2, #4]
 4421 01a4 43F48073 		orr	r3, r3, #256
 4422 01a8 5360     		str	r3, [r2, #4]
 4423              	.LBE301:
 4424              	.LBE300:
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4425              		.loc 1 2369 21 is_stmt 0 view .LVU1361
 4426 01aa 0026     		movs	r6, #0
 4427              	.LBB303:
 4428              	.LBB302:
4869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4429              		.loc 2 4869 1 view .LVU1362
 4430 01ac 07E0     		b	.L252
 4431              	.LVL356:
 4432              	.L286:
4869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4433              		.loc 2 4869 1 view .LVU1363
 4434              	.LBE302:
 4435              	.LBE303:
2532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****         }
 4436              		.loc 1 2532 11 is_stmt 1 view .LVU1364
 4437 01ae 2268     		ldr	r2, [r4]
 4438              	.LVL357:
 4439              	.LBB304:
 4440              	.LBI304:
4877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 4441              		.loc 2 4877 22 view .LVU1365
 4442              	.LBB305:
4879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 4443              		.loc 2 4879 3 view .LVU1366
 4444 01b0 5368     		ldr	r3, [r2, #4]
 4445 01b2 43F40073 		orr	r3, r3, #512
 4446 01b6 5360     		str	r3, [r2, #4]
 4447              	.LBE305:
 4448              	.LBE304:
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4449              		.loc 1 2369 21 is_stmt 0 view .LVU1367
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 257


 4450 01b8 0026     		movs	r6, #0
 4451              	.LBB307:
 4452              	.LBB306:
4880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4453              		.loc 2 4880 1 view .LVU1368
 4454 01ba 00E0     		b	.L252
 4455              	.LVL358:
 4456              	.L276:
4880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 4457              		.loc 2 4880 1 view .LVU1369
 4458              	.LBE306:
 4459              	.LBE307:
2369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   uint32_t tmp_awd_high_threshold_shifted;
 4460              		.loc 1 2369 21 view .LVU1370
 4461 01bc 0026     		movs	r6, #0
 4462              	.LVL359:
 4463              	.L252:
2544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4464              		.loc 1 2544 3 is_stmt 1 view .LVU1371
2544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4465              		.loc 1 2544 23 is_stmt 0 view .LVU1372
 4466 01be 2968     		ldr	r1, [r5]
2544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   {
 4467              		.loc 1 2544 6 view .LVU1373
 4468 01c0 0E4B     		ldr	r3, .L289
 4469 01c2 9942     		cmp	r1, r3
 4470 01c4 09D0     		beq	.L288
2558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
 4471              		.loc 1 2558 5 is_stmt 1 view .LVU1374
2558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = pAnalogWDGConfig->LowThreshold;
 4472              		.loc 1 2558 36 is_stmt 0 view .LVU1375
 4473 01c6 2A69     		ldr	r2, [r5, #16]
 4474              	.LVL360:
2559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4475              		.loc 1 2559 5 is_stmt 1 view .LVU1376
2559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4476              		.loc 1 2559 36 is_stmt 0 view .LVU1377
 4477 01c8 6B69     		ldr	r3, [r5, #20]
 4478              	.LVL361:
 4479              	.L274:
2563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****                                   tmp_awd_low_threshold_shifted);
 4480              		.loc 1 2563 3 is_stmt 1 view .LVU1378
 4481 01ca 2068     		ldr	r0, [r4]
 4482 01cc FFF7FEFF 		bl	LL_ADC_ConfigAnalogWDThresholds
 4483              	.LVL362:
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4484              		.loc 1 2566 3 view .LVU1379
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4485              		.loc 1 2566 3 view .LVU1380
 4486 01d0 0023     		movs	r3, #0
 4487 01d2 84F85430 		strb	r3, [r4, #84]
2566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4488              		.loc 1 2566 3 view .LVU1381
2568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** }
 4489              		.loc 1 2568 3 view .LVU1382
 4490              	.LVL363:
 4491              	.L251:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 258


2569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4492              		.loc 1 2569 1 is_stmt 0 view .LVU1383
 4493 01d6 3046     		mov	r0, r6
 4494 01d8 70BD     		pop	{r4, r5, r6, pc}
 4495              	.LVL364:
 4496              	.L288:
2549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4497              		.loc 1 2549 5 is_stmt 1 view .LVU1384
2549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4498              		.loc 1 2549 38 is_stmt 0 view .LVU1385
 4499 01da 2A69     		ldr	r2, [r5, #16]
 4500 01dc 2068     		ldr	r0, [r4]
 4501 01de C368     		ldr	r3, [r0, #12]
 4502 01e0 C3F3C103 		ubfx	r3, r3, #3, #2
 4503 01e4 5B00     		lsls	r3, r3, #1
2549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****     tmp_awd_low_threshold_shifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, pAnalogWDGConfig->Low
 4504              		.loc 1 2549 36 view .LVU1386
 4505 01e6 9A40     		lsls	r2, r2, r3
 4506              	.LVL365:
2550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4507              		.loc 1 2550 5 is_stmt 1 view .LVU1387
2550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4508              		.loc 1 2550 38 is_stmt 0 view .LVU1388
 4509 01e8 6B69     		ldr	r3, [r5, #20]
 4510 01ea C068     		ldr	r0, [r0, #12]
 4511 01ec C0F3C100 		ubfx	r0, r0, #3, #2
 4512 01f0 4000     		lsls	r0, r0, #1
2550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4513              		.loc 1 2550 36 view .LVU1389
 4514 01f2 8340     		lsls	r3, r3, r0
 4515              	.LVL366:
2550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c ****   }
 4516              		.loc 1 2550 36 view .LVU1390
 4517 01f4 E9E7     		b	.L274
 4518              	.LVL367:
 4519              	.L275:
2401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc.c **** 
 4520              		.loc 1 2401 3 view .LVU1391
 4521 01f6 0226     		movs	r6, #2
 4522 01f8 EDE7     		b	.L251
 4523              	.L290:
 4524 01fa 00BF     		.align	2
 4525              	.L289:
 4526 01fc 0000C07C 		.word	2092957696
 4527 0200 FFFF1300 		.word	1310719
 4528 0204 FFFF8300 		.word	8650751
 4529              		.cfi_endproc
 4530              	.LFE870:
 4532              		.text
 4533              	.Letext0:
 4534              		.file 4 "c:\\users\\david.fobar\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode
 4535              		.file 5 "c:\\users\\david.fobar\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode
 4536              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 4537              		.file 7 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 4538              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 4539              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_dma.h"
 4540              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_adc.h"
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 259


 4541              		.file 11 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_adc_ex.h"
 4542              		.file 12 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/system_stm32wlxx.h"
 4543              		.file 13 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 4544              		.file 14 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 260


DEFINED SYMBOLS
                            *ABS*:00000000 stm32wlxx_hal_adc.c
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:19     .text.LL_ADC_SetAnalogWDMonitChannels:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:24     .text.LL_ADC_SetAnalogWDMonitChannels:00000000 LL_ADC_SetAnalogWDMonitChannels
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:73     .text.LL_ADC_SetAnalogWDMonitChannels:0000002c $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:78     .text.LL_ADC_ConfigAnalogWDThresholds:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:83     .text.LL_ADC_ConfigAnalogWDThresholds:00000000 LL_ADC_ConfigAnalogWDThresholds
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:116    .text.HAL_ADC_MspInit:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:122    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:137    .text.HAL_ADC_Init:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:143    .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:673    .text.HAL_ADC_Init:00000220 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:681    .text.HAL_ADC_MspDeInit:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:687    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:702    .text.HAL_ADC_PollForConversion:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:708    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:905    .text.HAL_ADC_PollForEvent:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:911    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1079   .text.HAL_ADC_GetValue:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1085   .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1106   .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1112   .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1127   .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1133   .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1148   .text.ADC_DMAHalfConvCplt:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1153   .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1179   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1185   .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1200   .text.HAL_ADC_ErrorCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1206   .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1221   .text.ADC_DMAError:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1226   .text.ADC_DMAError:00000000 ADC_DMAError
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1259   .text.ADC_DMAConvCplt:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1264   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1397   .text.HAL_ADC_IRQHandler:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1403   .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1704   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:1710   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2308   .text.HAL_ADC_ConfigChannel:00000220 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2319   .text.HAL_ADC_GetState:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2325   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2344   .text.HAL_ADC_GetError:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2350   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2369   .text.ADC_ConversionStop:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2375   .text.ADC_ConversionStop:00000000 ADC_ConversionStop
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2503   .text.ADC_Enable:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2509   .text.ADC_Enable:00000000 ADC_Enable
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2737   .text.ADC_Enable:000000d0 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2745   .text.HAL_ADC_Start:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2751   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2868   .text.HAL_ADC_Start_IT:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:2874   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3029   .text.HAL_ADC_Start_DMA:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3035   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3226   .text.HAL_ADC_Start_DMA:000000b8 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3233   .text.ADC_Disable:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3239   .text.ADC_Disable:00000000 ADC_Disable
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s 			page 261


C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3406   .text.HAL_ADC_DeInit:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3412   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3587   .text.HAL_ADC_DeInit:000000b8 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3593   .text.HAL_ADC_Stop:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3599   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3673   .text.HAL_ADC_Stop_IT:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3679   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3758   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3764   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3887   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:3893   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\Users\DAVID~1.FOB\AppData\Local\Temp\ccIocEgW.s:4526   .text.HAL_ADC_AnalogWDGConfig:000001fc $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_ChannelConfigReadyCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
