ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_adc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c"
  18              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_ADCEx_Calibration_Start
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	HAL_ADCEx_Calibration_Start:
  26              	.LVL0:
  27              	.LFB851:
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @file    stm32wlxx_hal_adc_ex.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *          peripheral:
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *          "stm32wlxx_hal_adc.c".
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   ******************************************************************************
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @attention
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * Copyright (c) 2020 STMicroelectronics.
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * All rights reserved.
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   ******************************************************************************
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   @verbatim
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   [..]
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       available in file of generic functions "stm32wlxx_hal_adc.c".
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   [..]
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   @endverbatim
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 2


  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** #include "stm32wlxx_hal.h"
  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /** @addtogroup STM32WLxx_HAL_Driver
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @{
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @{
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @{
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 31.25kHz (ADC clock    */
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* source PLL 8MHz, ADC clock prescaler 256), CPU frequency 48MHz.            */
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /*                      = 178 176 CPU cycles                                  */
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (178176UL)   /*!< ADC calibration time-out value (unit: CPU
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @}
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @{
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** @verbatim
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****  ===============================================================================
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                       ##### IO operation functions #####
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****  ===============================================================================
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration.
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       (+) Get calibration factors.
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       (+) Set calibration factors.
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** @endverbatim
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 3


  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @{
  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @note   Calibration factor can be read after calibration, using function
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *         HAL_ADC_GetValue() (value on 7 bits: from DR[6;0]).
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param  hadc       ADC handle
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval HAL status
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc)
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
  28              		.loc 1 102 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 102 1 is_stmt 0 view .LVU1
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              		.cfi_def_cfa_offset 20
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
  40 0002 83B0     		sub	sp, sp, #12
  41              		.cfi_def_cfa_offset 32
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
  42              		.loc 1 103 3 is_stmt 1 view .LVU2
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  43              		.loc 1 104 3 view .LVU3
  44              		.loc 1 104 17 is_stmt 0 view .LVU4
  45 0004 0023     		movs	r3, #0
  46 0006 0193     		str	r3, [sp, #4]
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   uint32_t backup_setting_cfgr1;
  47              		.loc 1 105 3 is_stmt 1 view .LVU5
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   uint32_t calibration_index;
  48              		.loc 1 106 3 view .LVU6
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   uint32_t calibration_factor_accumulated = 0;
  49              		.loc 1 107 3 view .LVU7
  50              	.LVL1:
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   uint32_t tickstart;
  51              		.loc 1 108 3 view .LVU8
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Check the parameters */
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
  52              		.loc 1 111 3 view .LVU9
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  53              		.loc 1 113 3 view .LVU10
  54              		.loc 1 113 3 view .LVU11
  55 0008 90F85430 		ldrb	r3, [r0, #84]	@ zero_extendqisi2
  56 000c 012B     		cmp	r3, #1
  57 000e 00F09480 		beq	.L13
  58 0012 0446     		mov	r4, r0
  59              		.loc 1 113 3 discriminator 2 view .LVU12
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 4


  60 0014 0123     		movs	r3, #1
  61 0016 80F85430 		strb	r3, [r0, #84]
  62              		.loc 1 113 3 discriminator 2 view .LVU13
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  63              		.loc 1 118 3 discriminator 2 view .LVU14
  64              		.loc 1 118 20 is_stmt 0 discriminator 2 view .LVU15
  65 001a FFF7FEFF 		bl	ADC_Disable
  66              	.LVL2:
  67              		.loc 1 118 20 discriminator 2 view .LVU16
  68 001e 0546     		mov	r5, r0
  69              	.LVL3:
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
  70              		.loc 1 121 3 is_stmt 1 discriminator 2 view .LVU17
  71              		.loc 1 121 7 is_stmt 0 discriminator 2 view .LVU18
  72 0020 2368     		ldr	r3, [r4]
  73              	.LVL4:
  74              	.LBB28:
  75              	.LBI28:
  76              		.file 2 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h"
   1:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @file    stm32wlxx_ll_adc.h
   4:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @attention
   8:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
   9:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * Copyright (c) 2020 STMicroelectronics.
  10:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
  16:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  18:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  19:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifndef STM32WLxx_LL_ADC_H
  21:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define STM32WLxx_LL_ADC_H
  22:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  23:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** extern "C" {
  25:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif
  26:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  27:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #include "stm32wlxx.h"
  29:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  30:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @addtogroup STM32WLxx_LL_Driver
  31:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  32:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 5


  33:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  34:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined (ADC)
  35:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  36:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  38:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  39:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  40:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  43:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
  46:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
  47:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  48:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  51:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  52:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  53:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  54:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  55:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  56:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_SQ1" positi
  57:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_SQ2" positi
  58:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_SQ3" positi
  59:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Equivalent to bitfield "ADC_CHSELR_SQ4" positi
  60:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Equivalent to bitfield "ADC_CHSELR_SQ5" positi
  61:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Equivalent to bitfield "ADC_CHSELR_SQ6" positi
  62:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Equivalent to bitfield "ADC_CHSELR_SQ7" positi
  63:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Equivalent to bitfield "ADC_CHSELR_SQ8" positi
  64:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  65:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  66:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  67:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  68:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  69:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger source                                                   */
  70:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - regular trigger edge                                                     */
  71:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  72:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                    compatibility with some ADC on o
  73:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                    having this setting set by HW de
  74:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  75:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  76:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  77:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  78:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  79:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  80:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  81:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  82:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  83:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  84:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  85:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  86:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  87:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  88:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  89:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 6


  90:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  91:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  92:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Equivalent to bitfield "ADC_CFGR1_EXTSEL" posi
  93:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CFGR1_EXTEN" posit
  94:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  95:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  96:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
  97:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  98:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  99:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by number                                     */
 100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ADC_CHANNEL_ID_NUMBER_MASK with reduced range: on this STM32 series, ADC group regular sequencer,
 107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if set to mode "fully configurable", can contain channels with a restricted channel number.
 108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   Refer to function @ref LL_ADC_REG_SetSequencerConfigurable(). */
 109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)              /* Equivalent to bitfield "ADC_CHAN
 110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                    position in register */
 111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   >> [Position of bitfield "ADC_CHANNEL_NUMBER_MASK" in register]) */
 116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
 123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR1_AWD1CH_0)
 125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR1_AWD1CH_1)
 126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR1_AWD1CH_2)
 128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_0)
 129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1)
 130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR1_AWD1CH_3)
 132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_0)
 133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1)
 134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD
 135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2)
 136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | ADC_CFGR1_AWD
 138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD1CH_2 | \
 139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             ADC_CFGR1_AWD1CH_1 | ADC_CFGR1_AWD1CH_0)
 140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4)
 141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_0)
 142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4 | ADC_CFGR1_AWD1CH_1)
 143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* channels literals definition.                                              */
 146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 7


 147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
 155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* the relevant bits for:                                                     */
 168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   common sampling time available.                                          */
 173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*   selection on groups.                                                     */
 185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL)                      /* Position of bits ADC_AWD_
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 8


 204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                           in ADC_AWD_CRX_REGOFFSET_
 205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)      /* Position of bits ADC
 212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                in ADC_AWD_TRX_REGOF
 213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                threshold high: mask
 215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                threshold high: posi
 217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                                position to perform 
 219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits positions */
 224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Equivalent to bitfield "ADC_CFGR1_RES" positio
 225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Equivalent to bitfield "ADC_CFGR1_AWDSGL" posi
 226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Equivalent to bitfield "ADC_TR1_HT1" position 
 227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL0" pos
 228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL1" pos
 229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL2" pos
 230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL3" pos
 231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL4" pos
 232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL5" pos
 233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL6" pos
 234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL7" pos
 235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL8" pos
 236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL9" pos
 237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL10" po
 238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL11" po
 239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL12" po
 240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL13" po
 241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL14" po
 242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL15" po
 243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL16" po
 244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL17" po
 245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Equivalent to bitfield "ADC_CHSELR_CHSEL18" po
 246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Equivalent to bitfield "ADC_SMPR_SMP1" positio
 247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Equivalent to bitfield "ADC_SMPR_SMP2" positio
 248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Equivalent to bitfield "ADC_SMPR_SMPSEL0" posi
 249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC registers bits groups */
 252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADEN | ADC_CR_ADDIS \
 253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             | ADC_CR_ADSTART | ADC_CR_ADSTP)            /* ADC regi
 254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   HW property "rs": Software can read as well as set this bit. Writing '0' has no effect on the bit
 255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* ADC internal channels related definitions */
 258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Internal voltage reference VrefInt */
 259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   address of parameter VREFINT_CAL: VrefInt ADC raw data acquired at temperature 30 DegC (tolerance
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 9


 261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   Vref+ = 3.3 V (tolerance: +-10 mV). */
 262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3300UL)                    /* Analog voltage reference
 263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   with which VrefInt has been calibrated in production (tolerance: +-10 mV) (unit: mV). */
 264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Temperature sensor */
 265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Address of parameter TS_
 266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   temperature sensor ADC raw data acquired at temperature  30 DegC (tolerance: +-5 DegC), Vref+ = 3
 267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (tolerance: +-10 mV). */
 268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75C8UL)) /* Address of parameter TS_
 269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   temperature sensor ADC raw data acquired at temperature 130 DegC (tolerance: +-5 DegC), Vref+ = 3
 270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (tolerance: +-10 mV). */
 271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Temperature at which tem
 272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   has been calibrated in production for data into TEMPSENSOR_CAL1_ADDR (tolerance: +-5 DegC) (unit:
 273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Temperature at which tem
 274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   has been calibrated in production for data into TEMPSENSOR_CAL2_ADDR (tolerance: +-5 DegC) (unit:
 275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3300UL)                    /* Analog voltage reference
 276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   with which temperature sensor has been calibrated in production (tolerance: +-10 mV) (unit: mV). 
 277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a register from a register basis from which an offset
 291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is applied.
 292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Pointer to register address
 295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and multimode
 313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sharing the same ADC common instance):
 317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 10


 318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         disabled.
 319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetCommonClock(). */
 326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
 336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
 346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                             @note On this STM32 series, this parameter has some clo
 352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   ADC clock synchronous (from PCLK) with prescaler 
 353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   only if PCLK has a 50% duty clock cycle (APB pres
 354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   inside the RCC must be bypassed and the system cl
 355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   cycle).
 356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetClock().
 358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              For more details, refer to description of this functio
 359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetResolution(). */
 364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetDataAlignment(). */
 369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_SetLowPowerMode(). */
 374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 11


 375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_InitTypeDef;
 376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (functions with prefix "REG").
 383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is conditioned to ADC state:
 385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance must be disabled.
 386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         features can be set under different ADC state conditions
 389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to description of each function for setting
 394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         conditioned to ADC state.
 395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** typedef struct
 397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              from external peripheral (timer event, external interr
 400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    set trigger polarity to rising edge(default sett
 403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    with some ADC on other STM32 families having thi
 404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    default value).
 405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    @ref LL_ADC_REG_SetTriggerEdge().
 407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                               @ref LL_ADC_REG_SetTriggerSource(). */
 409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     to mode "fully configurable". Refer to function
 413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     @ref LL_ADC_REG_SetSequencerConfigurable().
 414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                               @ref LL_ADC_REG_SetSequencerLength(). */
 417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              and scan conversions interrupted every selected number
 420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    enabled (depending on the sequencer mode: scan l
 423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    more, or several ADC channels enabled in group r
 424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    Refer to function @ref LL_ADC_REG_SetSequencerCo
 425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetSequencerDiscont(). */
 427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              conversions are performed in single mode (one conversi
 430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              continuous mode (after the first trigger, following co
 431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              successively automatically).
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 12


 432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    and discontinuous mode.
 435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetContinuousMode(). */
 437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              by DMA, and DMA requests mode.
 440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetDMATransfer(). */
 443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              data preserved or overwritten.
 446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              @ref LL_ADC_REG_SetOverrun(). */
 449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 13


 489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* DMA transfer.                                                              */
 503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA        (0x00000000UL)     /* ADC group regular conversion data 
 505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  (corresponding to register DR) to 
 506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  configured in independent mode. Wi
 507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  register accessed by LL function
 508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  @ref LL_ADC_REG_ReadConversionData
 509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  functions @ref LL_ADC_REG_ReadConv
 510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 14


 546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 15


 603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
 638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_CHANNEL_DACCH1              (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH4       (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH3       (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 16


 660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN)  /*!< ADC conversio
 684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to not 
 702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to full
 703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
 711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
 712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
 713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
 714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
 715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
 716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 17


 717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
 718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 series, parame
 726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 series, parame
 727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
 759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
 760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
 761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
 762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
 763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
 764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
 765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
 766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 18


 774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
 775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
 776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
 784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                         | ADC
 785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
 802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
 806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_CH_DACCH1_REG           ((LL_ADC_CHANNEL_DACCH1     & ADC_CHANNEL_ID_MASK) | ADC
 807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_AWD1TR_HT1                 ) /*!< ADC analog watchd
 815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (                 ADC_AWD1TR_LT1) /*!< ADC analog watchd
 816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1) /*!< ADC analog watchd
 817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
 825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
 826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 19


 831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
 834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
 843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
 858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
 859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HELPER_MACRO  Definitions of constants used by helper macro
 871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_TEMPERATURE_CALC_ERROR      ((int16_t)0x7FFF)  /* Temperature calculation error usin
 874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  @ref __LL_ADC_CALC_TEMPERATURE(), 
 875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  calibration parameters. This value
 876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  (to fit on signed word or double w
 877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                                  to an inconsistent temperature val
 878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         not timeout values.
 885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         above each literal definition.
 887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 20


 888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       not timeout values.                                                  */
 892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       STM32 series:                                                        */
 897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
 898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         cycles                                                             */
 904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         configuration.                                                     */
 906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
 911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
 913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
 917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
 919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* parameter "tSTART").                                                       */
 923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: us                                                                   */
 924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
 925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
 926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
 928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
 929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  2UL)  /*!< Delay required between ADC end of cali
 935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 21


 945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Write a value in ADC register
 956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be written
 958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
 960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Read a value in ADC register
 965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __REG__ Register to be read
 967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Register value
 968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
 972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
 976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
 977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
 978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
 979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
 982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return decimal number "4".
 984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
 985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number is returned, either defined with number
 986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 22


1002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #if defined(CORE_CM0PLUS)
1017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
1018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                                       
1019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                               
1020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
1021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                               
1022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                               
1023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((((__CHANNEL__) & ADC_CHANNEL_0_BITFIELD) == ADC_CHANNEL_0_BITFIELD) ? (0UL) :                 
1024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ((((__CHANNEL__) & ADC_CHANNEL_1_BITFIELD) == ADC_CHANNEL_1_BITFIELD) ? (1UL) :                
1025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ((((__CHANNEL__) & ADC_CHANNEL_2_BITFIELD) == ADC_CHANNEL_2_BITFIELD) ? (2UL) :               
1026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       ((((__CHANNEL__) & ADC_CHANNEL_3_BITFIELD) == ADC_CHANNEL_3_BITFIELD) ? (3UL) :              
1027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((((__CHANNEL__) & ADC_CHANNEL_4_BITFIELD) == ADC_CHANNEL_4_BITFIELD) ? (4UL) :             
1028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         ((((__CHANNEL__) & ADC_CHANNEL_5_BITFIELD) == ADC_CHANNEL_5_BITFIELD) ? (5UL) :            
1029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          ((((__CHANNEL__) & ADC_CHANNEL_6_BITFIELD) == ADC_CHANNEL_6_BITFIELD) ? (6UL) :           
1030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           ((((__CHANNEL__) & ADC_CHANNEL_7_BITFIELD) == ADC_CHANNEL_7_BITFIELD) ? (7UL) :          
1031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            ((((__CHANNEL__) & ADC_CHANNEL_8_BITFIELD) == ADC_CHANNEL_8_BITFIELD) ? (8UL) :         
1032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             ((((__CHANNEL__) & ADC_CHANNEL_9_BITFIELD) == ADC_CHANNEL_9_BITFIELD) ? (9UL) :        
1033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((((__CHANNEL__) & ADC_CHANNEL_10_BITFIELD) == ADC_CHANNEL_10_BITFIELD) ? (10UL) :    
1034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               ((((__CHANNEL__) & ADC_CHANNEL_11_BITFIELD) == ADC_CHANNEL_11_BITFIELD) ? (11UL) :   
1035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                ((((__CHANNEL__) & ADC_CHANNEL_12_BITFIELD) == ADC_CHANNEL_12_BITFIELD) ? (12UL) :  
1036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                 ((((__CHANNEL__) & ADC_CHANNEL_13_BITFIELD) == ADC_CHANNEL_13_BITFIELD) ? (13UL) : 
1037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                  ((((__CHANNEL__) & ADC_CHANNEL_14_BITFIELD) == ADC_CHANNEL_14_BITFIELD) ? (14UL) :
1038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   ((((__CHANNEL__) & ADC_CHANNEL_15_BITFIELD) == ADC_CHANNEL_15_BITFIELD) ? (15UL) 
1039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    ((((__CHANNEL__) & ADC_CHANNEL_16_BITFIELD) == ADC_CHANNEL_16_BITFIELD) ? (16UL)
1040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ((((__CHANNEL__) & ADC_CHANNEL_17_BITFIELD) == ADC_CHANNEL_17_BITFIELD) ? (17UL
1041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      (0UL))))))))))))))))))))
1042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #else
1044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
1047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    :                                                                                       \
1050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (                                                                                       \
1051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                                       \
1053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )
1054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #endif /* CORE_CM0PLUS */
1055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from number in decimal format.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 23


1059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Example:
1060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
1086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__)))
1097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC internal channel:
1103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
1115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 24


1116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                       connected to a GPIO pin).
1144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a value defined from parameter definition of
1159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC registers.
1162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 25


1173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or a value from functions where a channel number is
1221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         returned from ADC registers,
1222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         because internal and external channels share the same channel
1223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         parameters definitions of driver.
1225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 26


1230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
1231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                             \
1236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                             \
1237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT))
1238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from sequencer channel and groups definition.
1243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
1271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
1273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
1284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
1285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
1286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 27


1287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
1288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
1289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
1290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
1291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
1292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
1293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
1298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
1305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (< ADCx param >,
1319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
1321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         different of 12 bits.
1336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *            );
1343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 28


1344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)          
1367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    & LL_ADC_AWD_THRESHOLD_LOW)
1369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC common register instance
1379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (ADC_COMMON)
1382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC common instance are disabled.
1386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are disabled.
1397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
1399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 29


1401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   LL_ADC_IsEnabled(ADC)
1402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to reference manual).
1409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a resolution to another resolution.
1422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
1423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
1440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((__DATA__)                                                                 \
1441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                       (unit: digital value).
1454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 30


1458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_DATA__,\
1463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
1464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
1470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         reference VrefInt.
1472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         connected to pin Vref+.
1476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
1479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal voltage reference VrefInt.
1482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
1495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
1497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
1498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
1499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         stored in system memory for each device during production.
1506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
1507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 31


1515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  parameters are correct (address and data).
1519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  less accurate than calibrated values),
1522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
1529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor.
1532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                 sensor voltage has been measured.
1539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case or error, value LL_ADC_TEMPERATURE_CALC_ERROR is returned (inconsistent tempera
1546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   __ADC_RESOLUTION__)\
1550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** ((((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) != 0) ?        \
1551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   )                                                                                \
1561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   :                                                                                \
1562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ((int32_t)LL_ADC_TEMPERATURE_CALC_ERROR)                                         \
1563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (refer to device datasheet).
1570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calculation formula:
1571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 32


1572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: digital value)
1575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  of the current device has characteristics in line with
1581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  datasheet typical values.
1582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                           (unit: uV/DegCelsius).
1596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to device datasheet parameter "Avg_Slop
1597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                           (at temperature and Vref+ defined in parameters below) (u
1599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                       On STM32WL, refer to datasheet parameter "V30" (correspon
1600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                           (see parameter above) is corresponding (unit: mV)
1602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) value (unit: mV)
1603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This parameter can be one of the following values:
1606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
1618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     -                                                                       \
1622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               * 1000UL)                                                     \
1624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****    )                                                                        \
1625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
1626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
1627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** )
1628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 33


1629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
1648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   These ADC registers are data registers:
1655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example:
1660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval ADC register address
1674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   (void)(Register);
1679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve address of register DR */
1681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
1682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 34


1686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC instances
1690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 35


1743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to
1749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock
1750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             is set to clock source asynchronous.
1751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
1762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The values not selected are removed from configuration.
1766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
1786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
1787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
1799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 36


1800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Add paths to the current configuration.
1805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor stabilization time.
1812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US,
1815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
1816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         For ADC conversion of internal channels,
1818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a sampling time minimum value is required.
1819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
1820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
1827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
1828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
1829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
1841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
1845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
1846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Remove paths to the current configuration.
1847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 37


1857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
1858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
1859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
1869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
1871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
1877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
1882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
1893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
1897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
1901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 38


1914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
1941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             cycle).
1948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Refer to reference manual.
1949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without having to perform a new calibration using
1960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on going on group regular.
1965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
1969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 39


1971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              CalibrationFactor);
1975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
1984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
1986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
1990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
1991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
1992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC resolution.
1993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
1995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
1996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
1997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
1998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
2010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC resolution.
2014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
2017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
2027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 40


2028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
2037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
2046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         dependencies to ADC resolutions.
2052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
2053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC low power mode.
2065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
2072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 41


2085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC low power mode:
2122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC low power modes:
2123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           in order to reduce power consumption.
2126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           has been retrieved by user software.
2129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           other conversion.
2131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           applications.
2135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           How to use this low power mode:
2136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 42


2142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC conversion start.
2147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of delay during which ADC was idle.
2156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC channel.
2159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency,
2181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           is discarded.
2188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 43


2199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
2212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
2224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
2227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
2229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
2231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
2238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
2239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 44


2256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                           uint32_t SamplingTime)
2262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, sampling time scope is on ADC instance:
2272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Sampling time common to all channels.
2273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
2277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
2294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
2301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
2305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
2312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         also set trigger polarity to rising edge
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 45


2313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
2317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC trigger frequency mode must be set
2318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function
2320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         external interrupt line).
2348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal (SW start) or external, without detail
2350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (equivalent to
2352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
2355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         depends on timers availability on the selected device.
2356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
2364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH3
2365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH4
2366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 46


2370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t trigger_source = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t shift_exten = ((trigger_source & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS -
2375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((trigger_source
2379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> shift_exten) & ADC_CFGR1_EXTSEL)
2380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> shift_exten) & ADC_CFGR1_EXTEN)
2381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
2382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or external.
2387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
2423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 47


2427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
2439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
2447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         available:
2476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank
2478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           affectation to a channel are configurable.
2479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are fixed by channel HW number.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 48


2484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Refer to description of function
2485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
2493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function performs configuration of:
2515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           To set scan direction differently, refer to function
2525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 49


2541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are configurable.
2576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are defined by channel number.
2586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This function retrieves:
2587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             highest channel number).
2594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Sequencer ranks are selected using
2595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          To set scan direction differently, refer to function
2597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 50


2598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t channels_ranks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t sequencer_length = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t rank_index;
2628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t rank_shifted;
2629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Value "0xF0UL" corresponds to bitfield of sequencer 2nd rank
2632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            (ADC_CHSELR_SQ2), value "4" to length of end of sequence
2633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****            identifier (0xF) */
2634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   for (rank_index = 0U; rank_index <= (28U - 4U); rank_index += 4U)
2635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
2636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     rank_shifted = (uint32_t)(0xF0UL << rank_index);
2637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if ((channels_ranks & rank_shifted) == rank_shifted)
2638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
2639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       sequencer_length = rank_shifted;
2640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       break;
2641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
2642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
2643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return sequencer_length;
2645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 series, this setting is not available and
2653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
2654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 51


2655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, parameter relevant only is sequencer is set
2680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         to mode not fully configurable,
2681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the default scan direction is forward.
2684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
2699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
2700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
2704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 52


2712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         number of ranks.
2720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs configuration of:
2735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
2760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
2761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
2762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
2763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
2764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
2765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
2766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
2767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 53


2769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
2810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
2813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
2814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
2815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****               << (Rank & ADC_REG_RANK_ID_SQRX_MASK));
2816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
2820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         scan sequence rank.
2821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
2822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         affectation to a channel are configurable.
2824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 54


2826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
2828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
2835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
2836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
2837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
2839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
2840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
2841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
2842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
2843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
2844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
2845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
2846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
2876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
2877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
2878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1     (2)
2879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 55


2883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
2884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CHSELR,
2890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                               ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
2891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
2892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
2893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                    );
2894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
2905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
2908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
2913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
2915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
2918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
2919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
2920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
2923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
2925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
2928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
2930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
2931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 56


2940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
2952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
2975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
2976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
2977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
2980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
2981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
2983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
2987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
2988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
2989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
2991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
2992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 57


2997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
2998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
2999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
3012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
3023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
3025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
3026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
3027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
3028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
3029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
3030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
3031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
3032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
3033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
3034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
3035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
3036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
3037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
3038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
3039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
3040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
3041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
3042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
3043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 58


3054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
3074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
3082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           configuration.
3089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after modifying sequencer (functions
3097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
3098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerRanks(), ...)
3099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
3100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
3101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Otherwise, some actions may be ignored.
3102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of @ref LL_ADC_IsActiveFlag_CCRDY
3103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         for more details.
3104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 59


3111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be selected.
3115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 60


3168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         channel number.
3175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function performs:
3176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer both modes
3180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         "fully configurable" or "not fully configurable"
3181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are available, they can be chosen using
3182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         enabled separately.
3191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   One or several values can be retrieved.
3197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
3206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 61


3225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
3247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t channels_bitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((((channels_bitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_CH
3251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
3263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
3264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (((channels_bitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****          );
3269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
3275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 62


3282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - single mode: one conversion per trigger
3298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           conversions launched successively automatically.
3300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 63


3339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode:
3353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           when number of DMA data transfers (number of
3355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions) is reached.
3356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC conversions).
3360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         mode non-circular:
3363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         other devices without this feature have a behavior
3386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         equivalent to data overwritten.
3387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         overrun should be set to data overwritten.
3390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 64


3396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         data preserved or overwritten.
3408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         converted:
3434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         setting).
3437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3438:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         TS_temp, ...).
3439:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3440:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3441:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3442:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3443:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3444:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required.
3445:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet.
3446:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3447:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3448:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3449:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3450:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3451:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3452:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 65


3453:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3454:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3455:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3456:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3457:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3458:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3459:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3460:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3461:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3462:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3463:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3464:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3465:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3466:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3467:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3468:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3469:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3470:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3471:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3472:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3473:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3474:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3475:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3476:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3477:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3478:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3479:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3480:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3481:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3482:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3483:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3484:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3485:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3486:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3487:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3488:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3489:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3490:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3491:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3492:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3493:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3494:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3495:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3496:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3497:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3498:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3499:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3500:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3501:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3502:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3503:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3504:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3505:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3506:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3507:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3508:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3509:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****             );
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 66


3510:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3511:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3512:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3513:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3514:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Unit: ADC clock cycles.
3515:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3516:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3517:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3518:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3519:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         this STM32 series.
3520:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3521:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3522:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3523:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3524:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3525:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3526:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3527:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3528:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3529:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3530:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3531:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3532:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3533:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3534:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3535:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3536:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3537:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3538:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3539:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3540:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3541:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3542:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3543:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3544:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3545:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3546:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3547:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3548:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3549:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3550:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3551:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3552:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3553:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3554:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3555:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3556:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3557:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3558:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3559:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3560:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3561:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3562:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DACCH1
3563:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3564:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On STM32WL, parameter can be set in ADC group sequencer
3565:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3566:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 67


3567:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3568:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3569:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3570:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3571:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
3572:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3573:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3574:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3575:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3576:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* and shift it to position 0.                                                 */
3577:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3578:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                   >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NU
3579:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                        + ADC_SMPR_SMPSEL0_BITOFFSET_POS)
3580:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                       & 0x1FUL));
3581:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3582:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3583:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3584:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****           | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2));
3585:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3586:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3587:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3588:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
3589:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3590:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3591:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3592:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
3593:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3594:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3595:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3596:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3597:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3598:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3599:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3600:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled.
3601:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3602:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3603:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3604:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3605:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3606:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3607:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3608:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3609:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3610:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3611:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3612:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3613:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3614:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3615:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3616:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3617:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3618:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3619:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3620:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3621:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3622:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3623:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 68


3624:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3625:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3626:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
3627:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3628:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3629:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3630:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3631:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3632:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3633:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3634:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3635:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3636:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3637:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3638:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3639:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3640:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3641:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3642:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3643:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3644:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3645:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3646:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3647:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3648:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3649:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3650:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3651:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3652:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3653:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3654:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3655:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3656:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3657:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3658:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3659:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3660:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3661:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DACCH1_REG
3662:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3663:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3664:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3665:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3666:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3667:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
3668:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3669:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3670:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg;
3671:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3672:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (AWDy == LL_ADC_AWD1)
3673:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3674:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
3675:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3676:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   else
3677:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3678:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR,
3679:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                 ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX_REGOFFSET_BIT
3680:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 69


3681:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3682:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3683:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
3684:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDChannelGroup & AWDy);
3685:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3686:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3687:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3688:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3689:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Usage of the returned channel number:
3690:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3691:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3692:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3693:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3694:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3695:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3696:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           as parameter for another function.
3697:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - To get the channel number in decimal format:
3698:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           process the returned value with the helper macro
3699:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3700:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
3701:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           one channel.
3702:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3703:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3704:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3705:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3706:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3707:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3708:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3709:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3710:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3711:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3712:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3713:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3714:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3715:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3716:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3717:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3718:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3719:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3720:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3721:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3722:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3723:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3724:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3725:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3726:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3727:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3728:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
3729:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
3730:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
3731:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3732:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3733:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3734:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
3735:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
3736:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *
3737:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 70


3738:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
3739:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
3740:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             multiple channels are programmed simultaneously
3741:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             by bitfield.
3742:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3743:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3744:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3745:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG
3746:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG
3747:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG
3748:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG
3749:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG
3750:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG
3751:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG
3752:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG
3753:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG
3754:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG
3755:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3756:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3757:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3758:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3759:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3760:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3761:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3762:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3763:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3764:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
3765:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3766:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1,
3767:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> ADC_AWD_CRX_RE
3768:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK)
3769:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                 * ADC_AWD_CR12_REGOFFSETGAP_VAL));
3770:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3771:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   uint32_t analog_wd_monit_channels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
3772:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3773:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* If "analog_wd_monit_channels" == 0, then the selected AWD is disabled       */
3774:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
3775:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
3776:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* or a single channel.                                                     */
3777:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   if (analog_wd_monit_channels != 0UL)
3778:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   {
3779:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
3780:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3781:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_CFGR1_AWD1SGL) == 0UL)
3782:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3783:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3784:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = ((analog_wd_monit_channels
3785:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                      | (ADC_AWD_CR23_CHANNEL_MASK)
3786:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     )
3787:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     & (~(ADC_CFGR1_AWD1CH))
3788:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3789:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3790:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3791:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3792:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3793:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3794:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_AWD2CR_AWD2CH_0 << (analog_wd_monit_channels >> ADC_CFGR
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 71


3795:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3796:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3797:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3798:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     else
3799:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     {
3800:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       if ((analog_wd_monit_channels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
3801:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3802:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3803:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (ADC_AWD_CR23_CHANNEL_MASK
3804:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN)
3805:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3806:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3807:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       else
3808:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       {
3809:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a single channel */
3810:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         /* AWD monitoring a group of channels */
3811:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****         analog_wd_monit_channels = (analog_wd_monit_channels
3812:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
3813:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                     | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(analog_wd_monit_channels) << 
3814:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                    );
3815:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****       }
3816:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****     }
3817:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   }
3818:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3819:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return analog_wd_monit_channels;
3820:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3821:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3822:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3823:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3824:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high and low.
3825:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3826:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3827:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3828:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3829:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3830:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3831:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3832:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3833:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3834:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3835:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3836:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3837:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3838:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3839:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3840:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3841:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3842:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3843:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3844:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3845:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3846:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3847:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3848:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3849:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3850:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3851:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 72


3852:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3853:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3854:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3855:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3856:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3857:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3858:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3859:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3860:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3861:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3862:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3863:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3864:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3865:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3866:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3867:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
3868:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_ConfigAnalogWDThresholds\n
3869:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_ConfigAnalogWDThresholds\n
3870:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_ConfigAnalogWDThresholds\n
3871:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_ConfigAnalogWDThresholds\n
3872:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_ConfigAnalogWDThresholds\n
3873:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_ConfigAnalogWDThresholds
3874:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3875:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3876:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3877:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3878:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3879:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3880:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3881:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3882:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
3883:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3884:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
3885:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3886:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
3887:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameter        */
3888:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDy".                                                                  */
3889:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
3890:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3891:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
3892:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
3893:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
3894:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
3895:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                  >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL))
3896:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              );
3897:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3898:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3899:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_AWD1TR_HT1 | ADC_AWD1TR_LT1,
3900:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
3901:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3902:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3903:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3904:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3905:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         high or low.
3906:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3907:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3908:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 73


3909:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3910:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3911:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
3912:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         instance:
3913:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3914:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3915:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3916:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3917:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3918:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3919:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3920:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3921:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3922:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             be selected. For example:
3923:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3924:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3925:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             groups regular and injected).
3926:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3927:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3928:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3929:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3930:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *             ADC resolution configured).
3931:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3932:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3933:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3934:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3935:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Examples:
3936:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3937:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3938:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3939:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3940:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3941:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3942:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3943:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3944:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3945:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is not conditioned to
3946:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
3947:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
3948:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on ADC group regular.
3949:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_SetAnalogWDThresholds\n
3950:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_SetAnalogWDThresholds\n
3951:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_SetAnalogWDThresholds\n
3952:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_SetAnalogWDThresholds\n
3953:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_SetAnalogWDThresholds\n
3954:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_SetAnalogWDThresholds
3955:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
3956:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3957:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3958:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3959:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3960:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3961:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3962:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3963:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3964:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
3965:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 74


3966:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
3967:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
3968:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
3969:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
3971:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3973:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3974:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
3975:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
3976:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
3977:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                              + ((ADC_AWD_CR3_REGOFFSET & AWDy)
3978:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                  >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1UL)));
3979:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3980:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(*preg,
3981:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdsHighLow,
3982:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
3983:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
3984:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
3985:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
3986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3987:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         concatenated.
3989:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3990:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3991:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         using helper macro:
3992:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3993:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3994:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3995:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3996:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll AWD1TR   HT1            LL_ADC_GetAnalogWDThresholds\n
3997:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   HT2            LL_ADC_GetAnalogWDThresholds\n
3998:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   HT3            LL_ADC_GetAnalogWDThresholds\n
3999:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD1TR   LT1            LL_ADC_GetAnalogWDThresholds\n
4000:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD2TR   LT2            LL_ADC_GetAnalogWDThresholds\n
4001:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         AWD3TR   LT3            LL_ADC_GetAnalogWDThresholds
4002:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4003:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4004:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4005:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4006:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4007:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
4008:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
4009:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
4010:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
4011:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4012:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4013:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
4014:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4015:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
4016:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* position in register and register position depending on parameters       */
4017:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
4018:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
4019:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
4020:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->AWD1TR,
4021:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK))
4022:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                      >> (ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS))
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 75


4023:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                    + ((ADC_AWD_CR3_REGOFFSET & AWDy)
4024:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                                                        >> (ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS + 1U
4025:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4026:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4027:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_AWD1TR_LT1))
4028:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
4029:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_AWD1TR_LT1)));
4030:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4031:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4032:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4033:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4034:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4035:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4036:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
4037:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4038:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4039:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4040:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4041:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
4042:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4043:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4044:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4045:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
4046:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4047:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
4048:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4049:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4050:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4051:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4052:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
4053:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4054:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
4055:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4056:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4057:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4058:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
4059:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
4060:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4061:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4062:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
4063:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
4064:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4065:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
4066:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4067:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
4068:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4069:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4070:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4071:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
4072:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4073:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4074:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4075:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
4076:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4077:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4078:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4079:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 76


4080:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4081:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
4082:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4083:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
4084:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4085:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4086:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4087:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4088:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
4089:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4090:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
4091:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4092:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4093:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4094:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
4095:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on the selected ADC group.
4096:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
4097:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
4098:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           are done from 1 trigger)
4099:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
4100:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           needs a trigger)
4101:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
4102:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4103:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4104:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4105:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4106:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4107:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
4108:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4109:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4110:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4111:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4112:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4113:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Set ADC oversampling
4114:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
4115:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - ratio
4116:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - shift
4117:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4118:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4119:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be disabled.
4120:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4121:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4122:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4123:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4124:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4125:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4126:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4127:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4128:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4129:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4130:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4131:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4132:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4133:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4134:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4135:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4136:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 77


4137:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4138:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4139:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4140:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4141:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4142:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4143:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4144:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4145:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4146:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4147:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4148:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4149:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4150:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4151:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4152:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4153:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4154:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4155:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4156:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4157:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4158:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4159:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4160:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4161:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4162:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4163:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
4164:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4165:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4166:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4167:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4168:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4169:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4170:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
4171:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4172:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4173:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4174:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4175:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4176:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4177:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4178:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4179:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4180:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4181:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4182:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4183:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
4184:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4185:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4186:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4187:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4188:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4189:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4190:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4191:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4192:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4193:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 78


4194:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4195:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4196:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4197:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4198:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, there are three possibilities to enable
4199:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         the voltage regulator:
4200:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling it manually
4201:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4202:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by launching a calibration
4203:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4204:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - by enabling the ADC
4205:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4206:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
4207:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4208:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4209:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4210:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4211:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4212:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4213:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4214:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4215:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4216:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4217:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4218:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4219:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4220:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4221:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4222:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4223:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4224:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4225:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADVREGEN);
4226:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4227:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4228:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4229:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4230:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4231:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4232:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4233:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4234:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4235:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4236:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4238:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4240:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4241:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4242:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4243:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4244:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4245:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4246:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4247:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4248:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
4249:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4250:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 79


4251:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4252:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4253:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4254:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4255:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
4256:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4257:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC conversion start.
4258:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4259:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4260:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4261:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4262:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4263:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4264:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4265:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4266:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4267:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4268:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4270:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4271:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4272:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4273:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4275:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4276:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADEN);
4277:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4278:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4279:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4280:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4281:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4282:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4283:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4284:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         on group regular.
4285:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4286:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4287:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4288:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4290:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4291:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4292:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4293:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4295:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4296:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADDIS);
4297:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4298:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4299:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4300:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4301:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4302:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4303:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4304:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4305:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4306:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4307:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 80


4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
  77              		.loc 2 4308 26 is_stmt 1 discriminator 2 view .LVU19
  78              	.LBB29:
4309:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
  79              		.loc 2 4310 3 discriminator 2 view .LVU20
  80              		.loc 2 4310 12 is_stmt 0 discriminator 2 view .LVU21
  81 0022 9A68     		ldr	r2, [r3, #8]
  82              		.loc 2 4310 68 discriminator 2 view .LVU22
  83 0024 12F00102 		ands	r2, r2, #1
  84 0028 09D0     		beq	.L3
  85              	.LVL5:
  86              		.loc 2 4310 68 discriminator 2 view .LVU23
  87              	.LBE29:
  88              	.LBE28:
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   {
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Set ADC state */
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Manage settings impacting calibration                                  */
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* - Disable ADC mode auto power-off                                      */
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* - Disable ADC DMA transfer request during calibration                  */
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Note: Specificity of this STM32 series: Calibration factor is          */
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /*       available in data register and also transferred by DMA.          */
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /*       To not insert ADC calibration factor among ADC conversion data   */
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /*       in array variable, DMA transfer must be disabled during          */
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /*       calibration.                                                     */
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     backup_setting_cfgr1 = READ_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* ADC calibration procedure */
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Note: Perform an averaging of 8 calibrations for optimized accuracy */
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     for (calibration_index = 0UL; calibration_index < 8UL; calibration_index++)
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       /* Start ADC calibration */
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       LL_ADC_StartCalibration(hadc->Instance);
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       /* Wait for calibration completion */
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         wait_loop_index++;
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         {
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           ADC_STATE_CLR_SET(hadc->State,
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                             HAL_ADC_STATE_ERROR_INTERNAL);
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           return HAL_ERROR;
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       }
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       calibration_factor_accumulated += LL_ADC_GetCalibrationFactor(hadc->Instance);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 81


 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     }
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Compute average */
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     calibration_factor_accumulated /= calibration_index;
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Apply calibration factor */
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     LL_ADC_Enable(hadc->Instance);
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, calibration_factor_accumulated);
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     LL_ADC_Disable(hadc->Instance);
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Wait for ADC effectively disabled before changing configuration */
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Get tick count */
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     while (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         {
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           /* Update ADC state machine to error */
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           /* Set ADC error code to ADC peripheral internal error */
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****           return HAL_ERROR;
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       }
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     }
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Restore configuration after calibration */
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     SET_BIT(hadc->Instance->CFGR1, backup_setting_cfgr1);
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Set ADC state */
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   }
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   else
 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   {
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
  89              		.loc 1 204 5 is_stmt 1 view .LVU24
  90 002a A36D     		ldr	r3, [r4, #88]
  91 002c 43F01003 		orr	r3, r3, #16
  92 0030 A365     		str	r3, [r4, #88]
  93              	.LVL6:
  94              	.L4:
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   }
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
  95              		.loc 1 210 3 view .LVU25
  96              		.loc 1 210 3 view .LVU26
  97 0032 0023     		movs	r3, #0
  98 0034 84F85430 		strb	r3, [r4, #84]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 82


  99              		.loc 1 210 3 view .LVU27
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   return tmp_hal_status;
 100              		.loc 1 212 3 view .LVU28
 101              	.LVL7:
 102              	.L2:
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 103              		.loc 1 213 1 is_stmt 0 view .LVU29
 104 0038 2846     		mov	r0, r5
 105 003a 03B0     		add	sp, sp, #12
 106              		.cfi_remember_state
 107              		.cfi_def_cfa_offset 20
 108              		@ sp needed
 109 003c F0BD     		pop	{r4, r5, r6, r7, pc}
 110              	.LVL8:
 111              	.L3:
 112              		.cfi_restore_state
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY,
 113              		.loc 1 124 5 is_stmt 1 view .LVU30
 114 003e A16D     		ldr	r1, [r4, #88]
 115 0040 21F48171 		bic	r1, r1, #258
 116 0044 41F00201 		orr	r1, r1, #2
 117 0048 A165     		str	r1, [r4, #88]
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 118              		.loc 1 136 5 view .LVU31
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 119              		.loc 1 136 28 is_stmt 0 view .LVU32
 120 004a DE68     		ldr	r6, [r3, #12]
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG | ADC_CFGR1_AUTOFF);
 121              		.loc 1 136 26 view .LVU33
 122 004c 26F4FF46 		bic	r6, r6, #32640
 123 0050 26F07C06 		bic	r6, r6, #124
 124 0054 3604     		lsls	r6, r6, #16
 125 0056 360C     		lsrs	r6, r6, #16
 126              	.LVL9:
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 127              		.loc 1 137 5 is_stmt 1 view .LVU34
 128 0058 D968     		ldr	r1, [r3, #12]
 129 005a 21F40041 		bic	r1, r1, #32768
 130 005e 21F00301 		bic	r1, r1, #3
 131 0062 D960     		str	r1, [r3, #12]
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 132              		.loc 1 141 5 view .LVU35
 133              	.LVL10:
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   uint32_t tickstart;
 134              		.loc 1 107 12 is_stmt 0 view .LVU36
 135 0064 1046     		mov	r0, r2
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 136              		.loc 1 141 5 view .LVU37
 137 0066 05E0     		b	.L5
 138              	.LVL11:
 139              	.L16:
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     }
 140              		.loc 1 163 7 is_stmt 1 view .LVU38
 141              	.LBB30:
 142              	.LBI30:
1986:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 83


 143              		.loc 2 1986 26 view .LVU39
 144              	.LBB31:
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 145              		.loc 2 1988 3 view .LVU40
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 146              		.loc 2 1988 21 is_stmt 0 view .LVU41
 147 0068 D3F8B430 		ldr	r3, [r3, #180]
 148              	.LVL12:
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 149              		.loc 2 1988 10 view .LVU42
 150 006c 03F07F03 		and	r3, r3, #127
 151              	.LVL13:
1988:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 152              		.loc 2 1988 10 view .LVU43
 153              	.LBE31:
 154              	.LBE30:
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     }
 155              		.loc 1 163 38 view .LVU44
 156 0070 1844     		add	r0, r0, r3
 157              	.LVL14:
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 158              		.loc 1 141 77 is_stmt 1 view .LVU45
 159 0072 0132     		adds	r2, r2, #1
 160              	.LVL15:
 161              	.L5:
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 162              		.loc 1 141 53 discriminator 1 view .LVU46
 163 0074 072A     		cmp	r2, #7
 164 0076 1ED8     		bhi	.L15
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 165              		.loc 1 144 7 view .LVU47
 166 0078 2168     		ldr	r1, [r4]
 167              	.LVL16:
 168              	.LBB32:
 169              	.LBI32:
4311:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4312:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4313:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4314:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4315:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4316:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4317:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4318:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4319:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
4320:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4321:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4322:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4323:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4324:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4325:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4326:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4327:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
4328:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4329:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4330:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4331:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         On this STM32 series, ADC DMA transfer request should be disabled
4332:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         during calibration:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 84


4333:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Calibration factor is available in data register
4334:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         and also transferred by DMA.
4335:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4336:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4337:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         calibration.
4338:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4339:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4340:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4341:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
4342:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   In case of usage of feature auto power-off:
4343:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         This mode must be disabled during calibration
4344:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         Refer to function @ref LL_ADC_SetLowPowerMode().
4345:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4346:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4347:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be ADC disabled.
4348:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4349:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4350:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4351:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4352:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
 170              		.loc 2 4352 22 view .LVU48
 171              	.LBB33:
4353:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4354:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4355:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4356:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4357:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
 172              		.loc 2 4357 3 view .LVU49
 173 007a 8B68     		ldr	r3, [r1, #8]
 174 007c 23F00043 		bic	r3, r3, #-2147483648
 175 0080 23F01703 		bic	r3, r3, #23
 176 0084 43F00043 		orr	r3, r3, #-2147483648
 177 0088 8B60     		str	r3, [r1, #8]
 178              	.LVL17:
 179              	.L6:
 180              		.loc 2 4357 3 is_stmt 0 view .LVU50
 181              	.LBE33:
 182              	.LBE32:
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 183              		.loc 1 147 58 is_stmt 1 view .LVU51
 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 184              		.loc 1 147 14 is_stmt 0 view .LVU52
 185 008a 2368     		ldr	r3, [r4]
 186              	.LVL18:
 187              	.LBB34:
 188              	.LBI34:
4358:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4359:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADCAL);
4360:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4361:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4362:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4363:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC calibration state.
4364:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4365:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4366:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4367:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4368:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 85


 189              		.loc 2 4368 26 is_stmt 1 view .LVU53
 190              	.LBB35:
4369:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4370:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 191              		.loc 2 4370 3 view .LVU54
 192              		.loc 2 4370 12 is_stmt 0 view .LVU55
 193 008c 9968     		ldr	r1, [r3, #8]
 194              		.loc 2 4370 70 view .LVU56
 195 008e 0029     		cmp	r1, #0
 196 0090 EADA     		bge	.L16
 197              	.LVL19:
 198              		.loc 2 4370 70 view .LVU57
 199              	.LBE35:
 200              	.LBE34:
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 201              		.loc 1 149 9 is_stmt 1 view .LVU58
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 202              		.loc 1 149 24 is_stmt 0 view .LVU59
 203 0092 019B     		ldr	r3, [sp, #4]
 204 0094 0133     		adds	r3, r3, #1
 205 0096 0193     		str	r3, [sp, #4]
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         {
 206              		.loc 1 150 9 is_stmt 1 view .LVU60
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         {
 207              		.loc 1 150 29 is_stmt 0 view .LVU61
 208 0098 019B     		ldr	r3, [sp, #4]
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         {
 209              		.loc 1 150 12 view .LVU62
 210 009a B3F52E3F 		cmp	r3, #178176
 211 009e F4D3     		bcc	.L6
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                             HAL_ADC_STATE_BUSY_INTERNAL,
 212              		.loc 1 153 11 is_stmt 1 view .LVU63
 213 00a0 A36D     		ldr	r3, [r4, #88]
 214 00a2 23F01203 		bic	r3, r3, #18
 215 00a6 43F01003 		orr	r3, r3, #16
 216 00aa A365     		str	r3, [r4, #88]
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 217              		.loc 1 157 11 view .LVU64
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 218              		.loc 1 157 11 view .LVU65
 219 00ac 0023     		movs	r3, #0
 220 00ae 84F85430 		strb	r3, [r4, #84]
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 221              		.loc 1 157 11 view .LVU66
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
 222              		.loc 1 159 11 view .LVU67
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
 223              		.loc 1 159 18 is_stmt 0 view .LVU68
 224 00b2 0125     		movs	r5, #1
 225              	.LVL20:
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
 226              		.loc 1 159 18 view .LVU69
 227 00b4 C0E7     		b	.L2
 228              	.LVL21:
 229              	.L15:
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Apply calibration factor */
 230              		.loc 1 166 5 is_stmt 1 view .LVU70
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 86


 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Apply calibration factor */
 231              		.loc 1 166 36 is_stmt 0 view .LVU71
 232 00b6 B0FBF2F0 		udiv	r0, r0, r2
 233              	.LVL22:
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, calibration_factor_accumulated);
 234              		.loc 1 168 5 is_stmt 1 view .LVU72
 235 00ba 2268     		ldr	r2, [r4]
 236              	.LVL23:
 237              	.LBB36:
 238              	.LBI36:
4269:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 239              		.loc 2 4269 22 view .LVU73
 240              	.LBB37:
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 241              		.loc 2 4274 3 view .LVU74
 242 00bc 9368     		ldr	r3, [r2, #8]
 243 00be 23F00043 		bic	r3, r3, #-2147483648
 244 00c2 23F01703 		bic	r3, r3, #23
 245 00c6 43F00103 		orr	r3, r3, #1
 246 00ca 9360     		str	r3, [r2, #8]
 247              	.LVL24:
4274:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 248              		.loc 2 4274 3 is_stmt 0 view .LVU75
 249              	.LBE37:
 250              	.LBE36:
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     LL_ADC_Disable(hadc->Instance);
 251              		.loc 1 169 5 is_stmt 1 view .LVU76
 252 00cc 2268     		ldr	r2, [r4]
 253              	.LVL25:
 254              	.LBB38:
 255              	.LBI38:
1970:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 256              		.loc 2 1970 22 view .LVU77
 257              	.LBB39:
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 258              		.loc 2 1972 3 view .LVU78
 259 00ce D2F8B430 		ldr	r3, [r2, #180]
 260 00d2 23F07F03 		bic	r3, r3, #127
 261 00d6 1843     		orrs	r0, r0, r3
 262              	.LVL26:
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 263              		.loc 2 1972 3 is_stmt 0 view .LVU79
 264 00d8 C2F8B400 		str	r0, [r2, #180]
 265              	.LVL27:
1972:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CALFACT_CALFACT,
 266              		.loc 2 1972 3 view .LVU80
 267              	.LBE39:
 268              	.LBE38:
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 269              		.loc 1 170 5 is_stmt 1 view .LVU81
 270 00dc 2268     		ldr	r2, [r4]
 271              	.LVL28:
 272              	.LBB40:
 273              	.LBI40:
4289:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 274              		.loc 2 4289 22 view .LVU82
 275              	.LBB41:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 87


4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 276              		.loc 2 4294 3 view .LVU83
 277 00de 9368     		ldr	r3, [r2, #8]
 278 00e0 23F00043 		bic	r3, r3, #-2147483648
 279 00e4 23F01703 		bic	r3, r3, #23
 280 00e8 43F00203 		orr	r3, r3, #2
 281 00ec 9360     		str	r3, [r2, #8]
 282              	.LVL29:
4294:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 283              		.loc 2 4294 3 is_stmt 0 view .LVU84
 284              	.LBE41:
 285              	.LBE40:
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 286              		.loc 1 174 5 is_stmt 1 view .LVU85
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 287              		.loc 1 174 17 is_stmt 0 view .LVU86
 288 00ee FFF7FEFF 		bl	HAL_GetTick
 289              	.LVL30:
 290 00f2 0746     		mov	r7, r0
 291              	.LVL31:
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 292              		.loc 1 176 5 is_stmt 1 view .LVU87
 293              	.L10:
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 294              		.loc 1 176 45 view .LVU88
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     {
 295              		.loc 1 176 12 is_stmt 0 view .LVU89
 296 00f4 2368     		ldr	r3, [r4]
 297              	.LVL32:
 298              	.LBB42:
 299              	.LBI42:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 300              		.loc 2 4308 26 is_stmt 1 view .LVU90
 301              	.LBB43:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 302              		.loc 2 4310 3 view .LVU91
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 303              		.loc 2 4310 12 is_stmt 0 view .LVU92
 304 00f6 9A68     		ldr	r2, [r3, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 305              		.loc 2 4310 68 view .LVU93
 306 00f8 12F0010F 		tst	r2, #1
 307 00fc 09D1     		bne	.L11
 308              	.LVL33:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 309              		.loc 2 4310 68 view .LVU94
 310              	.LBE43:
 311              	.LBE42:
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 312              		.loc 1 195 5 is_stmt 1 view .LVU95
 313 00fe DA68     		ldr	r2, [r3, #12]
 314 0100 3243     		orrs	r2, r2, r6
 315 0102 DA60     		str	r2, [r3, #12]
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 316              		.loc 1 198 5 view .LVU96
 317 0104 A36D     		ldr	r3, [r4, #88]
 318 0106 23F00303 		bic	r3, r3, #3
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 88


 319 010a 43F00103 		orr	r3, r3, #1
 320 010e A365     		str	r3, [r4, #88]
 321 0110 8FE7     		b	.L4
 322              	.LVL34:
 323              	.L11:
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 324              		.loc 1 178 7 view .LVU97
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 325              		.loc 1 178 12 is_stmt 0 view .LVU98
 326 0112 FFF7FEFF 		bl	HAL_GetTick
 327              	.LVL35:
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 328              		.loc 1 178 26 view .LVU99
 329 0116 C31B     		subs	r3, r0, r7
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       {
 330              		.loc 1 178 10 view .LVU100
 331 0118 022B     		cmp	r3, #2
 332 011a EBD9     		bls	.L10
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         {
 333              		.loc 1 181 9 is_stmt 1 view .LVU101
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         {
 334              		.loc 1 181 13 is_stmt 0 view .LVU102
 335 011c 2368     		ldr	r3, [r4]
 336              	.LVL36:
 337              	.LBB44:
 338              	.LBI44:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 339              		.loc 2 4308 26 is_stmt 1 view .LVU103
 340              	.LBB45:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 341              		.loc 2 4310 3 view .LVU104
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 342              		.loc 2 4310 12 is_stmt 0 view .LVU105
 343 011e 9B68     		ldr	r3, [r3, #8]
 344              	.LVL37:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 345              		.loc 2 4310 68 view .LVU106
 346 0120 13F0010F 		tst	r3, #1
 347 0124 E6D0     		beq	.L10
 348              	.LVL38:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 349              		.loc 2 4310 68 view .LVU107
 350              	.LBE45:
 351              	.LBE44:
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 352              		.loc 1 184 11 is_stmt 1 view .LVU108
 353 0126 A36D     		ldr	r3, [r4, #88]
 354 0128 43F01003 		orr	r3, r3, #16
 355 012c A365     		str	r3, [r4, #88]
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 356              		.loc 1 187 11 view .LVU109
 357 012e E36D     		ldr	r3, [r4, #92]
 358 0130 43F00103 		orr	r3, r3, #1
 359 0134 E365     		str	r3, [r4, #92]
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
 360              		.loc 1 189 11 view .LVU110
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 89


 361              		.loc 1 189 18 is_stmt 0 view .LVU111
 362 0136 0125     		movs	r5, #1
 363              	.LVL39:
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****         }
 364              		.loc 1 189 18 view .LVU112
 365 0138 7EE7     		b	.L2
 366              	.LVL40:
 367              	.L13:
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 368              		.loc 1 113 3 view .LVU113
 369 013a 0225     		movs	r5, #2
 370 013c 7CE7     		b	.L2
 371              		.cfi_endproc
 372              	.LFE851:
 374              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 375              		.align	1
 376              		.global	HAL_ADCEx_Calibration_GetValue
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
 381              	HAL_ADCEx_Calibration_GetValue:
 382              	.LVL41:
 383              	.LFB852:
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param hadc ADC handle.
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval Calibration value.
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef *hadc)
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
 384              		.loc 1 221 1 is_stmt 1 view -0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Check the parameters */
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 389              		.loc 1 223 3 view .LVU115
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   return ((hadc->Instance->CALFACT) & 0x0000007FU);
 390              		.loc 1 226 3 view .LVU116
 391              		.loc 1 226 16 is_stmt 0 view .LVU117
 392 0000 0368     		ldr	r3, [r0]
 393              		.loc 1 226 26 view .LVU118
 394 0002 D3F8B400 		ldr	r0, [r3, #180]
 395              	.LVL42:
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 396              		.loc 1 227 1 view .LVU119
 397 0006 00F07F00 		and	r0, r0, #127
 398 000a 7047     		bx	lr
 399              		.cfi_endproc
 400              	.LFE852:
 402              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 403              		.align	1
 404              		.global	HAL_ADCEx_Calibration_SetValue
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 90


 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	HAL_ADCEx_Calibration_SetValue:
 410              	.LVL43:
 411              	.LFB853:
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param hadc ADC handle
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval HAL state
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t CalibrationFacto
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
 412              		.loc 1 237 1 is_stmt 1 view -0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 417              		.loc 1 238 3 view .LVU121
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 418              		.loc 1 239 3 view .LVU122
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Check the parameters */
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 419              		.loc 1 242 3 view .LVU123
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 420              		.loc 1 243 3 view .LVU124
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 421              		.loc 1 245 3 view .LVU125
 422              		.loc 1 245 3 view .LVU126
 423 0000 90F85420 		ldrb	r2, [r0, #84]	@ zero_extendqisi2
 424 0004 012A     		cmp	r2, #1
 425 0006 2BD0     		beq	.L23
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 426              		.loc 1 237 1 is_stmt 0 discriminator 2 view .LVU127
 427 0008 10B4     		push	{r4}
 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 4, -4
 430 000a 0346     		mov	r3, r0
 431              		.loc 1 245 3 is_stmt 1 discriminator 2 view .LVU128
 432 000c 0122     		movs	r2, #1
 433 000e 80F85420 		strb	r2, [r0, #84]
 434              		.loc 1 245 3 discriminator 2 view .LVU129
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 435              		.loc 1 249 3 discriminator 2 view .LVU130
 436              		.loc 1 249 44 is_stmt 0 discriminator 2 view .LVU131
 437 0012 0068     		ldr	r0, [r0]
 438              	.LVL44:
 439              	.LBB46:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 91


 440              	.LBI46:
4371:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4372:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4373:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4374:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @}
4375:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4376:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4377:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4378:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @{
4379:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4380:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4381:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4382:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4383:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
4384:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4385:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4386:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           starts immediately.
4387:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4388:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4389:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *           following the ADC start conversion command.
4390:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4391:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4392:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4393:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4394:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4395:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4396:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4397:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4398:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4399:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4400:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4401:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4402:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4403:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4404:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4405:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4406:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTART);
4407:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4408:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4409:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4410:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4411:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4412:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC state:
4413:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4414:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   *         without ADC disable command on going.
4415:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4416:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4417:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval None
4418:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4419:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4420:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4421:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4422:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4423:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4424:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4425:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4426:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****              ADC_CR_ADSTP);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 92


4427:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
4428:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** 
4429:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** /**
4430:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4431:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4432:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @param  ADCx ADC instance
4433:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4434:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   */
4435:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 441              		.loc 2 4435 26 is_stmt 1 discriminator 2 view .LVU132
 442              	.LBB47:
4436:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
4437:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 443              		.loc 2 4437 3 discriminator 2 view .LVU133
 444              		.loc 2 4437 12 is_stmt 0 discriminator 2 view .LVU134
 445 0014 8268     		ldr	r2, [r0, #8]
 446              		.loc 2 4437 74 discriminator 2 view .LVU135
 447 0016 12F00402 		ands	r2, r2, #4
 448 001a 00D0     		beq	.L20
 449              		.loc 2 4437 74 view .LVU136
 450 001c 0122     		movs	r2, #1
 451              	.L20:
 452              	.LVL45:
 453              		.loc 2 4437 74 view .LVU137
 454              	.LBE47:
 455              	.LBE46:
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 456              		.loc 1 251 3 is_stmt 1 view .LVU138
 457              	.LBB48:
 458              	.LBI48:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 459              		.loc 2 4308 26 view .LVU139
 460              	.LBB49:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 461              		.loc 2 4310 3 view .LVU140
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 462              		.loc 2 4310 12 is_stmt 0 view .LVU141
 463 001e 8468     		ldr	r4, [r0, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 464              		.loc 2 4310 68 view .LVU142
 465 0020 14F0010F 		tst	r4, #1
 466 0024 0ED0     		beq	.L21
 467              	.LVL46:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 468              		.loc 2 4310 68 view .LVU143
 469              	.LBE49:
 470              	.LBE48:
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 471              		.loc 1 252 7 view .LVU144
 472 0026 6AB9     		cbnz	r2, .L21
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****      )
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   {
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     hadc->Instance->CALFACT &= ~ADC_CALFACT_CALFACT;
 473              		.loc 1 255 5 is_stmt 1 view .LVU145
 474              		.loc 1 255 19 is_stmt 0 view .LVU146
 475 0028 D0F8B420 		ldr	r2, [r0, #180]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 93


 476              	.LVL47:
 477              		.loc 1 255 29 view .LVU147
 478 002c 22F07F02 		bic	r2, r2, #127
 479 0030 C0F8B420 		str	r2, [r0, #180]
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     hadc->Instance->CALFACT |= CalibrationFactor;
 480              		.loc 1 256 5 is_stmt 1 view .LVU148
 481              		.loc 1 256 9 is_stmt 0 view .LVU149
 482 0034 1868     		ldr	r0, [r3]
 483              		.loc 1 256 19 view .LVU150
 484 0036 D0F8B420 		ldr	r2, [r0, #180]
 485              		.loc 1 256 29 view .LVU151
 486 003a 0A43     		orrs	r2, r2, r1
 487 003c C0F8B420 		str	r2, [r0, #180]
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 488              		.loc 1 238 21 view .LVU152
 489 0040 0020     		movs	r0, #0
 490              		.loc 1 256 29 view .LVU153
 491 0042 08E0     		b	.L22
 492              	.LVL48:
 493              	.L21:
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   }
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   else
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   {
 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Update ADC state machine */
 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 494              		.loc 1 261 5 is_stmt 1 view .LVU154
 495 0044 9A6D     		ldr	r2, [r3, #88]
 496              	.LVL49:
 497              		.loc 1 261 5 is_stmt 0 view .LVU155
 498 0046 42F02002 		orr	r2, r2, #32
 499 004a 9A65     		str	r2, [r3, #88]
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Update ADC error code */
 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 500              		.loc 1 263 5 is_stmt 1 view .LVU156
 501 004c DA6D     		ldr	r2, [r3, #92]
 502 004e 42F00102 		orr	r2, r2, #1
 503 0052 DA65     		str	r2, [r3, #92]
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 504              		.loc 1 266 5 view .LVU157
 505              	.LVL50:
 506              		.loc 1 266 20 is_stmt 0 view .LVU158
 507 0054 0120     		movs	r0, #1
 508              	.LVL51:
 509              	.L22:
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   }
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 510              		.loc 1 269 3 is_stmt 1 view .LVU159
 511              		.loc 1 269 3 view .LVU160
 512 0056 0022     		movs	r2, #0
 513 0058 83F85420 		strb	r2, [r3, #84]
 514              		.loc 1 269 3 view .LVU161
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   return tmp_hal_status;
 515              		.loc 1 271 3 view .LVU162
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 94


 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 516              		.loc 1 272 1 is_stmt 0 view .LVU163
 517 005c 10BC     		pop	{r4}
 518              		.cfi_restore 4
 519              		.cfi_def_cfa_offset 0
 520 005e 7047     		bx	lr
 521              	.LVL52:
 522              	.L23:
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 523              		.loc 1 245 3 view .LVU164
 524 0060 0220     		movs	r0, #2
 525              	.LVL53:
 526              		.loc 1 272 1 view .LVU165
 527 0062 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE853:
 531              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 532              		.align	1
 533              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	HAL_ADCEx_LevelOutOfWindow2Callback:
 539              	.LVL54:
 540              	.LFB854:
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param hadc ADC handle
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval None
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
 541              		.loc 1 280 1 is_stmt 1 view -0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              		@ link register save eliminated.
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   UNUSED(hadc);
 546              		.loc 1 282 3 view .LVU167
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 547              		.loc 1 287 1 is_stmt 0 view .LVU168
 548 0000 7047     		bx	lr
 549              		.cfi_endproc
 550              	.LFE854:
 552              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
 553              		.align	1
 554              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 559              	HAL_ADCEx_LevelOutOfWindow3Callback:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 95


 560              	.LVL55:
 561              	.LFB855:
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param hadc ADC handle
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval None
 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
 562              		.loc 1 295 1 is_stmt 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   UNUSED(hadc);
 567              		.loc 1 297 3 view .LVU170
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 568              		.loc 1 302 1 is_stmt 0 view .LVU171
 569 0000 7047     		bx	lr
 570              		.cfi_endproc
 571              	.LFE855:
 573              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 574              		.align	1
 575              		.weak	HAL_ADCEx_EndOfSamplingCallback
 576              		.syntax unified
 577              		.thumb
 578              		.thumb_func
 580              	HAL_ADCEx_EndOfSamplingCallback:
 581              	.LVL56:
 582              	.LFB856:
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param hadc ADC handle
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval None
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
 583              		.loc 1 311 1 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		@ link register save eliminated.
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   UNUSED(hadc);
 588              		.loc 1 313 3 view .LVU173
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 96


 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 589              		.loc 1 318 1 is_stmt 0 view .LVU174
 590 0000 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE856:
 594              		.section	.text.HAL_ADCEx_ChannelConfigReadyCallback,"ax",%progbits
 595              		.align	1
 596              		.weak	HAL_ADCEx_ChannelConfigReadyCallback
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 601              	HAL_ADCEx_ChannelConfigReadyCallback:
 602              	.LVL57:
 603              	.LFB857:
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  ADC channel configuration ready callback in non-blocking mode.
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param hadc ADC handle
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval None
 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** __weak void HAL_ADCEx_ChannelConfigReadyCallback(ADC_HandleTypeDef *hadc)
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
 604              		.loc 1 326 1 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 0
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		@ link register save eliminated.
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   UNUSED(hadc);
 609              		.loc 1 328 3 view .LVU176
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****             function HAL_ADCEx_ChannelConfigReadyCallback must be implemented in the user file.
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 610              		.loc 1 333 1 is_stmt 0 view .LVU177
 611 0000 7047     		bx	lr
 612              		.cfi_endproc
 613              	.LFE857:
 615              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 616              		.align	1
 617              		.global	HAL_ADCEx_DisableVoltageRegulator
 618              		.syntax unified
 619              		.thumb
 620              		.thumb_func
 622              	HAL_ADCEx_DisableVoltageRegulator:
 623              	.LVL58:
 624              	.LFB858:
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @}
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** /**
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 97


 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @param hadc ADC handle
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   * @retval HAL status
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   */
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** {
 625              		.loc 1 349 1 is_stmt 1 view -0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629              		@ link register save eliminated.
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 630              		.loc 1 350 3 view .LVU179
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Check the parameters */
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 631              		.loc 1 353 3 view .LVU180
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 632              		.loc 1 356 3 view .LVU181
 633              		.loc 1 356 7 is_stmt 0 view .LVU182
 634 0000 0368     		ldr	r3, [r0]
 635              	.LVL59:
 636              	.LBB50:
 637              	.LBI50:
4308:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 638              		.loc 2 4308 26 is_stmt 1 view .LVU183
 639              	.LBB51:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 640              		.loc 2 4310 3 view .LVU184
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 641              		.loc 2 4310 12 is_stmt 0 view .LVU185
 642 0002 9A68     		ldr	r2, [r3, #8]
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 643              		.loc 2 4310 68 view .LVU186
 644 0004 12F0010F 		tst	r2, #1
 645 0008 07D1     		bne	.L34
 646              	.LVL60:
4310:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 647              		.loc 2 4310 68 view .LVU187
 648              	.LBE51:
 649              	.LBE50:
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   {
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 650              		.loc 1 358 5 is_stmt 1 view .LVU188
 651              	.LBB52:
 652              	.LBI52:
4237:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** {
 653              		.loc 2 4237 22 view .LVU189
 654              	.LBB53:
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 655              		.loc 2 4239 3 view .LVU190
 656 000a 9A68     		ldr	r2, [r3, #8]
 657 000c 22F01042 		bic	r2, r2, #-1879048192
 658 0010 22F01702 		bic	r2, r2, #23
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 98


 659 0014 9A60     		str	r2, [r3, #8]
 660              	.LVL61:
4239:Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_adc.h **** }
 661              		.loc 2 4239 3 is_stmt 0 view .LVU191
 662              	.LBE53:
 663              	.LBE52:
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 664              		.loc 1 359 5 is_stmt 1 view .LVU192
 665              		.loc 1 359 20 is_stmt 0 view .LVU193
 666 0016 0020     		movs	r0, #0
 667              	.LVL62:
 668              		.loc 1 359 20 view .LVU194
 669 0018 7047     		bx	lr
 670              	.LVL63:
 671              	.L34:
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   }
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   else
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   {
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 672              		.loc 1 363 20 view .LVU195
 673 001a 0120     		movs	r0, #1
 674              	.LVL64:
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   }
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** 
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c ****   return tmp_hal_status;
 675              		.loc 1 366 3 is_stmt 1 view .LVU196
 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_adc_ex.c **** }
 676              		.loc 1 367 1 is_stmt 0 view .LVU197
 677 001c 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE858:
 681              		.text
 682              	.Letext0:
 683              		.file 3 "c:\\users\\david.fobar\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode
 684              		.file 4 "c:\\users\\david.fobar\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode
 685              		.file 5 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 686              		.file 6 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wlxx.h"
 687              		.file 7 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 688              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_dma.h"
 689              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_adc.h"
 690              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 691              		.file 11 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s 			page 99


DEFINED SYMBOLS
                            *ABS*:00000000 stm32wlxx_hal_adc_ex.c
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:19     .text.HAL_ADCEx_Calibration_Start:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:25     .text.HAL_ADCEx_Calibration_Start:00000000 HAL_ADCEx_Calibration_Start
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:375    .text.HAL_ADCEx_Calibration_GetValue:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:381    .text.HAL_ADCEx_Calibration_GetValue:00000000 HAL_ADCEx_Calibration_GetValue
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:403    .text.HAL_ADCEx_Calibration_SetValue:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:409    .text.HAL_ADCEx_Calibration_SetValue:00000000 HAL_ADCEx_Calibration_SetValue
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:532    .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:538    .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 HAL_ADCEx_LevelOutOfWindow2Callback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:553    .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:559    .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 HAL_ADCEx_LevelOutOfWindow3Callback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:574    .text.HAL_ADCEx_EndOfSamplingCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:580    .text.HAL_ADCEx_EndOfSamplingCallback:00000000 HAL_ADCEx_EndOfSamplingCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:595    .text.HAL_ADCEx_ChannelConfigReadyCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:601    .text.HAL_ADCEx_ChannelConfigReadyCallback:00000000 HAL_ADCEx_ChannelConfigReadyCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:616    .text.HAL_ADCEx_DisableVoltageRegulator:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc8PhdjZ.s:622    .text.HAL_ADCEx_DisableVoltageRegulator:00000000 HAL_ADCEx_DisableVoltageRegulator

UNDEFINED SYMBOLS
ADC_Disable
HAL_GetTick
