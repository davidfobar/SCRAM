ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32wlxx_hal_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c"
  18              		.section	.text.FLASH_Program_DoubleWord,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	FLASH_Program_DoubleWord:
  25              	.LVL0:
  26              	.LFB863:
   1:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
   2:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
   3:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @file    stm32wlxx_hal_flash.c
   4:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @author  MCD Application Team
   5:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *           + Program operations functions
   9:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *           + Memory Control functions
  10:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *           + Peripheral Errors functions
  11:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  12:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
  13:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @attention
  14:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  15:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * Copyright (c) 2020 STMicroelectronics.
  16:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * All rights reserved.
  17:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  18:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * in the root directory of this software component.
  20:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
  22:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
  23:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  @verbatim
  24:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ==============================================================================
  25:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                         ##### FLASH peripheral features #####
  26:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ==============================================================================
  27:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  28:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses
  29:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  30:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        and the read and write protection mechanisms.
  31:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  32:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 2


  33:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        prefetch and cache lines.
  34:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  35:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   [..] The FLASH main features are:
  36:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Flash memory read operations
  37:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Flash memory program/erase operations
  38:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Program and Erase suspension
  39:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Read / write protections (2 areas per features)
  40:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) CPU2 Security area
  41:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Option bytes programming
  42:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Prefetch on CPU1 I-Code and CPU2 S-bus
  43:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 32 instruction cache lines of 4*64 bits on I-Code for CPU1
  44:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 8 data cache lines of 4*64 bits on D-Code for CPU1
  45:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 4 instruction cache lines of 1*64 bits on S-bus for CPU2
  46:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) 4 data cache lines of 1*64 bits on S-Bus for CPU2
  47:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 72-bits word
  48:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****           (8 bits added per double word)
  49:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  50:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                         ##### How to use this driver #####
  51:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ==============================================================================
  52:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
  53:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  54:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       memory of all STM32WLxx devices.
  55:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  56:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (#) Flash Memory IO Programming functions:
  57:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  58:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  59:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Program functions: double word and fast program (full row programming)
  60:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) There are two modes of programming:
  61:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  62:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  63:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  64:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (#) Interrupts and flags management functions:
  65:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  66:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  67:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  68:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  69:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Get error flag status by calling HAL_GetError()
  70:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  71:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       (#) Option bytes management functions :
  72:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  73:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  74:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_OB_Launch() function.
  75:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 In this case, a reset is generated
  76:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  77:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
  78:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  79:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       to handle the following operations:
  80:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Set the latency
  81:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  82:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the suspend program or erase request
  83:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  84:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  85:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Enable/Disable the Flash interrupts
  86:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****        (+) Monitor the Flash flags status
  87:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  88:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  @endverbatim
  89:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   ******************************************************************************
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 3


  90:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
  91:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  92:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  93:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #include "stm32wlxx_hal.h"
  94:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  95:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup STM32WLxx_HAL_Driver
  96:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
  97:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
  98:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
  99:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH FLASH
 100:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief FLASH HAL module driver
 101:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 102:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 103:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 104:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 105:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 106:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 107:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private defines -----------------------------------------------------------*/
 108:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 109:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 110:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 111:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #define FLASH_NB_DOUBLE_WORDS_IN_ROW  32
 112:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 113:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 114:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 115:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 116:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private macros ------------------------------------------------------------*/
 117:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 118:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Private_Variables FLASH Private Variables
 119:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  * @{
 120:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  */
 121:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 122:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Variable used for Program/Erase sectors under interruption
 123:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 124:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** FLASH_ProcessTypeDef pFlash = {.Lock = HAL_UNLOCKED, \
 125:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .ErrorCode = HAL_FLASH_ERROR_NONE, \
 126:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .ProcedureOnGoing = 0U, \
 127:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .Address = 0U, \
 128:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .Page = 0U, \
 129:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                                .NbPagesToErase = 0U
 130:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                               };
 131:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 132:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 133:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 134:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 135:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 136:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private Functions
 137:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  * @{
 138:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  */
 139:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void          FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 140:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void          FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress);
 141:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 142:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 143:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 144:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 145:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 146:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 4


 147:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 148:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 149:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 150:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 151:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Programming operation functions
 152:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *
 153:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 154:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 155:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                   ##### Programming operation functions #####
 156:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 157:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
 158:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 159:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     program operations.
 160:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 161:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 162:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 163:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 164:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 165:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 166:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address.
 167:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @note   Before any operation, it is possible to check there is no operation suspended
 168:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *         by call HAL_FLASHEx_IsOperationSuspended()
 169:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address
 170:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                       This parameter can be a value of @ref FLASH_TYPE_PROGRAM
 171:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 172:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed
 173:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 174:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                are stored the data for the row fast program.
 175:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
 176:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 177:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 178:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 181:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 182:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Check the parameters */
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 186:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 187:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Process Locked */
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 189:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 190:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Reset error code */
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 192:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 193:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Verify that next operation can be proceed */
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 195:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (status == HAL_OK)
 197:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 199:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 200:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 202:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 203:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 5


 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 205:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 206:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     else
 207:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 208:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_FAST_PROGRAM_ADDRESS(Address));
 210:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 211:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Fast program a 32 double-word (64-bit) row at a specified address */
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 213:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 214:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 215:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Wait for last operation to be completed */
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 217:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 218:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* If the program operation is completed, disable the PG or FSTPG Bit */
 219:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 220:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     CLEAR_BIT(FLASH->C2CR, TypeProgram);
 221:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     CLEAR_BIT(FLASH->CR, TypeProgram);
 223:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 224:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 225:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 226:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Process Unlocked */
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 228:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 229:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* return status */
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 232:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 233:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 234:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address with interrupt enab
 235:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @note   Before any operation, it is possible to check there is no operation suspended
 236:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *         by call HAL_FLASHEx_IsOperationSuspended()
 237:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  TypeProgram Indicate the way to program at a specified address.
 238:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_TYPE_PROGRAM
 239:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 240:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed
 241:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 242:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                are stored the data for the row fast program.
 243:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *
 244:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 245:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 246:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 249:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 250:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Check the parameters */
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 254:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 255:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Process Locked */
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 257:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 258:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Reset error code */
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 260:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 6


 261:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Verify that next operation can be proceed */
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 263:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (status != HAL_OK)
 265:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 266:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Process Unlocked */
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 268:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 269:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   else
 270:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 271:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Set internal variables used by the IRQ handler */
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ProcedureOnGoing = TypeProgram;
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 274:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 275:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Enable End of Operation and Error interrupts */
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR | FLASH_IT_ECCC);
 277:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 279:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 280:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 282:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 283:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 285:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 286:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     else
 287:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 288:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check the parameters */
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       assert_param(IS_FLASH_FAST_PROGRAM_ADDRESS(Address));
 290:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 291:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Fast program a 32 double-word (64-bit) row at a specified address */
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 293:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 294:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 295:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 296:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* return status */
 297:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 299:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 300:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 301:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief Handle FLASH interrupt request.
 302:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 303:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 304:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t param = 0xFFFFFFFFU;
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 308:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 309:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Save flash errors. Only ECC detection can be checked here as ECCC
 310:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      generates NMI */
 311:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 312:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = (FLASH->C2SR & FLASH_FLAG_SR_ERRORS);
 313:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 314:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Clear Current operation */
 315:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   CLEAR_BIT(FLASH->C2CR, pFlash.ProcedureOnGoing);
 316:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = (FLASH->SR & FLASH_FLAG_SR_ERRORS);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 7


 318:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 319:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Clear Current operation */
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   CLEAR_BIT(FLASH->CR, pFlash.ProcedureOnGoing);
 321:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 322:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 323:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* A] Set parameter for user or error callbacks */
 324:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* check operation was a program or erase */
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if ((pFlash.ProcedureOnGoing & (FLASH_TYPEPROGRAM_DOUBLEWORD | FLASH_TYPEPROGRAM_FAST)) != 0U)
 326:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 327:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* return address being programmed */
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     param = pFlash.Address;
 329:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   else if ((pFlash.ProcedureOnGoing & (FLASH_TYPEERASE_MASSERASE | FLASH_TYPEERASE_PAGES)) != 0U)
 331:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 332:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* return page number being erased (0 for mass erase) */
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     param = pFlash.Page;
 334:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 335:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   else
 336:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 337:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* No Procedure on-going */
 338:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Nothing to do, but check error if any */
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 340:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 341:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* B] Check errors */
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (error != 0U)
 343:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 344:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /*Save the error code*/
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ErrorCode |= error;
 346:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 347:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* clear error flags */
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(error);
 349:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 350:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /*Stop the procedure ongoing*/
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 352:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 353:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Error callback */
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(param);
 355:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 356:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 357:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* C] Check FLASH End of Operation flag */
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP))
 359:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 360:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 362:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (pFlash.ProcedureOnGoing == FLASH_TYPEERASE_PAGES)
 364:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 365:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Nb of pages to erased can be decreased */
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       pFlash.NbPagesToErase--;
 367:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 368:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /* Check if there are still pages to erase*/
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       if (pFlash.NbPagesToErase != 0U)
 370:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 371:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         /* Increment page number */
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         pFlash.Page++;
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 374:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 8


 375:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       else
 376:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 377:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         /* No more pages to erase: stop erase pages procedure */
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 379:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 380:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 381:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     else
 382:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 383:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       /*Stop the ongoing procedure */
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_TYPENONE;
 385:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 386:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 387:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* User callback */
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     HAL_FLASH_EndOfOperationCallback(param);
 389:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 390:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (pFlash.ProcedureOnGoing == FLASH_TYPENONE)
 392:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 393:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Disable End of Operation and Error interrupts */
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR | FLASH_IT_ECCC);
 395:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 396:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Process Unlocked */
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 398:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 400:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 401:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 402:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback.
 403:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 404:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                  Mass Erase: 0
 405:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                  Page Erase: Page which has been erased
 406:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                  Program: Address which was selected for data program
 407:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 408:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 409:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 411:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   UNUSED(ReturnValue);
 413:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 414:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 415:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 416:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****    */
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 418:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 419:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 420:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback.
 421:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  ReturnValue The value saved in this parameter depends on the ongoing procedure
 422:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                 Mass Erase: 0
 423:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                 Page Erase: Page number which returned an error
 424:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *                 Program: Address which was selected for data program
 425:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 426:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 427:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 429:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   UNUSED(ReturnValue);
 431:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 9


 432:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 433:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 434:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****    */
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 436:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 437:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 438:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 439:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 440:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 441:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 442:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Management functions
 443:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *
 444:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 445:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 446:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                       ##### Peripheral Control functions #####
 447:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 448:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
 449:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 450:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     memory operations.
 451:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 452:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 453:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 454:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 455:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 456:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 457:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Unlock the FLASH control register access.
 458:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 459:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 460:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 463:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 465:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 466:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 469:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 470:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* verify Flash is unlock */
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 472:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       status = HAL_ERROR;
 474:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 475:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 476:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 479:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 480:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 481:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Lock the FLASH control register access.
 482:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 483:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 484:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 487:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 488:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 10


 489:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* @Note  The lock and unlock procedure is done only using CR registers even from CPU2 */
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_LOCK);
 491:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 492:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* verify Flash is locked */
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_LOCK) == 0U)
 494:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     status = HAL_ERROR;
 496:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 497:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 500:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 501:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 502:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Unlock the FLASH Option Bytes Registers access.
 503:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 504:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 505:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 508:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 509:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* @Note The lock and unlock procedure is done only using CR registers even from CPU2 */
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) != 0U)
 511:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 512:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY1);
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 515:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 516:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* verify option bytes are unlocked */
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) == 0U)
 518:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       status = HAL_OK;
 520:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 521:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 522:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 525:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 526:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 527:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Lock the FLASH Option Bytes Registers access.
 528:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 529:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 530:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 533:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 534:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 535:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* @Note The lock and unlock procedure is done only using CR registers even from CPU2 */
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OPTLOCK);
 537:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 538:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* verify option bytes are lock */
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) == 0U)
 540:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     status = HAL_ERROR;
 542:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 543:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return status;
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 11


 546:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 547:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 548:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Launch the option byte loading.
 549:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL Status
 550:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 551:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 553:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 554:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* The OB launch is done from the same register either from CPU1 or CPU2 */
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OBL_LAUNCH);
 556:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 557:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* We should not reach here : Option byte launch generates Option byte reset
 558:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      so return error */
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return HAL_ERROR;
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 561:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 562:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 563:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 564:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 565:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 566:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 567:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 568:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  *
 569:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @verbatim
 570:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 571:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 572:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****  ===============================================================================
 573:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     [..]
 574:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 575:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 576:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** @endverbatim
 577:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 578:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 579:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 580:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 581:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 582:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval FLASH_ErrorCode The returned value can be
 583:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_NONE No error set
 584:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_OP FLASH Operation error
 585:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PROG FLASH Programming error
 586:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_WRP FLASH Write protection error
 587:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PGA FLASH Programming alignment error
 588:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_SIZ FLASH Size error
 589:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_PGS FLASH Programming sequence error
 590:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_MIS FLASH Fast programming data miss error
 591:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_FAST FLASH Fast programming error
 592:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_RD FLASH Read Protection error (PCROP)
 593:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *            @arg @ref HAL_FLASH_ERROR_OPTV FLASH Option validity error
 594:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 595:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return pFlash.ErrorCode;
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 599:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 600:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 601:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 602:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 12


 603:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 604:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 605:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @}
 606:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 607:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 608:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 609:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 610:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 611:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @{
 612:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 613:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 614:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 615:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 616:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Timeout Maximum flash operation timeout
 617:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 618:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 619:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 623:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 624:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 625:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 626:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      flag will be set */
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY))
 628:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if ((HAL_GetTick() - tickstart) >= Timeout)
 630:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       return HAL_TIMEOUT;
 632:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 633:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 634:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 635:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* check flash errors. Only ECC correction can be checked here as ECCD
 636:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       generates NMI */
 637:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 638:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = FLASH->C2SR;
 639:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error = FLASH->SR;
 641:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 642:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 643:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Check FLASH End of Operation flag */
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if ((error & FLASH_FLAG_EOP) != 0U)
 645:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 646:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 648:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 649:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 650:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Now update error variable to only error value */
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   error &= FLASH_FLAG_SR_ERRORS;
 652:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 653:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* clear error flags */
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(error);
 655:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   if (error != 0U)
 657:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 658:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     /*Save the error code*/
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.ErrorCode = error;
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 13


 660:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     return HAL_ERROR;
 662:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 663:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 664:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Wait for control register to be written */
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_CFGBSY))
 666:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     if ((HAL_GetTick() - tickstart) >= Timeout)
 668:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       return HAL_TIMEOUT;
 670:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 671:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 672:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return HAL_OK;
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 675:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 676:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 677:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Program double-word (64-bit) at a specified address.
 678:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 679:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Data Specifies the data to be programmed.
 680:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 681:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 682:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 683:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
  27              		.loc 1 683 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              		.loc 1 683 1 is_stmt 0 view .LVU1
  33 0000 10B4     		push	{r4}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 4, -4
 684:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 685:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set PG bit */
 686:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->C2CR, FLASH_CR_PG);
 687:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 688:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set PG bit */
 689:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_PG);
  36              		.loc 1 689 3 is_stmt 1 view .LVU2
  37 0002 054C     		ldr	r4, .L3
  38 0004 6169     		ldr	r1, [r4, #20]
  39 0006 41F00101 		orr	r1, r1, #1
  40 000a 6161     		str	r1, [r4, #20]
 690:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 691:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 692:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Program first word */
 693:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *(uint32_t *)Address = (uint32_t)Data;
  41              		.loc 1 693 3 view .LVU3
  42              		.loc 1 693 24 is_stmt 0 view .LVU4
  43 000c 0260     		str	r2, [r0]
 694:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 695:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 696:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     (independently of compiler optimization behavior) */
 697:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __ISB();
  44              		.loc 1 697 3 is_stmt 1 view .LVU5
  45              	.LBB10:
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 14


  46              	.LBI10:
  47              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 15


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 16


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 17


 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 18


 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 19


 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 20


 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 21


 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 22


 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 23


 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 24


 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 25


 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 26


 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 27


 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 28


 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 29


 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 30


 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
  48              		.loc 2 933 27 view .LVU6
  49              	.LBB11:
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
  50              		.loc 2 935 3 view .LVU7
  51              		.syntax unified
  52              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  53 000e BFF36F8F 		isb 0xF
  54              	@ 0 "" 2
  55              		.thumb
  56              		.syntax unified
  57              	.LBE11:
  58              	.LBE10:
 698:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 699:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Program second word */
 700:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   *(uint32_t *)(Address + 4U) = (uint32_t)(Data >> 32U);
  59              		.loc 1 700 3 view .LVU8
  60              		.loc 1 700 31 is_stmt 0 view .LVU9
  61 0012 4360     		str	r3, [r0, #4]
 701:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
  62              		.loc 1 701 1 view .LVU10
  63 0014 10BC     		pop	{r4}
  64              		.cfi_restore 4
  65              		.cfi_def_cfa_offset 0
  66 0016 7047     		bx	lr
  67              	.L4:
  68              		.align	2
  69              	.L3:
  70 0018 00400058 		.word	1476411392
  71              		.cfi_endproc
  72              	.LFE863:
  74              		.section	.text.FLASH_Program_Fast,"ax",%progbits
  75              		.align	1
  76              		.syntax unified
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 31


  77              		.thumb
  78              		.thumb_func
  80              	FLASH_Program_Fast:
  81              	.LVL1:
  82              	.LFB864:
 702:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 703:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** /**
 704:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @brief  Fast program a 32 row double-word (64-bit) at a specified address.
 705:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  Address Specifies the address to be programmed.
 706:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @param  DataAddress Specifies the address where the data are stored.
 707:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   * @retval None
 708:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   */
 709:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 710:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static __RAM_FUNC void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 711:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 712:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** static void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 713:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 714:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** {
  83              		.loc 1 714 1 is_stmt 1 view -0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint8_t row_index = (2 * FLASH_NB_DOUBLE_WORDS_IN_ROW);
  88              		.loc 1 715 3 view .LVU12
 716:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)Address;
  89              		.loc 1 716 3 view .LVU13
 717:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t *)DataAddress;
  90              		.loc 1 717 3 view .LVU14
 718:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t primask_bit;
  91              		.loc 1 718 3 view .LVU15
 719:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 720:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set FSTPG bit */
 721:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #ifdef CORE_CM0PLUS
 722:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->C2CR, FLASH_CR_FSTPG);
 723:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #else
 724:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
  92              		.loc 1 724 3 view .LVU16
  93 0000 0C4A     		ldr	r2, .L8
  94 0002 5369     		ldr	r3, [r2, #20]
  95 0004 43F48023 		orr	r3, r3, #262144
  96 0008 5361     		str	r3, [r2, #20]
 725:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 726:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 727:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Enter critical section: row programming should not be longer than 7 ms */
 728:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   primask_bit = __get_PRIMASK();
  97              		.loc 1 728 3 view .LVU17
  98              	.LBB12:
  99              	.LBI12:
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 100              		.loc 2 449 31 view .LVU18
 101              	.LBB13:
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 102              		.loc 2 451 3 view .LVU19
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 103              		.loc 2 453 3 view .LVU20
 104              		.syntax unified
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 32


 105              	@ 453 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 106 000a EFF3108C 		MRS ip, primask
 107              	@ 0 "" 2
 108              	.LVL2:
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 109              		.loc 2 454 3 view .LVU21
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 110              		.loc 2 454 3 is_stmt 0 view .LVU22
 111              		.thumb
 112              		.syntax unified
 113              	.LBE13:
 114              	.LBE12:
 729:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __disable_irq();
 115              		.loc 1 729 3 is_stmt 1 view .LVU23
 116              	.LBB14:
 117              	.LBI14:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 118              		.loc 2 207 27 view .LVU24
 119              	.LBB15:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 120              		.loc 2 209 3 view .LVU25
 121              		.syntax unified
 122              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 123 000e 72B6     		cpsid i
 124              	@ 0 "" 2
 125              		.thumb
 126              		.syntax unified
 127              	.LBE15:
 128              	.LBE14:
 715:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t *)Address;
 129              		.loc 1 715 11 is_stmt 0 view .LVU26
 130 0010 4023     		movs	r3, #64
 131              	.LVL3:
 132              	.L6:
 730:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 731:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Program the double word of the row */
 732:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   do
 133              		.loc 1 732 3 is_stmt 1 discriminator 1 view .LVU27
 733:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 734:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     *dest_addr = *src_addr;
 134              		.loc 1 734 5 discriminator 1 view .LVU28
 135              		.loc 1 734 18 is_stmt 0 discriminator 1 view .LVU29
 136 0012 51F8042B 		ldr	r2, [r1], #4
 137              	.LVL4:
 138              		.loc 1 734 16 discriminator 1 view .LVU30
 139 0016 40F8042B 		str	r2, [r0], #4
 140              	.LVL5:
 735:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     dest_addr++;
 141              		.loc 1 735 5 is_stmt 1 discriminator 1 view .LVU31
 736:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     src_addr++;
 142              		.loc 1 736 5 discriminator 1 view .LVU32
 737:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     row_index--;
 143              		.loc 1 737 5 discriminator 1 view .LVU33
 144              		.loc 1 737 14 is_stmt 0 discriminator 1 view .LVU34
 145 001a 013B     		subs	r3, r3, #1
 146              	.LVL6:
 738:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 33


 739:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (row_index != 0U);
 147              		.loc 1 739 20 is_stmt 1 discriminator 1 view .LVU35
 148 001c 13F0FF03 		ands	r3, r3, #255
 149              	.LVL7:
 150              		.loc 1 739 20 is_stmt 0 discriminator 1 view .LVU36
 151 0020 F7D1     		bne	.L6
 152              	.L7:
 740:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 741:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* wait for BSY in order to be sure that flash operation is ended before
 742:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      allowing prefetch in flash. Timeout does not return status, as it will
 743:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****      be anyway done later */
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   while (__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != 0U)
 745:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 746:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 153              		.loc 1 746 3 is_stmt 1 discriminator 1 view .LVU37
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 154              		.loc 1 744 47 discriminator 1 view .LVU38
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 155              		.loc 1 744 10 is_stmt 0 discriminator 1 view .LVU39
 156 0022 044B     		ldr	r3, .L8
 157 0024 1B69     		ldr	r3, [r3, #16]
 744:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 158              		.loc 1 744 47 discriminator 1 view .LVU40
 159 0026 13F4803F 		tst	r3, #65536
 160 002a FAD1     		bne	.L7
 747:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 748:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Exit critical section: restore previous priority mask */
 749:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 161              		.loc 1 749 3 is_stmt 1 view .LVU41
 162              	.LBB16:
 163              	.LBI16:
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164              		.loc 2 479 27 view .LVU42
 165              	.LBB17:
 481:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166              		.loc 2 481 3 view .LVU43
 167              		.syntax unified
 168              	@ 481 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 169 002c 8CF31088 		MSR primask, ip
 170              	@ 0 "" 2
 171              		.thumb
 172              		.syntax unified
 173              	.LBE17:
 174              	.LBE16:
 750:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 175              		.loc 1 750 1 is_stmt 0 view .LVU44
 176 0030 7047     		bx	lr
 177              	.L9:
 178 0032 00BF     		.align	2
 179              	.L8:
 180 0034 00400058 		.word	1476411392
 181              		.cfi_endproc
 182              	.LFE864:
 184              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 185              		.align	1
 186              		.weak	HAL_FLASH_EndOfOperationCallback
 187              		.syntax unified
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 34


 188              		.thumb
 189              		.thumb_func
 191              	HAL_FLASH_EndOfOperationCallback:
 192              	.LVL8:
 193              	.LFB854:
 410:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 194              		.loc 1 410 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 412:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 199              		.loc 1 412 3 view .LVU46
 417:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 200              		.loc 1 417 1 is_stmt 0 view .LVU47
 201 0000 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE854:
 205              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 206              		.align	1
 207              		.weak	HAL_FLASH_OperationErrorCallback
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 212              	HAL_FLASH_OperationErrorCallback:
 213              	.LVL9:
 214              	.LFB855:
 428:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 215              		.loc 1 428 1 is_stmt 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 430:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 220              		.loc 1 430 3 view .LVU49
 435:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 221              		.loc 1 435 1 is_stmt 0 view .LVU50
 222 0000 7047     		bx	lr
 223              		.cfi_endproc
 224              	.LFE855:
 226              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 227              		.align	1
 228              		.global	HAL_FLASH_IRQHandler
 229              		.syntax unified
 230              		.thumb
 231              		.thumb_func
 233              	HAL_FLASH_IRQHandler:
 234              	.LFB853:
 305:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t param = 0xFFFFFFFFU;
 235              		.loc 1 305 1 is_stmt 1 view -0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 10B5     		push	{r4, lr}
 240              		.cfi_def_cfa_offset 8
 241              		.cfi_offset 4, -8
 242              		.cfi_offset 14, -4
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 35


 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 243              		.loc 1 306 3 view .LVU52
 244              	.LVL10:
 307:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 245              		.loc 1 307 3 view .LVU53
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 246              		.loc 1 317 3 view .LVU54
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 247              		.loc 1 317 17 is_stmt 0 view .LVU55
 248 0002 2D4A     		ldr	r2, .L26
 249 0004 1369     		ldr	r3, [r2, #16]
 317:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 250              		.loc 1 317 9 view .LVU56
 251 0006 23F47053 		bic	r3, r3, #15360
 252 000a 23F00503 		bic	r3, r3, #5
 253 000e 1B04     		lsls	r3, r3, #16
 254 0010 1B0C     		lsrs	r3, r3, #16
 255              	.LVL11:
 320:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 256              		.loc 1 320 3 is_stmt 1 view .LVU57
 257 0012 5169     		ldr	r1, [r2, #20]
 258 0014 2948     		ldr	r0, .L26+4
 259 0016 8068     		ldr	r0, [r0, #8]
 260 0018 21EA0001 		bic	r1, r1, r0
 261 001c 5161     		str	r1, [r2, #20]
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 262              		.loc 1 325 3 view .LVU58
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 263              		.loc 1 325 32 is_stmt 0 view .LVU59
 264 001e 284A     		ldr	r2, .L26+8
 265 0020 0240     		ands	r2, r2, r0
 325:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 266              		.loc 1 325 6 view .LVU60
 267 0022 002A     		cmp	r2, #0
 268 0024 2FD0     		beq	.L13
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 269              		.loc 1 328 5 is_stmt 1 view .LVU61
 328:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 270              		.loc 1 328 11 is_stmt 0 view .LVU62
 271 0026 254A     		ldr	r2, .L26+4
 272 0028 D468     		ldr	r4, [r2, #12]
 273              	.LVL12:
 274              	.L14:
 339:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 275              		.loc 1 339 3 is_stmt 1 view .LVU63
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 276              		.loc 1 342 3 view .LVU64
 342:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 277              		.loc 1 342 6 is_stmt 0 view .LVU65
 278 002a 53B1     		cbz	r3, .L15
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 279              		.loc 1 345 5 is_stmt 1 view .LVU66
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 280              		.loc 1 345 11 is_stmt 0 view .LVU67
 281 002c 2349     		ldr	r1, .L26+4
 282 002e 4A68     		ldr	r2, [r1, #4]
 345:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 36


 283              		.loc 1 345 22 view .LVU68
 284 0030 1A43     		orrs	r2, r2, r3
 285 0032 4A60     		str	r2, [r1, #4]
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 286              		.loc 1 348 5 is_stmt 1 view .LVU69
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 287              		.loc 1 348 5 view .LVU70
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 288              		.loc 1 348 5 view .LVU71
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 289              		.loc 1 348 5 view .LVU72
 290 0034 204A     		ldr	r2, .L26
 291 0036 1361     		str	r3, [r2, #16]
 348:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 292              		.loc 1 348 5 view .LVU73
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 293              		.loc 1 351 5 view .LVU74
 351:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 294              		.loc 1 351 29 is_stmt 0 view .LVU75
 295 0038 0022     		movs	r2, #0
 296 003a 8A60     		str	r2, [r1, #8]
 354:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 297              		.loc 1 354 5 is_stmt 1 view .LVU76
 298 003c 2046     		mov	r0, r4
 299 003e FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 300              	.LVL13:
 301              	.L15:
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 302              		.loc 1 358 3 view .LVU77
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 303              		.loc 1 358 7 is_stmt 0 view .LVU78
 304 0042 1D4B     		ldr	r3, .L26
 305 0044 1B69     		ldr	r3, [r3, #16]
 358:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 306              		.loc 1 358 6 view .LVU79
 307 0046 13F0010F 		tst	r3, #1
 308 004a 0CD0     		beq	.L17
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 309              		.loc 1 361 5 is_stmt 1 discriminator 4 view .LVU80
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 310              		.loc 1 361 5 discriminator 4 view .LVU81
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 311              		.loc 1 361 5 discriminator 4 view .LVU82
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 312              		.loc 1 361 5 discriminator 4 view .LVU83
 313 004c 1A4B     		ldr	r3, .L26
 314 004e 0122     		movs	r2, #1
 315 0050 1A61     		str	r2, [r3, #16]
 361:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 316              		.loc 1 361 5 discriminator 4 view .LVU84
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 317              		.loc 1 363 5 discriminator 4 view .LVU85
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 318              		.loc 1 363 15 is_stmt 0 discriminator 4 view .LVU86
 319 0052 1A4B     		ldr	r3, .L26+4
 320 0054 9B68     		ldr	r3, [r3, #8]
 363:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 37


 321              		.loc 1 363 8 discriminator 4 view .LVU87
 322 0056 022B     		cmp	r3, #2
 323 0058 1ED0     		beq	.L24
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 324              		.loc 1 384 7 is_stmt 1 view .LVU88
 384:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 325              		.loc 1 384 31 is_stmt 0 view .LVU89
 326 005a 184B     		ldr	r3, .L26+4
 327 005c 0022     		movs	r2, #0
 328 005e 9A60     		str	r2, [r3, #8]
 329              	.L20:
 388:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 330              		.loc 1 388 5 is_stmt 1 view .LVU90
 331 0060 2046     		mov	r0, r4
 332 0062 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 333              	.LVL14:
 334              	.L17:
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 335              		.loc 1 391 3 view .LVU91
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 336              		.loc 1 391 13 is_stmt 0 view .LVU92
 337 0066 154B     		ldr	r3, .L26+4
 338 0068 9B68     		ldr	r3, [r3, #8]
 391:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 339              		.loc 1 391 6 view .LVU93
 340 006a 5BB9     		cbnz	r3, .L12
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 341              		.loc 1 394 5 is_stmt 1 discriminator 1 view .LVU94
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 342              		.loc 1 394 5 discriminator 1 view .LVU95
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 343              		.loc 1 394 5 discriminator 1 view .LVU96
 344 006c 124B     		ldr	r3, .L26
 345 006e 9A69     		ldr	r2, [r3, #24]
 346 0070 22F08072 		bic	r2, r2, #16777216
 347 0074 9A61     		str	r2, [r3, #24]
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 348              		.loc 1 394 5 discriminator 1 view .LVU97
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 349              		.loc 1 394 5 discriminator 1 view .LVU98
 350 0076 5A69     		ldr	r2, [r3, #20]
 351 0078 22F04072 		bic	r2, r2, #50331648
 352 007c 5A61     		str	r2, [r3, #20]
 394:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 353              		.loc 1 394 5 discriminator 1 view .LVU99
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 354              		.loc 1 397 5 discriminator 1 view .LVU100
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 355              		.loc 1 397 5 discriminator 1 view .LVU101
 356 007e 0F4B     		ldr	r3, .L26+4
 357 0080 0022     		movs	r2, #0
 358 0082 1A70     		strb	r2, [r3]
 397:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 359              		.loc 1 397 5 discriminator 1 view .LVU102
 360              	.L12:
 399:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 361              		.loc 1 399 1 is_stmt 0 view .LVU103
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 38


 362 0084 10BD     		pop	{r4, pc}
 363              	.LVL15:
 364              	.L13:
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 365              		.loc 1 330 8 is_stmt 1 view .LVU104
 330:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 366              		.loc 1 330 11 is_stmt 0 view .LVU105
 367 0086 10F0060F 		tst	r0, #6
 368 008a 02D0     		beq	.L22
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 369              		.loc 1 333 5 is_stmt 1 view .LVU106
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 370              		.loc 1 333 11 is_stmt 0 view .LVU107
 371 008c 0B4A     		ldr	r2, .L26+4
 372 008e 1469     		ldr	r4, [r2, #16]
 373              	.LVL16:
 333:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 374              		.loc 1 333 11 view .LVU108
 375 0090 CBE7     		b	.L14
 376              	.LVL17:
 377              	.L22:
 306:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 378              		.loc 1 306 12 view .LVU109
 379 0092 4FF0FF34 		mov	r4, #-1
 380 0096 C8E7     		b	.L14
 381              	.LVL18:
 382              	.L24:
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 383              		.loc 1 366 7 is_stmt 1 view .LVU110
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 384              		.loc 1 366 13 is_stmt 0 view .LVU111
 385 0098 084A     		ldr	r2, .L26+4
 386 009a 5369     		ldr	r3, [r2, #20]
 366:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 387              		.loc 1 366 28 view .LVU112
 388 009c 013B     		subs	r3, r3, #1
 389 009e 5361     		str	r3, [r2, #20]
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 390              		.loc 1 369 7 is_stmt 1 view .LVU113
 369:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       {
 391              		.loc 1 369 10 is_stmt 0 view .LVU114
 392 00a0 1BB9     		cbnz	r3, .L25
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 393              		.loc 1 378 9 is_stmt 1 view .LVU115
 378:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 394              		.loc 1 378 33 is_stmt 0 view .LVU116
 395 00a2 064B     		ldr	r3, .L26+4
 396 00a4 0022     		movs	r2, #0
 397 00a6 9A60     		str	r2, [r3, #8]
 398 00a8 DAE7     		b	.L20
 399              	.L25:
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 400              		.loc 1 372 9 is_stmt 1 view .LVU117
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
 401              		.loc 1 372 15 is_stmt 0 view .LVU118
 402 00aa 1069     		ldr	r0, [r2, #16]
 372:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****         FLASH_PageErase(pFlash.Page);
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 39


 403              		.loc 1 372 20 view .LVU119
 404 00ac 0130     		adds	r0, r0, #1
 405 00ae 1061     		str	r0, [r2, #16]
 373:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****       }
 406              		.loc 1 373 9 is_stmt 1 view .LVU120
 407 00b0 FFF7FEFF 		bl	FLASH_PageErase
 408              	.LVL19:
 409 00b4 D4E7     		b	.L20
 410              	.L27:
 411 00b6 00BF     		.align	2
 412              	.L26:
 413 00b8 00400058 		.word	1476411392
 414 00bc 00000000 		.word	pFlash
 415 00c0 01000400 		.word	262145
 416              		.cfi_endproc
 417              	.LFE853:
 419              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 420              		.align	1
 421              		.global	HAL_FLASH_Unlock
 422              		.syntax unified
 423              		.thumb
 424              		.thumb_func
 426              	HAL_FLASH_Unlock:
 427              	.LFB856:
 461:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 428              		.loc 1 461 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 433              		.loc 1 462 3 view .LVU122
 434              	.LVL20:
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 435              		.loc 1 464 3 view .LVU123
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 436              		.loc 1 464 7 is_stmt 0 view .LVU124
 437 0000 094B     		ldr	r3, .L33
 438 0002 5B69     		ldr	r3, [r3, #20]
 464:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 439              		.loc 1 464 6 view .LVU125
 440 0004 002B     		cmp	r3, #0
 441 0006 01DB     		blt	.L32
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 442              		.loc 1 462 21 view .LVU126
 443 0008 0020     		movs	r0, #0
 444 000a 7047     		bx	lr
 445              	.L32:
 467:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 446              		.loc 1 467 5 is_stmt 1 view .LVU127
 447 000c 064B     		ldr	r3, .L33
 448 000e 074A     		ldr	r2, .L33+4
 449 0010 9A60     		str	r2, [r3, #8]
 468:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 450              		.loc 1 468 5 view .LVU128
 451 0012 02F18832 		add	r2, r2, #-2004318072
 452 0016 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 40


 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 453              		.loc 1 471 5 view .LVU129
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 454              		.loc 1 471 9 is_stmt 0 view .LVU130
 455 0018 5B69     		ldr	r3, [r3, #20]
 471:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 456              		.loc 1 471 8 view .LVU131
 457 001a 002B     		cmp	r3, #0
 458 001c 01DB     		blt	.L31
 462:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 459              		.loc 1 462 21 view .LVU132
 460 001e 0020     		movs	r0, #0
 461 0020 7047     		bx	lr
 462              	.L31:
 473:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 463              		.loc 1 473 14 view .LVU133
 464 0022 0120     		movs	r0, #1
 465              	.LVL21:
 477:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 466              		.loc 1 477 3 is_stmt 1 view .LVU134
 478:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 467              		.loc 1 478 1 is_stmt 0 view .LVU135
 468 0024 7047     		bx	lr
 469              	.L34:
 470 0026 00BF     		.align	2
 471              	.L33:
 472 0028 00400058 		.word	1476411392
 473 002c 23016745 		.word	1164378403
 474              		.cfi_endproc
 475              	.LFE856:
 477              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 478              		.align	1
 479              		.global	HAL_FLASH_Lock
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 484              	HAL_FLASH_Lock:
 485              	.LFB857:
 485:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 486              		.loc 1 485 1 is_stmt 1 view -0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 0
 489              		@ frame_needed = 0, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 491              		.loc 1 486 3 view .LVU137
 492              	.LVL22:
 490:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 493              		.loc 1 490 3 view .LVU138
 494 0000 054B     		ldr	r3, .L39
 495 0002 5A69     		ldr	r2, [r3, #20]
 496 0004 42F00042 		orr	r2, r2, #-2147483648
 497 0008 5A61     		str	r2, [r3, #20]
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 498              		.loc 1 493 3 view .LVU139
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 499              		.loc 1 493 7 is_stmt 0 view .LVU140
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 41


 500 000a 5B69     		ldr	r3, [r3, #20]
 493:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 501              		.loc 1 493 6 view .LVU141
 502 000c 002B     		cmp	r3, #0
 503 000e 01DB     		blt	.L38
 495:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 504              		.loc 1 495 12 view .LVU142
 505 0010 0120     		movs	r0, #1
 506              	.LVL23:
 498:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 507              		.loc 1 498 3 is_stmt 1 view .LVU143
 499:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 508              		.loc 1 499 1 is_stmt 0 view .LVU144
 509 0012 7047     		bx	lr
 510              	.LVL24:
 511              	.L38:
 486:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 512              		.loc 1 486 21 view .LVU145
 513 0014 0020     		movs	r0, #0
 514 0016 7047     		bx	lr
 515              	.L40:
 516              		.align	2
 517              	.L39:
 518 0018 00400058 		.word	1476411392
 519              		.cfi_endproc
 520              	.LFE857:
 522              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 523              		.align	1
 524              		.global	HAL_FLASH_OB_Unlock
 525              		.syntax unified
 526              		.thumb
 527              		.thumb_func
 529              	HAL_FLASH_OB_Unlock:
 530              	.LFB858:
 506:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 531              		.loc 1 506 1 is_stmt 1 view -0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 536              		.loc 1 507 3 view .LVU147
 537              	.LVL25:
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 538              		.loc 1 510 3 view .LVU148
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 539              		.loc 1 510 7 is_stmt 0 view .LVU149
 540 0000 0A4B     		ldr	r3, .L45
 541 0002 5B69     		ldr	r3, [r3, #20]
 510:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 542              		.loc 1 510 6 view .LVU150
 543 0004 13F0804F 		tst	r3, #1073741824
 544 0008 0BD0     		beq	.L43
 513:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 545              		.loc 1 513 5 is_stmt 1 view .LVU151
 546 000a 084B     		ldr	r3, .L45
 547 000c 084A     		ldr	r2, .L45+4
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 42


 548 000e DA60     		str	r2, [r3, #12]
 514:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 549              		.loc 1 514 5 view .LVU152
 550 0010 02F14432 		add	r2, r2, #1145324612
 551 0014 DA60     		str	r2, [r3, #12]
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 552              		.loc 1 517 5 view .LVU153
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 553              		.loc 1 517 9 is_stmt 0 view .LVU154
 554 0016 5B69     		ldr	r3, [r3, #20]
 517:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 555              		.loc 1 517 8 view .LVU155
 556 0018 13F0804F 		tst	r3, #1073741824
 557 001c 03D0     		beq	.L44
 507:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 558              		.loc 1 507 21 view .LVU156
 559 001e 0120     		movs	r0, #1
 560 0020 7047     		bx	lr
 561              	.L43:
 562 0022 0120     		movs	r0, #1
 563 0024 7047     		bx	lr
 564              	.L44:
 519:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 565              		.loc 1 519 14 view .LVU157
 566 0026 0020     		movs	r0, #0
 567              	.LVL26:
 523:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 568              		.loc 1 523 3 is_stmt 1 view .LVU158
 524:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 569              		.loc 1 524 1 is_stmt 0 view .LVU159
 570 0028 7047     		bx	lr
 571              	.L46:
 572 002a 00BF     		.align	2
 573              	.L45:
 574 002c 00400058 		.word	1476411392
 575 0030 3B2A1908 		.word	135866939
 576              		.cfi_endproc
 577              	.LFE858:
 579              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 580              		.align	1
 581              		.global	HAL_FLASH_OB_Lock
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	HAL_FLASH_OB_Lock:
 587              	.LFB859:
 531:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 588              		.loc 1 531 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 593              		.loc 1 532 3 view .LVU161
 594              	.LVL27:
 536:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 595              		.loc 1 536 3 view .LVU162
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 43


 596 0000 064B     		ldr	r3, .L50
 597 0002 5A69     		ldr	r2, [r3, #20]
 598 0004 42F08042 		orr	r2, r2, #1073741824
 599 0008 5A61     		str	r2, [r3, #20]
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 600              		.loc 1 539 3 view .LVU163
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 601              		.loc 1 539 7 is_stmt 0 view .LVU164
 602 000a 5B69     		ldr	r3, [r3, #20]
 539:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 603              		.loc 1 539 6 view .LVU165
 604 000c 13F0804F 		tst	r3, #1073741824
 605 0010 01D0     		beq	.L49
 532:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 606              		.loc 1 532 21 view .LVU166
 607 0012 0020     		movs	r0, #0
 608 0014 7047     		bx	lr
 609              	.L49:
 541:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 610              		.loc 1 541 12 view .LVU167
 611 0016 0120     		movs	r0, #1
 612              	.LVL28:
 544:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 613              		.loc 1 544 3 is_stmt 1 view .LVU168
 545:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 614              		.loc 1 545 1 is_stmt 0 view .LVU169
 615 0018 7047     		bx	lr
 616              	.L51:
 617 001a 00BF     		.align	2
 618              	.L50:
 619 001c 00400058 		.word	1476411392
 620              		.cfi_endproc
 621              	.LFE859:
 623              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 624              		.align	1
 625              		.global	HAL_FLASH_OB_Launch
 626              		.syntax unified
 627              		.thumb
 628              		.thumb_func
 630              	HAL_FLASH_OB_Launch:
 631              	.LFB860:
 552:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 632              		.loc 1 552 1 is_stmt 1 view -0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 555:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 637              		.loc 1 555 3 view .LVU171
 638 0000 034A     		ldr	r2, .L53
 639 0002 5369     		ldr	r3, [r2, #20]
 640 0004 43F00063 		orr	r3, r3, #134217728
 641 0008 5361     		str	r3, [r2, #20]
 559:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 642              		.loc 1 559 3 view .LVU172
 560:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 643              		.loc 1 560 1 is_stmt 0 view .LVU173
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 44


 644 000a 0120     		movs	r0, #1
 645 000c 7047     		bx	lr
 646              	.L54:
 647 000e 00BF     		.align	2
 648              	.L53:
 649 0010 00400058 		.word	1476411392
 650              		.cfi_endproc
 651              	.LFE860:
 653              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 654              		.align	1
 655              		.global	HAL_FLASH_GetError
 656              		.syntax unified
 657              		.thumb
 658              		.thumb_func
 660              	HAL_FLASH_GetError:
 661              	.LFB861:
 596:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   return pFlash.ErrorCode;
 662              		.loc 1 596 1 is_stmt 1 view -0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 597:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 667              		.loc 1 597 3 view .LVU175
 598:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 668              		.loc 1 598 1 is_stmt 0 view .LVU176
 669 0000 014B     		ldr	r3, .L56
 670 0002 5868     		ldr	r0, [r3, #4]
 671 0004 7047     		bx	lr
 672              	.L57:
 673 0006 00BF     		.align	2
 674              	.L56:
 675 0008 00000000 		.word	pFlash
 676              		.cfi_endproc
 677              	.LFE861:
 679              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 680              		.align	1
 681              		.global	FLASH_WaitForLastOperation
 682              		.syntax unified
 683              		.thumb
 684              		.thumb_func
 686              	FLASH_WaitForLastOperation:
 687              	.LVL29:
 688              	.LFB862:
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 689              		.loc 1 620 1 is_stmt 1 view -0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 620:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t error;
 693              		.loc 1 620 1 is_stmt 0 view .LVU178
 694 0000 38B5     		push	{r3, r4, r5, lr}
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 3, -16
 697              		.cfi_offset 4, -12
 698              		.cfi_offset 5, -8
 699              		.cfi_offset 14, -4
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 45


 700 0002 0546     		mov	r5, r0
 621:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 701              		.loc 1 621 3 is_stmt 1 view .LVU179
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 702              		.loc 1 622 3 view .LVU180
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 703              		.loc 1 622 24 is_stmt 0 view .LVU181
 704 0004 FFF7FEFF 		bl	HAL_GetTick
 705              	.LVL30:
 622:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 706              		.loc 1 622 24 view .LVU182
 707 0008 0446     		mov	r4, r0
 708              	.LVL31:
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 709              		.loc 1 627 3 is_stmt 1 view .LVU183
 710              	.L59:
 627:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 711              		.loc 1 627 10 view .LVU184
 712 000a 1B4B     		ldr	r3, .L73
 713 000c 1B69     		ldr	r3, [r3, #16]
 714 000e 13F4803F 		tst	r3, #65536
 715 0012 06D0     		beq	.L70
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 716              		.loc 1 629 5 view .LVU185
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 717              		.loc 1 629 10 is_stmt 0 view .LVU186
 718 0014 FFF7FEFF 		bl	HAL_GetTick
 719              	.LVL32:
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 720              		.loc 1 629 24 view .LVU187
 721 0018 001B     		subs	r0, r0, r4
 629:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 722              		.loc 1 629 8 view .LVU188
 723 001a A842     		cmp	r0, r5
 724 001c F5D3     		bcc	.L59
 631:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 725              		.loc 1 631 14 view .LVU189
 726 001e 0320     		movs	r0, #3
 727              	.L60:
 674:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 728              		.loc 1 674 1 view .LVU190
 729 0020 38BD     		pop	{r3, r4, r5, pc}
 730              	.LVL33:
 731              	.L70:
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 732              		.loc 1 640 3 is_stmt 1 view .LVU191
 640:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 733              		.loc 1 640 9 is_stmt 0 view .LVU192
 734 0022 154B     		ldr	r3, .L73
 735 0024 1B69     		ldr	r3, [r3, #16]
 736              	.LVL34:
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 737              		.loc 1 644 3 is_stmt 1 view .LVU193
 644:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 738              		.loc 1 644 6 is_stmt 0 view .LVU194
 739 0026 13F0010F 		tst	r3, #1
 740 002a 15D1     		bne	.L62
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 46


 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 741              		.loc 1 647 5 is_stmt 1 view .LVU195
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 742              		.loc 1 651 3 view .LVU196
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 743              		.loc 1 651 9 is_stmt 0 view .LVU197
 744 002c 23F47053 		bic	r3, r3, #15360
 745              	.LVL35:
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 746              		.loc 1 651 9 view .LVU198
 747 0030 23F00503 		bic	r3, r3, #5
 748 0034 1B04     		lsls	r3, r3, #16
 749 0036 1B0C     		lsrs	r3, r3, #16
 750              	.LVL36:
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 751              		.loc 1 654 3 is_stmt 1 view .LVU199
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 752              		.loc 1 654 3 view .LVU200
 753              	.L63:
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 754              		.loc 1 654 3 discriminator 3 view .LVU201
 755 0038 0BB1     		cbz	r3, .L64
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 756              		.loc 1 654 3 discriminator 4 view .LVU202
 757 003a 0F4A     		ldr	r2, .L73
 758 003c 1361     		str	r3, [r2, #16]
 759              	.L64:
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 760              		.loc 1 654 3 discriminator 6 view .LVU203
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 761              		.loc 1 656 3 discriminator 6 view .LVU204
 656:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 762              		.loc 1 656 6 is_stmt 0 discriminator 6 view .LVU205
 763 003e ABB9     		cbnz	r3, .L71
 764              	.LVL37:
 765              	.L65:
 665:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 766              		.loc 1 665 10 is_stmt 1 view .LVU206
 767 0040 0D4B     		ldr	r3, .L73
 768 0042 1B69     		ldr	r3, [r3, #16]
 769 0044 13F4802F 		tst	r3, #262144
 770 0048 14D0     		beq	.L72
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 771              		.loc 1 667 5 view .LVU207
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 772              		.loc 1 667 10 is_stmt 0 view .LVU208
 773 004a FFF7FEFF 		bl	HAL_GetTick
 774              	.LVL38:
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 775              		.loc 1 667 24 view .LVU209
 776 004e 001B     		subs	r0, r0, r4
 667:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 777              		.loc 1 667 8 view .LVU210
 778 0050 A842     		cmp	r0, r5
 779 0052 F5D3     		bcc	.L65
 669:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 780              		.loc 1 669 14 view .LVU211
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 47


 781 0054 0320     		movs	r0, #3
 782 0056 E3E7     		b	.L60
 783              	.LVL39:
 784              	.L62:
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 785              		.loc 1 647 5 is_stmt 1 discriminator 4 view .LVU212
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 786              		.loc 1 647 5 discriminator 4 view .LVU213
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 787              		.loc 1 647 5 discriminator 4 view .LVU214
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 788              		.loc 1 647 5 discriminator 4 view .LVU215
 789 0058 074A     		ldr	r2, .L73
 790 005a 0121     		movs	r1, #1
 791 005c 1161     		str	r1, [r2, #16]
 647:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 792              		.loc 1 647 5 discriminator 4 view .LVU216
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 793              		.loc 1 651 3 discriminator 4 view .LVU217
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 794              		.loc 1 651 9 is_stmt 0 discriminator 4 view .LVU218
 795 005e 23F47053 		bic	r3, r3, #15360
 796              	.LVL40:
 651:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 797              		.loc 1 651 9 discriminator 4 view .LVU219
 798 0062 23F00503 		bic	r3, r3, #5
 799 0066 1B04     		lsls	r3, r3, #16
 800 0068 1B0C     		lsrs	r3, r3, #16
 801              	.LVL41:
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 802              		.loc 1 654 3 is_stmt 1 discriminator 4 view .LVU220
 654:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 803              		.loc 1 654 3 discriminator 4 view .LVU221
 804 006a E5E7     		b	.L63
 805              	.L71:
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 806              		.loc 1 659 5 view .LVU222
 659:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 807              		.loc 1 659 22 is_stmt 0 view .LVU223
 808 006c 034A     		ldr	r2, .L73+4
 809 006e 5360     		str	r3, [r2, #4]
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 810              		.loc 1 661 5 is_stmt 1 view .LVU224
 661:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 811              		.loc 1 661 12 is_stmt 0 view .LVU225
 812 0070 0120     		movs	r0, #1
 813 0072 D5E7     		b	.L60
 814              	.LVL42:
 815              	.L72:
 673:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 816              		.loc 1 673 10 view .LVU226
 817 0074 0020     		movs	r0, #0
 818 0076 D3E7     		b	.L60
 819              	.L74:
 820              		.align	2
 821              	.L73:
 822 0078 00400058 		.word	1476411392
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 48


 823 007c 00000000 		.word	pFlash
 824              		.cfi_endproc
 825              	.LFE862:
 827              		.section	.text.HAL_FLASH_Program,"ax",%progbits
 828              		.align	1
 829              		.global	HAL_FLASH_Program
 830              		.syntax unified
 831              		.thumb
 832              		.thumb_func
 834              	HAL_FLASH_Program:
 835              	.LVL43:
 836              	.LFB851:
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 837              		.loc 1 179 1 is_stmt 1 view -0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 0
 840              		@ frame_needed = 0, uses_anonymous_args = 0
 179:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 841              		.loc 1 179 1 is_stmt 0 view .LVU228
 842 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 843              		.cfi_def_cfa_offset 24
 844              		.cfi_offset 3, -24
 845              		.cfi_offset 4, -20
 846              		.cfi_offset 5, -16
 847              		.cfi_offset 6, -12
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 1F46     		mov	r7, r3
 180:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 851              		.loc 1 180 3 is_stmt 1 view .LVU229
 183:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 852              		.loc 1 183 3 view .LVU230
 184:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 853              		.loc 1 184 3 view .LVU231
 185:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 854              		.loc 1 185 3 view .LVU232
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 855              		.loc 1 188 3 view .LVU233
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 856              		.loc 1 188 3 view .LVU234
 857 0004 154B     		ldr	r3, .L83
 858 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 859 0008 012B     		cmp	r3, #1
 860 000a 25D0     		beq	.L80
 861 000c 0446     		mov	r4, r0
 862 000e 0D46     		mov	r5, r1
 863 0010 1646     		mov	r6, r2
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 864              		.loc 1 188 3 discriminator 2 view .LVU235
 865 0012 124B     		ldr	r3, .L83
 866 0014 0122     		movs	r2, #1
 867              	.LVL44:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 868              		.loc 1 188 3 is_stmt 0 discriminator 2 view .LVU236
 869 0016 1A70     		strb	r2, [r3]
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 870              		.loc 1 188 3 is_stmt 1 discriminator 2 view .LVU237
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 49


 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 871              		.loc 1 191 3 discriminator 2 view .LVU238
 191:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 872              		.loc 1 191 20 is_stmt 0 discriminator 2 view .LVU239
 873 0018 0022     		movs	r2, #0
 874 001a 5A60     		str	r2, [r3, #4]
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 875              		.loc 1 194 3 is_stmt 1 discriminator 2 view .LVU240
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 876              		.loc 1 194 12 is_stmt 0 discriminator 2 view .LVU241
 877 001c 4FF47A70 		mov	r0, #1000
 878              	.LVL45:
 194:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 879              		.loc 1 194 12 discriminator 2 view .LVU242
 880 0020 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 881              	.LVL46:
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 882              		.loc 1 196 3 is_stmt 1 discriminator 2 view .LVU243
 196:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 883              		.loc 1 196 6 is_stmt 0 discriminator 2 view .LVU244
 884 0024 70B9     		cbnz	r0, .L77
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 885              		.loc 1 198 5 is_stmt 1 view .LVU245
 198:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 886              		.loc 1 198 8 is_stmt 0 view .LVU246
 887 0026 012C     		cmp	r4, #1
 888 0028 10D0     		beq	.L82
 209:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 889              		.loc 1 209 7 is_stmt 1 view .LVU247
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 890              		.loc 1 212 7 view .LVU248
 891 002a 3146     		mov	r1, r6
 892 002c 2846     		mov	r0, r5
 893              	.LVL47:
 212:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 894              		.loc 1 212 7 is_stmt 0 view .LVU249
 895 002e FFF7FEFF 		bl	FLASH_Program_Fast
 896              	.LVL48:
 897              	.L79:
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 898              		.loc 1 216 5 is_stmt 1 view .LVU250
 216:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 899              		.loc 1 216 14 is_stmt 0 view .LVU251
 900 0032 4FF47A70 		mov	r0, #1000
 901 0036 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 902              	.LVL49:
 222:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** #endif
 903              		.loc 1 222 5 is_stmt 1 view .LVU252
 904 003a 094A     		ldr	r2, .L83+4
 905 003c 5369     		ldr	r3, [r2, #20]
 906 003e 23EA0403 		bic	r3, r3, r4
 907 0042 5361     		str	r3, [r2, #20]
 908              	.L77:
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 909              		.loc 1 227 3 view .LVU253
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 910              		.loc 1 227 3 view .LVU254
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 50


 911 0044 054B     		ldr	r3, .L83
 912 0046 0022     		movs	r2, #0
 913 0048 1A70     		strb	r2, [r3]
 227:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 914              		.loc 1 227 3 view .LVU255
 230:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** }
 915              		.loc 1 230 3 view .LVU256
 916              	.LVL50:
 917              	.L76:
 231:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 918              		.loc 1 231 1 is_stmt 0 view .LVU257
 919 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 920              	.LVL51:
 921              	.L82:
 201:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 922              		.loc 1 201 7 is_stmt 1 view .LVU258
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 923              		.loc 1 204 7 view .LVU259
 924 004c 3246     		mov	r2, r6
 925 004e 3B46     		mov	r3, r7
 926 0050 2846     		mov	r0, r5
 927              	.LVL52:
 204:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 928              		.loc 1 204 7 is_stmt 0 view .LVU260
 929 0052 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 930              	.LVL53:
 931 0056 ECE7     		b	.L79
 932              	.LVL54:
 933              	.L80:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 934              		.loc 1 188 3 view .LVU261
 935 0058 0220     		movs	r0, #2
 936              	.LVL55:
 188:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 937              		.loc 1 188 3 view .LVU262
 938 005a F6E7     		b	.L76
 939              	.L84:
 940              		.align	2
 941              	.L83:
 942 005c 00000000 		.word	pFlash
 943 0060 00400058 		.word	1476411392
 944              		.cfi_endproc
 945              	.LFE851:
 947              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 948              		.align	1
 949              		.global	HAL_FLASH_Program_IT
 950              		.syntax unified
 951              		.thumb
 952              		.thumb_func
 954              	HAL_FLASH_Program_IT:
 955              	.LVL56:
 956              	.LFB852:
 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 957              		.loc 1 247 1 is_stmt 1 view -0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 0
 960              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 51


 247:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   HAL_StatusTypeDef status;
 961              		.loc 1 247 1 is_stmt 0 view .LVU264
 962 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 963              		.cfi_def_cfa_offset 24
 964              		.cfi_offset 4, -24
 965              		.cfi_offset 5, -20
 966              		.cfi_offset 6, -16
 967              		.cfi_offset 7, -12
 968              		.cfi_offset 8, -8
 969              		.cfi_offset 14, -4
 970 0004 1646     		mov	r6, r2
 248:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 971              		.loc 1 248 3 is_stmt 1 view .LVU265
 251:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_ADDR_ALIGNED_64BITS(Address));
 972              		.loc 1 251 3 view .LVU266
 252:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 973              		.loc 1 252 3 view .LVU267
 253:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 974              		.loc 1 253 3 view .LVU268
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 975              		.loc 1 256 3 view .LVU269
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 976              		.loc 1 256 3 view .LVU270
 977 0006 1A4A     		ldr	r2, .L92
 978              	.LVL57:
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 979              		.loc 1 256 3 is_stmt 0 view .LVU271
 980 0008 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 981 000a 012A     		cmp	r2, #1
 982 000c 2CD0     		beq	.L89
 983 000e 0446     		mov	r4, r0
 984 0010 0D46     		mov	r5, r1
 985 0012 1F46     		mov	r7, r3
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 986              		.loc 1 256 3 is_stmt 1 discriminator 2 view .LVU272
 987 0014 164A     		ldr	r2, .L92
 988 0016 0123     		movs	r3, #1
 989 0018 1370     		strb	r3, [r2]
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 990              		.loc 1 256 3 discriminator 2 view .LVU273
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 991              		.loc 1 259 3 discriminator 2 view .LVU274
 259:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 992              		.loc 1 259 20 is_stmt 0 discriminator 2 view .LVU275
 993 001a 0023     		movs	r3, #0
 994 001c 5360     		str	r3, [r2, #4]
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 995              		.loc 1 262 3 is_stmt 1 discriminator 2 view .LVU276
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 996              		.loc 1 262 12 is_stmt 0 discriminator 2 view .LVU277
 997 001e 4FF47A70 		mov	r0, #1000
 998              	.LVL58:
 262:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 999              		.loc 1 262 12 discriminator 2 view .LVU278
 1000 0022 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1001              	.LVL59:
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 52


 1002              		.loc 1 264 3 is_stmt 1 discriminator 2 view .LVU279
 264:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   {
 1003              		.loc 1 264 6 is_stmt 0 discriminator 2 view .LVU280
 1004 0026 8046     		mov	r8, r0
 1005 0028 28B1     		cbz	r0, .L87
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 1006              		.loc 1 267 5 is_stmt 1 view .LVU281
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 1007              		.loc 1 267 5 view .LVU282
 1008 002a 114B     		ldr	r3, .L92
 1009 002c 0022     		movs	r2, #0
 1010 002e 1A70     		strb	r2, [r3]
 267:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****   }
 1011              		.loc 1 267 5 view .LVU283
 1012              	.LVL60:
 1013              	.L86:
 298:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1014              		.loc 1 298 1 is_stmt 0 view .LVU284
 1015 0030 4046     		mov	r0, r8
 1016 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1017              	.LVL61:
 1018              	.L87:
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 1019              		.loc 1 272 5 is_stmt 1 view .LVU285
 272:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     pFlash.Address = Address;
 1020              		.loc 1 272 29 is_stmt 0 view .LVU286
 1021 0036 0E4B     		ldr	r3, .L92
 1022 0038 9C60     		str	r4, [r3, #8]
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1023              		.loc 1 273 5 is_stmt 1 view .LVU287
 273:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1024              		.loc 1 273 20 is_stmt 0 view .LVU288
 1025 003a DD60     		str	r5, [r3, #12]
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1026              		.loc 1 276 5 is_stmt 1 view .LVU289
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1027              		.loc 1 276 5 view .LVU290
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1028              		.loc 1 276 5 view .LVU291
 1029 003c 0D4B     		ldr	r3, .L92+4
 1030 003e 9A69     		ldr	r2, [r3, #24]
 1031 0040 42F08072 		orr	r2, r2, #16777216
 1032 0044 9A61     		str	r2, [r3, #24]
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1033              		.loc 1 276 5 view .LVU292
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1034              		.loc 1 276 5 view .LVU293
 1035 0046 5A69     		ldr	r2, [r3, #20]
 1036 0048 42F04072 		orr	r2, r2, #50331648
 1037 004c 5A61     		str	r2, [r3, #20]
 276:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1038              		.loc 1 276 5 view .LVU294
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 1039              		.loc 1 278 5 view .LVU295
 278:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     {
 1040              		.loc 1 278 8 is_stmt 0 view .LVU296
 1041 004e 012C     		cmp	r4, #1
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 53


 1042 0050 04D0     		beq	.L91
 289:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1043              		.loc 1 289 7 is_stmt 1 view .LVU297
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1044              		.loc 1 292 7 view .LVU298
 1045 0052 3146     		mov	r1, r6
 1046 0054 2846     		mov	r0, r5
 1047              	.LVL62:
 292:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1048              		.loc 1 292 7 is_stmt 0 view .LVU299
 1049 0056 FFF7FEFF 		bl	FLASH_Program_Fast
 1050              	.LVL63:
 1051 005a E9E7     		b	.L86
 1052              	.LVL64:
 1053              	.L91:
 281:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1054              		.loc 1 281 7 is_stmt 1 view .LVU300
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1055              		.loc 1 284 7 view .LVU301
 1056 005c 3246     		mov	r2, r6
 1057 005e 3B46     		mov	r3, r7
 1058 0060 2846     		mov	r0, r5
 1059              	.LVL65:
 284:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c ****     }
 1060              		.loc 1 284 7 is_stmt 0 view .LVU302
 1061 0062 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 1062              	.LVL66:
 1063 0066 E3E7     		b	.L86
 1064              	.LVL67:
 1065              	.L89:
 256:Drivers/STM32WLxx_HAL_Driver/Src/stm32wlxx_hal_flash.c **** 
 1066              		.loc 1 256 3 view .LVU303
 1067 0068 4FF00208 		mov	r8, #2
 1068 006c E0E7     		b	.L86
 1069              	.L93:
 1070 006e 00BF     		.align	2
 1071              	.L92:
 1072 0070 00000000 		.word	pFlash
 1073 0074 00400058 		.word	1476411392
 1074              		.cfi_endproc
 1075              	.LFE852:
 1077              		.global	pFlash
 1078              		.section	.bss.pFlash,"aw",%nobits
 1079              		.align	2
 1082              	pFlash:
 1083 0000 00000000 		.space	24
 1083      00000000 
 1083      00000000 
 1083      00000000 
 1083      00000000 
 1084              		.text
 1085              	.Letext0:
 1086              		.file 3 "c:\\users\\david.fobar\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode
 1087              		.file 4 "c:\\users\\david.fobar\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode
 1088              		.file 5 "Drivers/CMSIS/Device/ST/STM32WLxx/Include/stm32wle5xx.h"
 1089              		.file 6 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_def.h"
 1090              		.file 7 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_flash.h"
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 54


 1091              		.file 8 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_ll_dma.h"
 1092              		.file 9 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal.h"
 1093              		.file 10 "Drivers/STM32WLxx_HAL_Driver/Inc/stm32wlxx_hal_flash_ex.h"
ARM GAS  C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s 			page 55


DEFINED SYMBOLS
                            *ABS*:00000000 stm32wlxx_hal_flash.c
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:19     .text.FLASH_Program_DoubleWord:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:24     .text.FLASH_Program_DoubleWord:00000000 FLASH_Program_DoubleWord
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:70     .text.FLASH_Program_DoubleWord:00000018 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:75     .text.FLASH_Program_Fast:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:80     .text.FLASH_Program_Fast:00000000 FLASH_Program_Fast
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:180    .text.FLASH_Program_Fast:00000034 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:185    .text.HAL_FLASH_EndOfOperationCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:191    .text.HAL_FLASH_EndOfOperationCallback:00000000 HAL_FLASH_EndOfOperationCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:206    .text.HAL_FLASH_OperationErrorCallback:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:212    .text.HAL_FLASH_OperationErrorCallback:00000000 HAL_FLASH_OperationErrorCallback
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:227    .text.HAL_FLASH_IRQHandler:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:233    .text.HAL_FLASH_IRQHandler:00000000 HAL_FLASH_IRQHandler
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:413    .text.HAL_FLASH_IRQHandler:000000b8 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:1082   .bss.pFlash:00000000 pFlash
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:420    .text.HAL_FLASH_Unlock:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:426    .text.HAL_FLASH_Unlock:00000000 HAL_FLASH_Unlock
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:472    .text.HAL_FLASH_Unlock:00000028 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:478    .text.HAL_FLASH_Lock:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:484    .text.HAL_FLASH_Lock:00000000 HAL_FLASH_Lock
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:518    .text.HAL_FLASH_Lock:00000018 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:523    .text.HAL_FLASH_OB_Unlock:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:529    .text.HAL_FLASH_OB_Unlock:00000000 HAL_FLASH_OB_Unlock
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:574    .text.HAL_FLASH_OB_Unlock:0000002c $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:580    .text.HAL_FLASH_OB_Lock:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:586    .text.HAL_FLASH_OB_Lock:00000000 HAL_FLASH_OB_Lock
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:619    .text.HAL_FLASH_OB_Lock:0000001c $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:624    .text.HAL_FLASH_OB_Launch:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:630    .text.HAL_FLASH_OB_Launch:00000000 HAL_FLASH_OB_Launch
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:649    .text.HAL_FLASH_OB_Launch:00000010 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:654    .text.HAL_FLASH_GetError:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:660    .text.HAL_FLASH_GetError:00000000 HAL_FLASH_GetError
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:675    .text.HAL_FLASH_GetError:00000008 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:680    .text.FLASH_WaitForLastOperation:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:686    .text.FLASH_WaitForLastOperation:00000000 FLASH_WaitForLastOperation
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:822    .text.FLASH_WaitForLastOperation:00000078 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:828    .text.HAL_FLASH_Program:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:834    .text.HAL_FLASH_Program:00000000 HAL_FLASH_Program
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:942    .text.HAL_FLASH_Program:0000005c $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:948    .text.HAL_FLASH_Program_IT:00000000 $t
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:954    .text.HAL_FLASH_Program_IT:00000000 HAL_FLASH_Program_IT
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:1072   .text.HAL_FLASH_Program_IT:00000070 $d
C:\Users\DAVID~1.FOB\AppData\Local\Temp\cc0VFe96.s:1079   .bss.pFlash:00000000 $d

UNDEFINED SYMBOLS
FLASH_PageErase
HAL_GetTick
